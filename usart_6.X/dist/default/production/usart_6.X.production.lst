

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 20 13:41:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _LATCbits	set	3979
    60  0000                     _TXREG	set	4013
    61  0000                     _RCREG	set	4014
    62  0000                     _PIR1bits	set	3998
    63  0000                     _TRISCbits	set	3988
    64  0000                     _RCSTAbits	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _TXSTAbits	set	4012
    67  0000                     _BAUDCONbits	set	4024
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTD	set	3971
    70                           
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	opt stack 0
    74  000600  00                 	db	0
    75  000601                     STR_3:
    76  000601  4D                 	db	77	;'M'
    77  000602  75                 	db	117	;'u'
    78  000603  65                 	db	101	;'e'
    79  000604  73                 	db	115	;'s'
    80  000605  74                 	db	116	;'t'
    81  000606  72                 	db	114	;'r'
    82  000607  61                 	db	97	;'a'
    83  000608  20                 	db	32
    84  000609  63                 	db	99	;'c'
    85  00060A  61                 	db	97	;'a'
    86  00060B  72                 	db	114	;'r'
    87  00060C  61                 	db	97	;'a'
    88  00060D  63                 	db	99	;'c'
    89  00060E  74                 	db	116	;'t'
    90  00060F  65                 	db	101	;'e'
    91  000610  72                 	db	114	;'r'
    92  000611  65                 	db	101	;'e'
    93  000612  73                 	db	115	;'s'
    94  000613  0A                 	db	10
    95  000614  0D                 	db	13
    96  000615  00                 	db	0
    97  000616                     STR_1:
    98  000616  50                 	db	80	;'P'
    99  000617  75                 	db	117	;'u'
   100  000618  65                 	db	101	;'e'
   101  000619  72                 	db	114	;'r'
   102  00061A  74                 	db	116	;'t'
   103  00061B  6F                 	db	111	;'o'
   104  00061C  20                 	db	32
   105  00061D  53                 	db	83	;'S'
   106  00061E  65                 	db	101	;'e'
   107  00061F  72                 	db	114	;'r'
   108  000620  69                 	db	105	;'i'
   109  000621  61                 	db	97	;'a'
   110  000622  6C                 	db	108	;'l'
   111  000623  00                 	db	0
   112  000624                     STR_4:
   113  000624  6C                 	db	108	;'l'
   114  000625  65                 	db	101	;'e'
   115  000626  74                 	db	116	;'t'
   116  000627  72                 	db	114	;'r'
   117  000628  61                 	db	97	;'a'
   118  000629  3A                 	db	58	;':'
   119  00062A  20                 	db	32
   120  00062B  25                 	db	37
   121  00062C  63                 	db	99	;'c'
   122  00062D  0A                 	db	10
   123  00062E  0D                 	db	13
   124  00062F  00                 	db	0
   125  000630                     STR_5:
   126  000630  20                 	db	32
   127  000631  20                 	db	32
   128  000632  20                 	db	32
   129  000633  20                 	db	32
   130  000634  20                 	db	32
   131  000635  00                 	db	0
   132  000636                     STR_2:
   133  000636  68                 	db	104	;'h'
   134  000637  6F                 	db	111	;'o'
   135  000638  6C                 	db	108	;'l'
   136  000639  61                 	db	97	;'a'
   137  00063A  00                 	db	0
   138                           
   139                           ; #config settings
   140  00063B  00                 	db	0	; dummy byte at the end
   141  0000                     
   142                           	psect	cinit
   143  00097A                     __pcinit:
   144                           	opt stack 0
   145  00097A                     start_initialization:
   146                           	opt stack 0
   147  00097A                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Clear objects allocated to COMRAM (9 bytes)
   151  00097A  EE00  F00D         	lfsr	0,__pbssCOMRAM
   152  00097E  0E09               	movlw	9
   153  000980                     clear_0:
   154  000980  6AEE               	clrf	postinc0,c
   155  000982  06E8               	decf	wreg,f,c
   156  000984  E1FD               	bnz	clear_0
   157  000986                     end_of_initialization:
   158                           	opt stack 0
   159  000986                     __end_of__initialization:
   160                           	opt stack 0
   161  000986  0E00               	movlw	low (__Lmediumconst shr (0+16))
   162  000988  6EF8               	movwf	tblptru,c
   163  00098A  0100               	movlb	0
   164  00098C  EF7D  F003         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssCOMRAM
   170  00000D                     __pbssCOMRAM:
   171                           	opt stack 0
   172  00000D                     _value:
   173                           	opt stack 0
   174  00000D                     	ds	8
   175  000015                     _lcd:
   176                           	opt stack 0
   177  000015                     	ds	1
   178                           tblptru	equ	0xFF8
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	cstackCOMRAM
   183  000001                     __pcstackCOMRAM:
   184                           	opt stack 0
   185  000001                     ??_lcd_lat:
   186  000001                     manda@dato:
   187                           	opt stack 0
   188  000001                     putch@dato:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x0
   192  000001                     	ds	1
   193  000002                     ??_lcd_dwr:
   194  000002                     ??_lcd_cmd:
   195  000002                     ?_printf:
   196                           	opt stack 0
   197  000002                     lcd_cmd_hf@x:
   198                           	opt stack 0
   199  000002                     printf@f:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x1
   203  000002                     	ds	1
   204  000003                     lcd_cmd@x:
   205                           	opt stack 0
   206  000003                     lcd_dwr@x:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000003                     	ds	1
   211  000004                     ??_lcd_init:
   212  000004                     lcd_putc@c:
   213                           	opt stack 0
   214  000004                     lcd_gotoxy@y:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x3
   218  000004                     	ds	1
   219  000005                     ??_lcd_gotoxy:
   220  000005                     lcd_msg@c:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x4
   224  000005                     	ds	1
   225  000006                     lcd_gotoxy@x:
   226                           	opt stack 0
   227  000006                     printf@flag:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x5
   231  000006                     	ds	1
   232  000007                     lcd_gotoxy@ADDRESS:
   233                           	opt stack 0
   234  000007                     printf@ap:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x6
   238  000007                     	ds	2
   239  000009                     printf@c:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x8
   243  000009                     	ds	1
   244  00000A                     ??_main:
   245                           
   246                           ; 1 bytes @ 0x9
   247  00000A                     	ds	2
   248  00000C                     main@x:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0xB
   252  00000C                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 39 in file "usart_6,c.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  x               1   11[COMRAM] unsigned char 
   267 ;;  c               1    0        unsigned char 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   277 ;;      Params:         0       0       0       0       0       0       0
   278 ;;      Locals:         1       0       0       0       0       0       0
   279 ;;      Temps:          2       0       0       0       0       0       0
   280 ;;      Totals:         3       0       0       0       0       0       0
   281 ;;Total ram usage:        3 bytes
   282 ;; Hardware stack levels required when called:    4
   283 ;; This function calls:
   284 ;;		_lcd_gotoxy
   285 ;;		_lcd_init
   286 ;;		_lcd_msg
   287 ;;		_lcd_putc
   288 ;;		_printf
   289 ;;		_sci_conf
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  0006FA                     __ptext0:
   297                           	opt stack 0
   298  0006FA                     _main:
   299                           	opt stack 27
   300                           
   301                           ;usart_6,c.c: 41: unsigned char c;
   302                           ;usart_6,c.c: 43: TRISCbits.TRISC4 = 0;
   303                           
   304                           ;incstack = 0
   305  0006FA  9894               	bcf	3988,4,c	;volatile
   306                           
   307                           ;usart_6,c.c: 44: sci_conf();
   308  0006FC  ECC8  F004         	call	_sci_conf	;wreg free
   309                           
   310                           ;usart_6,c.c: 45: lcd_init();
   311  000700  EC1E  F003         	call	_lcd_init	;wreg free
   312                           
   313                           ;usart_6,c.c: 46: lcd_msg("Puerto Serial");
   314  000704  0E16               	movlw	low STR_1
   315  000706  6E05               	movwf	lcd_msg@c,c
   316  000708  0E06               	movlw	high STR_1
   317  00070A  6E06               	movwf	lcd_msg@c+1,c
   318  00070C  EC9B  F004         	call	_lcd_msg	;wreg free
   319                           
   320                           ;usart_6,c.c: 47: lcd_gotoxy(1,2);
   321  000710  0E02               	movlw	2
   322  000712  6E04               	movwf	lcd_gotoxy@y,c
   323  000714  0E01               	movlw	1
   324  000716  EC6B  F004         	call	_lcd_gotoxy
   325                           
   326                           ;usart_6,c.c: 48: lcd_msg("hola");
   327  00071A  0E36               	movlw	low STR_2
   328  00071C  6E05               	movwf	lcd_msg@c,c
   329  00071E  0E06               	movlw	high STR_2
   330  000720  6E06               	movwf	lcd_msg@c+1,c
   331  000722  EC9B  F004         	call	_lcd_msg	;wreg free
   332                           
   333                           ;usart_6,c.c: 49: printf("Muestra caracteres\n\r");
   334  000726  0E01               	movlw	low STR_3
   335  000728  6E02               	movwf	printf@f,c
   336  00072A  0E06               	movlw	high STR_3
   337  00072C  6E03               	movwf	printf@f+1,c
   338  00072E  ECCA  F003         	call	_printf	;wreg free
   339  000732                     
   340                           ;usart_6,c.c: 51: {
   341                           ;usart_6,c.c: 52: for (unsigned char x = 65; x <=90; x++)
   342  000732  0E41               	movlw	65
   343  000734  6E0C               	movwf	main@x,c
   344  000736                     l1082:
   345  000736  0E5A               	movlw	90
   346  000738  640C               	cpfsgt	main@x,c
   347  00073A  D001               	goto	l129
   348  00073C  D7FA               	goto	l128
   349  00073E                     l129:
   350                           
   351                           ;usart_6,c.c: 53: {
   352                           ;usart_6,c.c: 54: printf("letra: %c\n\r",x);
   353  00073E  0E24               	movlw	low STR_4
   354  000740  6E02               	movwf	printf@f,c
   355  000742  0E06               	movlw	high STR_4
   356  000744  6E03               	movwf	printf@f+1,c
   357  000746  C00C  F004         	movff	main@x,?_printf+2
   358  00074A  6A05               	clrf	?_printf+3,c
   359  00074C  ECCA  F003         	call	_printf	;wreg free
   360                           
   361                           ;usart_6,c.c: 55: LATCbits.LATC4^= 1;
   362  000750  788B               	btg	3979,4,c	;volatile
   363                           
   364                           ;usart_6,c.c: 56: lcd_gotoxy(1,2); lcd_msg("     ");
   365  000752  0E02               	movlw	2
   366  000754  6E04               	movwf	lcd_gotoxy@y,c
   367  000756  0E01               	movlw	1
   368  000758  EC6B  F004         	call	_lcd_gotoxy
   369  00075C  0E30               	movlw	low STR_5
   370  00075E  6E05               	movwf	lcd_msg@c,c
   371  000760  0E06               	movlw	high STR_5
   372  000762  6E06               	movwf	lcd_msg@c+1,c
   373  000764  EC9B  F004         	call	_lcd_msg	;wreg free
   374                           
   375                           ;usart_6,c.c: 57: lcd_gotoxy(1,2); lcd_putc(x);
   376  000768  0E02               	movlw	2
   377  00076A  6E04               	movwf	lcd_gotoxy@y,c
   378  00076C  0E01               	movlw	1
   379  00076E  EC6B  F004         	call	_lcd_gotoxy
   380  000772  500C               	movf	main@x,w,c
   381  000774  EC4E  F004         	call	_lcd_putc
   382                           
   383                           ;usart_6,c.c: 58: _delay((unsigned long)((2000)*(16000000/4000.0)));
   384  000778  0E29               	movlw	41
   385  00077A  6E0B               	movwf	(??_main+1)& (0+255),c
   386  00077C  0E96               	movlw	150
   387  00077E  6E0A               	movwf	??_main& (0+255),c
   388  000780  0E7F               	movlw	127
   389  000782                     u187:
   390  000782  2EE8               	decfsz	wreg,f,c
   391  000784  D7FE               	bra	u187
   392  000786  2E0A               	decfsz	??_main& (0+255),f,c
   393  000788  D7FC               	bra	u187
   394  00078A  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   395  00078C  D7FA               	bra	u187
   396  00078E  F000               	nop	
   397  000790  2A0C               	incf	main@x,f,c
   398  000792  D7D1               	goto	l1082
   399  000794                     __end_of_main:
   400                           	opt stack 0
   401                           tblptru	equ	0xFF8
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405 ;; *************** function _sci_conf *****************
   406 ;; Defined at:
   407 ;;		line 4 in file "../MyLibs/usart.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   421 ;;      Params:         0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text1
   435  000990                     __ptext1:
   436                           	opt stack 0
   437  000990                     _sci_conf:
   438                           	opt stack 30
   439                           
   440                           ;usart.c: 13: BAUDCONbits.BRG16 = 0;
   441                           
   442                           ;incstack = 0
   443  000990  96B8               	bcf	4024,3,c	;volatile
   444                           
   445                           ;usart.c: 15: TXSTAbits.SYNC = 0;
   446  000992  98AC               	bcf	4012,4,c	;volatile
   447                           
   448                           ;usart.c: 16: TXSTAbits.BRGH = 1;
   449  000994  84AC               	bsf	4012,2,c	;volatile
   450                           
   451                           ;usart.c: 17: SPBRG = 103;
   452  000996  0E67               	movlw	103
   453  000998  6EAF               	movwf	4015,c	;volatile
   454                           
   455                           ;usart.c: 18: TXSTAbits.TXEN = 1;
   456  00099A  8AAC               	bsf	4012,5,c	;volatile
   457                           
   458                           ;usart.c: 20: RCSTAbits.SPEN = 1;
   459  00099C  8EAB               	bsf	4011,7,c	;volatile
   460                           
   461                           ;usart.c: 21: RCSTAbits.CREN = 1;
   462  00099E  88AB               	bsf	4011,4,c	;volatile
   463                           
   464                           ;usart.c: 23: TRISCbits.TRISC7 = 1;
   465  0009A0  8E94               	bsf	3988,7,c	;volatile
   466                           
   467                           ;usart.c: 24: TRISCbits.TRISC6 = 0;
   468  0009A2  9C94               	bcf	3988,6,c	;volatile
   469  0009A4  0012               	return		;funcret
   470  0009A6                     __end_of_sci_conf:
   471                           	opt stack 0
   472                           tblptru	equ	0xFF8
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           
   476 ;; *************** function _printf *****************
   477 ;; Defined at:
   478 ;;		line 464 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  f               2    1[COMRAM] PTR const unsigned char 
   481 ;;		 -> STR_4(12), STR_3(21), 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  tmpval          4    0        struct .
   484 ;;  cp              3    0        PTR const unsigned char 
   485 ;;  ap              2    6[COMRAM] PTR void [1]
   486 ;;		 -> ?_printf(2), 
   487 ;;  len             2    0        unsigned int 
   488 ;;  val             2    0        unsigned int 
   489 ;;  c               1    8[COMRAM] char 
   490 ;;  flag            1    5[COMRAM] unsigned char 
   491 ;;  prec            1    0        char 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  2    1[COMRAM] int 
   494 ;; Registers used:
   495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   501 ;;      Params:         4       0       0       0       0       0       0
   502 ;;      Locals:         4       0       0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0
   504 ;;      Totals:         8       0       0       0       0       0       0
   505 ;;Total ram usage:        8 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    1
   508 ;; This function calls:
   509 ;;		_putch
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text2
   516  000794                     __ptext2:
   517                           	opt stack 0
   518  000794                     _printf:
   519                           	opt stack 29
   520                           
   521                           ;doprnt.c: 466: va_list ap;
   522                           ;doprnt.c: 499: signed char c;
   523                           ;doprnt.c: 506: signed char prec;
   524                           ;doprnt.c: 508: unsigned char flag;
   525                           ;doprnt.c: 523: union {
   526                           ;doprnt.c: 524: unsigned long vd;
   527                           ;doprnt.c: 525: double integ;
   528                           ;doprnt.c: 526: } tmpval;
   529                           ;doprnt.c: 528: unsigned int val;
   530                           ;doprnt.c: 529: unsigned len;
   531                           ;doprnt.c: 530: const char * cp;
   532                           ;doprnt.c: 533: *ap = __va_start();
   533                           
   534                           ;incstack = 0
   535  000794  0E04               	movlw	low (?_printf+2)
   536  000796  6E07               	movwf	printf@ap,c
   537  000798  0E00               	movlw	high (?_printf+2)
   538  00079A  6E08               	movwf	printf@ap+1,c
   539                           
   540                           ;doprnt.c: 536: while(c = *f++) {
   541  00079C  D02A               	goto	l150
   542  00079E                     
   543                           ;doprnt.c: 538: if(c != '%')
   544  00079E  0E25               	movlw	37
   545  0007A0  1809               	xorwf	printf@c,w,c
   546  0007A2  B4D8               	btfsc	status,2,c
   547  0007A4  D004               	goto	l144
   548                           
   549                           ;doprnt.c: 540: {
   550                           ;doprnt.c: 541: (putch(c) );
   551  0007A6  5009               	movf	printf@c,w,c
   552  0007A8  ECDE  F004         	call	_putch
   553                           
   554                           ;doprnt.c: 542: continue;
   555  0007AC  D022               	goto	l150
   556  0007AE                     l144:
   557                           
   558                           ;doprnt.c: 543: }
   559                           ;doprnt.c: 548: flag = 0;
   560  0007AE  0E00               	movlw	0
   561  0007B0  6E06               	movwf	printf@flag,c
   562                           
   563                           ;doprnt.c: 635: switch(c = *f++) {
   564  0007B2  D00E               	goto	l145
   565  0007B4                     
   566                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   567  0007B4  C007  FFD9         	movff	printf@ap,fsr2l
   568  0007B8  C008  FFDA         	movff	printf@ap+1,fsr2h
   569  0007BC  50DF               	movf	indf2,w,c
   570  0007BE  6E09               	movwf	printf@c,c
   571  0007C0  0E02               	movlw	2
   572  0007C2  2607               	addwf	printf@ap,f,c
   573  0007C4  0E00               	movlw	0
   574  0007C6  2208               	addwfc	printf@ap+1,f,c
   575  0007C8                     
   576                           ;doprnt.c: 809: (putch(c) );
   577  0007C8  5009               	movf	printf@c,w,c
   578  0007CA  ECDE  F004         	call	_putch
   579                           
   580                           ;doprnt.c: 822: }
   581                           
   582                           ;doprnt.c: 810: continue;
   583  0007CE  D011               	goto	l150
   584  0007D0                     l145:
   585  0007D0  C002  FFF6         	movff	printf@f,tblptrl
   586  0007D4  C003  FFF7         	movff	printf@f+1,tblptrh
   587  0007D8  4A02               	infsnz	printf@f,f,c
   588  0007DA  2A03               	incf	printf@f+1,f,c
   589  0007DC                     	if	0	;tblptru may be non-zero
   590  0007DC                     	endif
   591  0007DC                     	if	0	;tblptru may be non-zero
   592  0007DC                     	endif
   593  0007DC  0008               	tblrd		*
   594  0007DE  CFF5 F009          	movff	tablat,printf@c
   595  0007E2  5009               	movf	printf@c,w,c
   596                           
   597                           ; Switch size 1, requested type "space"
   598                           ; Number of cases is 2, Range of values is 0 to 99
   599                           ; switch strategies available:
   600                           ; Name         Instructions Cycles
   601                           ; simple_byte            7     4 (average)
   602                           ;	Chosen strategy is simple_byte
   603  0007E4  0A00               	xorlw	0	; case 0
   604  0007E6  B4D8               	btfsc	status,2,c
   605  0007E8  0012               	return	
   606  0007EA  0A63               	xorlw	99	; case 99
   607  0007EC  B4D8               	btfsc	status,2,c
   608  0007EE  D7E2               	goto	l148
   609  0007F0  D7EB               	goto	l149
   610  0007F2                     l150:
   611                           
   612                           ;doprnt.c: 1422: {
   613  0007F2  C002  FFF6         	movff	printf@f,tblptrl
   614  0007F6  C003  FFF7         	movff	printf@f+1,tblptrh
   615  0007FA  4A02               	infsnz	printf@f,f,c
   616  0007FC  2A03               	incf	printf@f+1,f,c
   617  0007FE                     	if	0	;tblptru may be non-zero
   618  0007FE                     	endif
   619  0007FE                     	if	0	;tblptru may be non-zero
   620  0007FE                     	endif
   621  0007FE  0008               	tblrd		*
   622  000800  CFF5 F009          	movff	tablat,printf@c
   623  000804  5009               	movf	printf@c,w,c
   624  000806  B4D8               	btfsc	status,2,c
   625  000808  0012               	return	
   626  00080A  D7C9               	goto	l143
   627  00080C                     __end_of_printf:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           indf2	equ	0xFDF
   636                           fsr2h	equ	0xFDA
   637                           fsr2l	equ	0xFD9
   638                           status	equ	0xFD8
   639                           
   640 ;; *************** function _putch *****************
   641 ;; Defined at:
   642 ;;		line 34 in file "../MyLibs/usart.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  dato            1    wreg     unsigned char 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  dato            1    0[COMRAM] unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   656 ;;      Params:         0       0       0       0       0       0       0
   657 ;;      Locals:         1       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0
   659 ;;      Totals:         1       0       0       0       0       0       0
   660 ;;Total ram usage:        1 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_printf
   666 ;;		_getche
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text3
   671  0009BC                     __ptext3:
   672                           	opt stack 0
   673  0009BC                     _putch:
   674                           	opt stack 29
   675                           
   676                           ;incstack = 0
   677                           ;putch@dato stored from wreg
   678  0009BC  6E01               	movwf	putch@dato,c
   679  0009BE                     
   680                           ;usart.c: 36: while(PIR1bits.TXIF == 0);
   681  0009BE  A89E               	btfss	3998,4,c	;volatile
   682  0009C0  D7FE               	goto	l866
   683                           
   684                           ;usart.c: 37: TXREG = dato;
   685  0009C2  C001  FFAD         	movff	putch@dato,4013	;volatile
   686  0009C6  0012               	return		;funcret
   687  0009C8                     __end_of_putch:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           indf2	equ	0xFDF
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8
   699                           
   700 ;; *************** function _lcd_msg *****************
   701 ;; Defined at:
   702 ;;		line 101 in file "../MyLibs/lcd4a.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  c               2    4[COMRAM] PTR unsigned char 
   705 ;;		 -> STR_5(6), STR_2(5), STR_1(14), 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   717 ;;      Params:         2       0       0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0
   720 ;;      Totals:         2       0       0       0       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    3
   724 ;; This function calls:
   725 ;;		_lcd_putc
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text4
   732  000936                     __ptext4:
   733                           	opt stack 0
   734  000936                     _lcd_msg:
   735                           	opt stack 27
   736                           
   737                           ;lcd4a.c: 103: while(*c != 0)
   738                           
   739                           ;incstack = 0
   740  000936  D00A               	goto	l36
   741  000938                     
   742                           ;lcd4a.c: 104: {
   743                           ;lcd4a.c: 105: lcd_putc(*c++);
   744  000938  C005  FFF6         	movff	lcd_msg@c,tblptrl
   745  00093C  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   746  000940                     	if	0	;tblptru may be non-zero
   747  000940                     	endif
   748  000940                     	if	0	;tblptru may be non-zero
   749  000940                     	endif
   750  000940  0008               	tblrd		*
   751  000942  50F5               	movf	tablat,w,c
   752  000944  EC4E  F004         	call	_lcd_putc
   753  000948  4A05               	infsnz	lcd_msg@c,f,c
   754  00094A  2A06               	incf	lcd_msg@c+1,f,c
   755  00094C                     l36:
   756  00094C  C005  FFF6         	movff	lcd_msg@c,tblptrl
   757  000950  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   758  000954                     	if	0	;tblptru may be non-zero
   759  000954                     	endif
   760  000954                     	if	0	;tblptru may be non-zero
   761  000954                     	endif
   762  000954  0008               	tblrd		*
   763  000956  50F5               	movf	tablat,w,c
   764  000958  0900               	iorlw	0
   765  00095A  B4D8               	btfsc	status,2,c
   766  00095C  0012               	return	
   767  00095E  D7EC               	goto	l37
   768  000960                     __end_of_lcd_msg:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           indf2	equ	0xFDF
   777                           fsr2h	equ	0xFDA
   778                           fsr2l	equ	0xFD9
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _lcd_putc *****************
   782 ;; Defined at:
   783 ;;		line 66 in file "../MyLibs/lcd4a.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  c               1    wreg     unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  c               1    3[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   797 ;;      Params:         0       0       0       0       0       0       0
   798 ;;      Locals:         1       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0
   800 ;;      Totals:         1       0       0       0       0       0       0
   801 ;;Total ram usage:        1 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		_lcd_cmd
   806 ;;		_lcd_dwr
   807 ;; This function is called by:
   808 ;;		_lcd_msg
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text5
   814  00089C                     __ptext5:
   815                           	opt stack 0
   816  00089C                     _lcd_putc:
   817                           	opt stack 28
   818                           
   819                           ;incstack = 0
   820                           ;lcd_putc@c stored from wreg
   821  00089C  6E04               	movwf	lcd_putc@c,c
   822                           
   823                           ;lcd4a.c: 68: switch(c)
   824  00089E  D010               	goto	l24
   825  0008A0                     
   826                           ;lcd4a.c: 71: lcd_cmd(0x01);
   827  0008A0  0E01               	movlw	1
   828  0008A2  EC06  F004         	call	_lcd_cmd
   829                           
   830                           ;lcd4a.c: 72: break;
   831  0008A6  0012               	return	
   832  0008A8                     
   833                           ;lcd4a.c: 74: lcd_cmd(3);
   834  0008A8  0E03               	movlw	3
   835  0008AA  EC06  F004         	call	_lcd_cmd
   836                           
   837                           ;lcd4a.c: 75: break;
   838  0008AE  0012               	return	
   839  0008B0                     
   840                           ;lcd4a.c: 77: lcd_cmd(0x10);
   841  0008B0  0E10               	movlw	16
   842  0008B2  EC06  F004         	call	_lcd_cmd
   843                           
   844                           ;lcd4a.c: 78: break;
   845  0008B6  0012               	return	
   846  0008B8                     
   847                           ;lcd4a.c: 80: lcd_dwr(c);
   848  0008B8  5004               	movf	lcd_putc@c,w,c
   849  0008BA  EC2B  F004         	call	_lcd_dwr
   850                           
   851                           ;lcd4a.c: 82: }
   852                           
   853                           ;lcd4a.c: 81: break;
   854  0008BE  0012               	return	
   855  0008C0                     l24:
   856  0008C0  5004               	movf	lcd_putc@c,w,c
   857                           
   858                           ; Switch size 1, requested type "space"
   859                           ; Number of cases is 3, Range of values is 8 to 12
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte           10     6 (average)
   863                           ;	Chosen strategy is simple_byte
   864  0008C2  0A08               	xorlw	8	; case 8
   865  0008C4  B4D8               	btfsc	status,2,c
   866  0008C6  D7F4               	goto	l28
   867  0008C8  0A02               	xorlw	2	; case 10
   868  0008CA  B4D8               	btfsc	status,2,c
   869  0008CC  D7ED               	goto	l27
   870  0008CE  0A06               	xorlw	6	; case 12
   871  0008D0  B4D8               	btfsc	status,2,c
   872  0008D2  D7E6               	goto	l25
   873  0008D4  D7F1               	goto	l29
   874  0008D6                     __end_of_lcd_putc:
   875                           	opt stack 0
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           indf2	equ	0xFDF
   883                           fsr2h	equ	0xFDA
   884                           fsr2l	equ	0xFD9
   885                           status	equ	0xFD8
   886                           
   887 ;; *************** function _lcd_dwr *****************
   888 ;; Defined at:
   889 ;;		line 86 in file "../MyLibs/lcd4a.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  x               1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  x               1    2[COMRAM] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   903 ;;      Params:         0       0       0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0       0       0
   905 ;;      Temps:          1       0       0       0       0       0       0
   906 ;;      Totals:         2       0       0       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		_lcd_lat
   912 ;;		_manda
   913 ;; This function is called by:
   914 ;;		_lcd_putc
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text6
   919  000856                     __ptext6:
   920                           	opt stack 0
   921  000856                     _lcd_dwr:
   922                           	opt stack 28
   923                           
   924                           ;incstack = 0
   925                           ;lcd_dwr@x stored from wreg
   926  000856  6E03               	movwf	lcd_dwr@x,c
   927                           
   928                           ;lcd4a.c: 88: (*(&(*(&PORTD + 0x09))) |= (1<<(5)));
   929  000858  8A8C               	bsf	3980,5,c	;volatile
   930                           
   931                           ;lcd4a.c: 89: lcd &= 0x0F;
   932  00085A  0E0F               	movlw	15
   933  00085C  1615               	andwf	_lcd,f,c
   934                           
   935                           ;lcd4a.c: 90: lcd |= ((x & 0xF0));
   936  00085E  5003               	movf	lcd_dwr@x,w,c
   937  000860  0BF0               	andlw	240
   938  000862  1215               	iorwf	_lcd,f,c
   939                           
   940                           ;lcd4a.c: 91: manda(lcd);
   941  000864  5015               	movf	_lcd,w,c
   942  000866  EC85  F004         	call	_manda
   943                           
   944                           ;lcd4a.c: 92: lcd_lat();
   945  00086A  ECD3  F004         	call	_lcd_lat	;wreg free
   946                           
   947                           ;lcd4a.c: 93: _delay((unsigned long)((4)*(16000000/4000.0)));
   948  00086E  0E15               	movlw	21
   949  000870  6E02               	movwf	??_lcd_dwr& (0+255),c
   950  000872  0EC6               	movlw	198
   951  000874                     u197:
   952  000874  2EE8               	decfsz	wreg,f,c
   953  000876  D7FE               	bra	u197
   954  000878  2E02               	decfsz	??_lcd_dwr& (0+255),f,c
   955  00087A  D7FC               	bra	u197
   956  00087C  D000               	nop2	
   957                           
   958                           ;lcd4a.c: 95: lcd &= 0x0F;
   959  00087E  0E0F               	movlw	15
   960  000880  1615               	andwf	_lcd,f,c
   961                           
   962                           ;lcd4a.c: 96: lcd |= ((x & 0x0F)<<4);
   963  000882  C003  F002         	movff	lcd_dwr@x,??_lcd_dwr
   964  000886  0E0F               	movlw	15
   965  000888  1602               	andwf	??_lcd_dwr,f,c
   966  00088A  3802               	swapf	??_lcd_dwr,w,c
   967  00088C  0BF0               	andlw	240
   968  00088E  1215               	iorwf	_lcd,f,c
   969                           
   970                           ;lcd4a.c: 97: manda(lcd);
   971  000890  5015               	movf	_lcd,w,c
   972  000892  EC85  F004         	call	_manda
   973                           
   974                           ;lcd4a.c: 98: lcd_lat();
   975  000896  ECD3  F004         	call	_lcd_lat	;wreg free
   976  00089A  0012               	return		;funcret
   977  00089C                     __end_of_lcd_dwr:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           postinc0	equ	0xFEE
   984                           wreg	equ	0xFE8
   985                           indf2	equ	0xFDF
   986                           fsr2h	equ	0xFDA
   987                           fsr2l	equ	0xFD9
   988                           status	equ	0xFD8
   989                           
   990 ;; *************** function _lcd_init *****************
   991 ;; Defined at:
   992 ;;		line 135 in file "../MyLibs/lcd4a.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1006 ;;      Params:         0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0
  1008 ;;      Temps:          1       0       0       0       0       0       0
  1009 ;;      Totals:         1       0       0       0       0       0       0
  1010 ;;Total ram usage:        1 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_lcd_cmd
  1015 ;;		_lcd_cmd_hf
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text7
  1022  00063C                     __ptext7:
  1023                           	opt stack 0
  1024  00063C                     _lcd_init:
  1025                           	opt stack 28
  1026                           
  1027                           ;lcd4a.c: 143: (*(&(*(&PORTB + 0x12))) &=~ (1<<(7)));
  1028                           
  1029                           ;incstack = 0
  1030  00063C  9E93               	bcf	3987,7,c	;volatile
  1031                           
  1032                           ;lcd4a.c: 144: (*(&(*(&PORTB + 0x12))) &=~ (1<<(6)));
  1033  00063E  9C93               	bcf	3987,6,c	;volatile
  1034                           
  1035                           ;lcd4a.c: 145: (*(&(*(&PORTB + 0x12))) &=~ (1<<(5)));
  1036  000640  9A93               	bcf	3987,5,c	;volatile
  1037                           
  1038                           ;lcd4a.c: 146: (*(&(*(&PORTB + 0x12))) &=~ (1<<(4)));
  1039  000642  9893               	bcf	3987,4,c	;volatile
  1040                           
  1041                           ;lcd4a.c: 147: (*(&(*(&PORTD + 0x12))) &=~ (1<<(5)));
  1042  000644  9A95               	bcf	3989,5,c	;volatile
  1043                           
  1044                           ;lcd4a.c: 149: (*(&(*(&PORTD + 0x12))) &=~ (1<<(6)));
  1045  000646  9C95               	bcf	3989,6,c	;volatile
  1046                           
  1047                           ;lcd4a.c: 152: (*(&(*(&PORTD + 0x12))) &=~ (1<<(7)));
  1048  000648  9E95               	bcf	3989,7,c	;volatile
  1049                           
  1050                           ;lcd4a.c: 155: (*(&(*(&PORTD + 0x09))) &=~ (1<<(6)));
  1051  00064A  9C8C               	bcf	3980,6,c	;volatile
  1052                           
  1053                           ;lcd4a.c: 158: lcd_cmd_hf(0x30);
  1054  00064C  0E30               	movlw	48
  1055  00064E  ECB0  F004         	call	_lcd_cmd_hf
  1056                           
  1057                           ;lcd4a.c: 159: _delay((unsigned long)((15)*(16000000/4000.0)));
  1058  000652  0E4E               	movlw	78
  1059  000654  6E04               	movwf	??_lcd_init& (0+255),c
  1060  000656  0EEB               	movlw	235
  1061  000658                     u207:
  1062  000658  2EE8               	decfsz	wreg,f,c
  1063  00065A  D7FE               	bra	u207
  1064  00065C  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1065  00065E  D7FC               	bra	u207
  1066  000660  F000               	nop	
  1067                           
  1068                           ;lcd4a.c: 160: lcd_cmd_hf(0x30);
  1069  000662  0E30               	movlw	48
  1070  000664  ECB0  F004         	call	_lcd_cmd_hf
  1071                           
  1072                           ;lcd4a.c: 161: _delay((unsigned long)((3)*(16000000/4000.0)));
  1073  000668  0E10               	movlw	16
  1074  00066A  6E04               	movwf	??_lcd_init& (0+255),c
  1075  00066C  0E94               	movlw	148
  1076  00066E                     u217:
  1077  00066E  2EE8               	decfsz	wreg,f,c
  1078  000670  D7FE               	bra	u217
  1079  000672  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1080  000674  D7FC               	bra	u217
  1081  000676  D000               	nop2	
  1082                           
  1083                           ;lcd4a.c: 162: lcd_cmd_hf(0x30);
  1084  000678  0E30               	movlw	48
  1085  00067A  ECB0  F004         	call	_lcd_cmd_hf
  1086                           
  1087                           ;lcd4a.c: 163: _delay((unsigned long)((15)*(16000000/4000.0)));
  1088  00067E  0E4E               	movlw	78
  1089  000680  6E04               	movwf	??_lcd_init& (0+255),c
  1090  000682  0EEB               	movlw	235
  1091  000684                     u227:
  1092  000684  2EE8               	decfsz	wreg,f,c
  1093  000686  D7FE               	bra	u227
  1094  000688  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1095  00068A  D7FC               	bra	u227
  1096  00068C  F000               	nop	
  1097                           
  1098                           ;lcd4a.c: 164: lcd_cmd_hf(0x20);
  1099  00068E  0E20               	movlw	32
  1100  000690  ECB0  F004         	call	_lcd_cmd_hf
  1101                           
  1102                           ;lcd4a.c: 165: _delay((unsigned long)((6)*(16000000/4000.0)));
  1103  000694  0E20               	movlw	32
  1104  000696  6E04               	movwf	??_lcd_init& (0+255),c
  1105  000698  0E2A               	movlw	42
  1106  00069A                     u237:
  1107  00069A  2EE8               	decfsz	wreg,f,c
  1108  00069C  D7FE               	bra	u237
  1109  00069E  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1110  0006A0  D7FC               	bra	u237
  1111                           
  1112                           ;lcd4a.c: 166: lcd_cmd(0x28);
  1113  0006A2  0E28               	movlw	40
  1114  0006A4  EC06  F004         	call	_lcd_cmd
  1115                           
  1116                           ;lcd4a.c: 167: _delay((unsigned long)((6)*(16000000/4000.0)));
  1117  0006A8  0E20               	movlw	32
  1118  0006AA  6E04               	movwf	??_lcd_init& (0+255),c
  1119  0006AC  0E2A               	movlw	42
  1120  0006AE                     u247:
  1121  0006AE  2EE8               	decfsz	wreg,f,c
  1122  0006B0  D7FE               	bra	u247
  1123  0006B2  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1124  0006B4  D7FC               	bra	u247
  1125                           
  1126                           ;lcd4a.c: 168: lcd_cmd(0x0E);
  1127  0006B6  0E0E               	movlw	14
  1128  0006B8  EC06  F004         	call	_lcd_cmd
  1129                           
  1130                           ;lcd4a.c: 169: _delay((unsigned long)((6)*(16000000/4000.0)));
  1131  0006BC  0E20               	movlw	32
  1132  0006BE  6E04               	movwf	??_lcd_init& (0+255),c
  1133  0006C0  0E2A               	movlw	42
  1134  0006C2                     u257:
  1135  0006C2  2EE8               	decfsz	wreg,f,c
  1136  0006C4  D7FE               	bra	u257
  1137  0006C6  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1138  0006C8  D7FC               	bra	u257
  1139                           
  1140                           ;lcd4a.c: 170: lcd_cmd(0x01);
  1141  0006CA  0E01               	movlw	1
  1142  0006CC  EC06  F004         	call	_lcd_cmd
  1143                           
  1144                           ;lcd4a.c: 171: _delay((unsigned long)((6)*(16000000/4000.0)));
  1145  0006D0  0E20               	movlw	32
  1146  0006D2  6E04               	movwf	??_lcd_init& (0+255),c
  1147  0006D4  0E2A               	movlw	42
  1148  0006D6                     u267:
  1149  0006D6  2EE8               	decfsz	wreg,f,c
  1150  0006D8  D7FE               	bra	u267
  1151  0006DA  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1152  0006DC  D7FC               	bra	u267
  1153                           
  1154                           ;lcd4a.c: 172: lcd_cmd(0x06);
  1155  0006DE  0E06               	movlw	6
  1156  0006E0  EC06  F004         	call	_lcd_cmd
  1157                           
  1158                           ;lcd4a.c: 173: _delay((unsigned long)((6)*(16000000/4000.0)));
  1159  0006E4  0E20               	movlw	32
  1160  0006E6  6E04               	movwf	??_lcd_init& (0+255),c
  1161  0006E8  0E2A               	movlw	42
  1162  0006EA                     u277:
  1163  0006EA  2EE8               	decfsz	wreg,f,c
  1164  0006EC  D7FE               	bra	u277
  1165  0006EE  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1166  0006F0  D7FC               	bra	u277
  1167                           
  1168                           ;lcd4a.c: 174: lcd_cmd(0x80);
  1169  0006F2  0E80               	movlw	128
  1170  0006F4  EC06  F004         	call	_lcd_cmd
  1171  0006F8  0012               	return		;funcret
  1172  0006FA                     __end_of_lcd_init:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           indf2	equ	0xFDF
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _lcd_cmd_hf *****************
  1186 ;; Defined at:
  1187 ;;		line 56 in file "../MyLibs/lcd4a.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  x               1    wreg     unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  x               1    1[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       0       0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    1
  1208 ;; This function calls:
  1209 ;;		_lcd_lat
  1210 ;;		_manda
  1211 ;; This function is called by:
  1212 ;;		_lcd_init
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text8
  1217  000960                     __ptext8:
  1218                           	opt stack 0
  1219  000960                     _lcd_cmd_hf:
  1220                           	opt stack 28
  1221                           
  1222                           ;incstack = 0
  1223                           ;lcd_cmd_hf@x stored from wreg
  1224  000960  6E02               	movwf	lcd_cmd_hf@x,c
  1225                           
  1226                           ;lcd4a.c: 58: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1227  000962  9A8C               	bcf	3980,5,c	;volatile
  1228                           
  1229                           ;lcd4a.c: 59: lcd &= 0x0F;
  1230  000964  0E0F               	movlw	15
  1231  000966  1615               	andwf	_lcd,f,c
  1232                           
  1233                           ;lcd4a.c: 60: lcd |= (x & 0xF0);
  1234  000968  5002               	movf	lcd_cmd_hf@x,w,c
  1235  00096A  0BF0               	andlw	240
  1236  00096C  1215               	iorwf	_lcd,f,c
  1237                           
  1238                           ;lcd4a.c: 61: manda(lcd);
  1239  00096E  5015               	movf	_lcd,w,c
  1240  000970  EC85  F004         	call	_manda
  1241                           
  1242                           ;lcd4a.c: 62: lcd_lat();
  1243  000974  ECD3  F004         	call	_lcd_lat	;wreg free
  1244  000978  0012               	return		;funcret
  1245  00097A                     __end_of_lcd_cmd_hf:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           indf2	equ	0xFDF
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _lcd_gotoxy *****************
  1259 ;; Defined at:
  1260 ;;		line 114 in file "../MyLibs/lcd4a.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  x               1    wreg     unsigned char 
  1263 ;;  y               1    3[COMRAM] unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  x               1    5[COMRAM] unsigned char 
  1266 ;;  ADDRESS         1    6[COMRAM] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         1       0       0       0       0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0       0
  1279 ;;      Totals:         4       0       0       0       0       0       0
  1280 ;;Total ram usage:        4 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		_lcd_cmd
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text9
  1291  0008D6                     __ptext9:
  1292                           	opt stack 0
  1293  0008D6                     _lcd_gotoxy:
  1294                           	opt stack 28
  1295                           
  1296                           ;incstack = 0
  1297                           ;lcd_gotoxy@x stored from wreg
  1298  0008D6  6E06               	movwf	lcd_gotoxy@x,c
  1299                           
  1300                           ;lcd4a.c: 116: unsigned char ADDRESS= 0x00U;
  1301  0008D8  0E00               	movlw	0
  1302  0008DA  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1303                           
  1304                           ;lcd4a.c: 118: switch(y)
  1305  0008DC  D005               	goto	l42
  1306  0008DE                     
  1307                           ;lcd4a.c: 124: ADDRESS = 0xC0;
  1308  0008DE  0EC0               	movlw	192
  1309  0008E0  D001               	goto	L2
  1310  0008E2                     
  1311                           ;lcd4a.c: 127: ADDRESS = 0x80;
  1312  0008E2  0E80               	movlw	128
  1313  0008E4                     L2:
  1314  0008E4  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1315                           
  1316                           ;lcd4a.c: 130: }
  1317                           
  1318                           ;lcd4a.c: 128: break;
  1319  0008E6  D008               	goto	l44
  1320  0008E8                     l42:
  1321  0008E8  5004               	movf	lcd_gotoxy@y,w,c
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 2, Range of values is 1 to 2
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte            7     4 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329  0008EA  0A01               	xorlw	1	; case 1
  1330  0008EC  B4D8               	btfsc	status,2,c
  1331  0008EE  D7F9               	goto	l46
  1332  0008F0  0A03               	xorlw	3	; case 2
  1333  0008F2  B4D8               	btfsc	status,2,c
  1334  0008F4  D7F4               	goto	l45
  1335  0008F6  D7F5               	goto	l46
  1336  0008F8                     l44:
  1337                           
  1338                           ;lcd4a.c: 131: ADDRESS = (unsigned char)((unsigned char)(ADDRESS + x) - (1U));
  1339  0008F8  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1340  0008FA  2406               	addwf	lcd_gotoxy@x,w,c
  1341  0008FC  6E05               	movwf	??_lcd_gotoxy& (0+255),c
  1342  0008FE  0405               	decf	??_lcd_gotoxy,w,c
  1343  000900  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1344                           
  1345                           ;lcd4a.c: 132: lcd_cmd(ADDRESS);
  1346  000902  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1347  000904  EC06  F004         	call	_lcd_cmd
  1348  000908  0012               	return		;funcret
  1349  00090A                     __end_of_lcd_gotoxy:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           indf2	equ	0xFDF
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _lcd_cmd *****************
  1363 ;; Defined at:
  1364 ;;		line 40 in file "../MyLibs/lcd4a.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  x               1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  x               1    2[COMRAM] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       0       0       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0       0       0
  1380 ;;      Temps:          1       0       0       0       0       0       0
  1381 ;;      Totals:         2       0       0       0       0       0       0
  1382 ;;Total ram usage:        2 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		_lcd_lat
  1387 ;;		_manda
  1388 ;; This function is called by:
  1389 ;;		_lcd_putc
  1390 ;;		_lcd_gotoxy
  1391 ;;		_lcd_init
  1392 ;;		_lcd_setcursor_vb
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text10
  1397  00080C                     __ptext10:
  1398                           	opt stack 0
  1399  00080C                     _lcd_cmd:
  1400                           	opt stack 28
  1401                           
  1402                           ;incstack = 0
  1403                           ;lcd_cmd@x stored from wreg
  1404  00080C  6E03               	movwf	lcd_cmd@x,c
  1405                           
  1406                           ;lcd4a.c: 42: lcd = 0;
  1407  00080E  0E00               	movlw	0
  1408  000810  6E15               	movwf	_lcd,c
  1409                           
  1410                           ;lcd4a.c: 43: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1411  000812  9A8C               	bcf	3980,5,c	;volatile
  1412                           
  1413                           ;lcd4a.c: 44: lcd &= 0x0F;
  1414  000814  0E0F               	movlw	15
  1415  000816  1615               	andwf	_lcd,f,c
  1416                           
  1417                           ;lcd4a.c: 45: lcd |= (x & 0xF0);
  1418  000818  5003               	movf	lcd_cmd@x,w,c
  1419  00081A  0BF0               	andlw	240
  1420  00081C  1215               	iorwf	_lcd,f,c
  1421                           
  1422                           ;lcd4a.c: 46: manda(lcd);
  1423  00081E  5015               	movf	_lcd,w,c
  1424  000820  EC85  F004         	call	_manda
  1425                           
  1426                           ;lcd4a.c: 47: lcd_lat();
  1427  000824  ECD3  F004         	call	_lcd_lat	;wreg free
  1428                           
  1429                           ;lcd4a.c: 48: _delay((unsigned long)((4)*(16000000/4000.0)));
  1430  000828  0E15               	movlw	21
  1431  00082A  6E02               	movwf	??_lcd_cmd& (0+255),c
  1432  00082C  0EC6               	movlw	198
  1433  00082E                     u287:
  1434  00082E  2EE8               	decfsz	wreg,f,c
  1435  000830  D7FE               	bra	u287
  1436  000832  2E02               	decfsz	??_lcd_cmd& (0+255),f,c
  1437  000834  D7FC               	bra	u287
  1438  000836  D000               	nop2	
  1439                           
  1440                           ;lcd4a.c: 50: lcd &= 0x0F;
  1441  000838  0E0F               	movlw	15
  1442  00083A  1615               	andwf	_lcd,f,c
  1443                           
  1444                           ;lcd4a.c: 51: lcd |= ((x & 0x0F)<<4);
  1445  00083C  C003  F002         	movff	lcd_cmd@x,??_lcd_cmd
  1446  000840  0E0F               	movlw	15
  1447  000842  1602               	andwf	??_lcd_cmd,f,c
  1448  000844  3802               	swapf	??_lcd_cmd,w,c
  1449  000846  0BF0               	andlw	240
  1450  000848  1215               	iorwf	_lcd,f,c
  1451                           
  1452                           ;lcd4a.c: 52: manda(lcd);
  1453  00084A  5015               	movf	_lcd,w,c
  1454  00084C  EC85  F004         	call	_manda
  1455                           
  1456                           ;lcd4a.c: 53: lcd_lat();
  1457  000850  ECD3  F004         	call	_lcd_lat	;wreg free
  1458  000854  0012               	return		;funcret
  1459  000856                     __end_of_lcd_cmd:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           indf2	equ	0xFDF
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _manda *****************
  1473 ;; Defined at:
  1474 ;;		line 178 in file "../MyLibs/lcd4a.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  dato            1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  dato            1    0[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         0       0       0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0
  1491 ;;      Totals:         1       0       0       0       0       0       0
  1492 ;;Total ram usage:        1 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_lcd_cmd
  1498 ;;		_lcd_cmd_hf
  1499 ;;		_lcd_dwr
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text11
  1504  00090A                     __ptext11:
  1505                           	opt stack 0
  1506  00090A                     _manda:
  1507                           	opt stack 28
  1508                           
  1509                           ;incstack = 0
  1510                           ;manda@dato stored from wreg
  1511  00090A  6E01               	movwf	manda@dato,c
  1512                           
  1513                           ;lcd4a.c: 180: if(dato & (1 << 4)) (*(&(*(&PORTB + 0x09))) |= (1<<(4)));
  1514  00090C  A801               	btfss	manda@dato,4,c
  1515  00090E  D002               	goto	l53
  1516  000910  888A               	bsf	3978,4,c	;volatile
  1517  000912  D001               	goto	l54
  1518  000914                     l53:
  1519                           
  1520                           ;lcd4a.c: 181: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(4)));
  1521  000914  988A               	bcf	3978,4,c	;volatile
  1522  000916                     l54:
  1523                           
  1524                           ;lcd4a.c: 182: if(dato & (1 << 5)) (*(&(*(&PORTB + 0x09))) |= (1<<(5)));
  1525  000916  AA01               	btfss	manda@dato,5,c
  1526  000918  D002               	goto	l55
  1527  00091A  8A8A               	bsf	3978,5,c	;volatile
  1528  00091C  D001               	goto	l56
  1529  00091E                     l55:
  1530                           
  1531                           ;lcd4a.c: 183: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(5)));
  1532  00091E  9A8A               	bcf	3978,5,c	;volatile
  1533  000920                     l56:
  1534                           
  1535                           ;lcd4a.c: 184: if(dato & (1 << 6)) (*(&(*(&PORTB + 0x09))) |= (1<<(6)));
  1536  000920  AC01               	btfss	manda@dato,6,c
  1537  000922  D002               	goto	l57
  1538  000924  8C8A               	bsf	3978,6,c	;volatile
  1539  000926  D001               	goto	l58
  1540  000928                     l57:
  1541                           
  1542                           ;lcd4a.c: 185: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(6)));
  1543  000928  9C8A               	bcf	3978,6,c	;volatile
  1544  00092A                     l58:
  1545                           
  1546                           ;lcd4a.c: 186: if(dato & (1 << 7)) (*(&(*(&PORTB + 0x09))) |= (1<<(7)));
  1547  00092A  AE01               	btfss	manda@dato,7,c
  1548  00092C  D002               	goto	l59
  1549  00092E  8E8A               	bsf	3978,7,c	;volatile
  1550  000930  0012               	return	
  1551  000932                     l59:
  1552                           
  1553                           ;lcd4a.c: 187: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(7)));
  1554  000932  9E8A               	bcf	3978,7,c	;volatile
  1555  000934  0012               	return	
  1556  000936                     __end_of_manda:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           indf2	equ	0xFDF
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _lcd_lat *****************
  1570 ;; Defined at:
  1571 ;;		line 29 in file "../MyLibs/lcd4a.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1585 ;;      Params:         0       0       0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0
  1587 ;;      Temps:          1       0       0       0       0       0       0
  1588 ;;      Totals:         1       0       0       0       0       0       0
  1589 ;;Total ram usage:        1 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_lcd_cmd
  1595 ;;		_lcd_cmd_hf
  1596 ;;		_lcd_dwr
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text12
  1601  0009A6                     __ptext12:
  1602                           	opt stack 0
  1603  0009A6                     _lcd_lat:
  1604                           	opt stack 28
  1605                           
  1606                           ;lcd4a.c: 33: (*(&(*(&PORTD + 0x09))) |= (1<<(7)));
  1607                           
  1608                           ;incstack = 0
  1609  0009A6  8E8C               	bsf	3980,7,c	;volatile
  1610                           
  1611                           ;lcd4a.c: 35: _delay((unsigned long)((3)*(16000000/4000.0)));
  1612  0009A8  0E10               	movlw	16
  1613  0009AA  6E01               	movwf	??_lcd_lat& (0+255),c
  1614  0009AC  0E94               	movlw	148
  1615  0009AE                     u297:
  1616  0009AE  2EE8               	decfsz	wreg,f,c
  1617  0009B0  D7FE               	bra	u297
  1618  0009B2  2E01               	decfsz	??_lcd_lat& (0+255),f,c
  1619  0009B4  D7FC               	bra	u297
  1620  0009B6  D000               	nop2	
  1621                           
  1622                           ;lcd4a.c: 36: (*(&(*(&PORTD + 0x09))) &=~ (1<<(7)));
  1623  0009B8  9E8C               	bcf	3980,7,c	;volatile
  1624  0009BA  0012               	return		;funcret
  1625  0009BC                     __end_of_lcd_lat:
  1626                           	opt stack 0
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           indf2	equ	0xFDF
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           postinc0	equ	0xFEE
  1642                           wreg	equ	0xFE8
  1643                           indf2	equ	0xFDF
  1644                           fsr2h	equ	0xFDA
  1645                           fsr2l	equ	0xFD9
  1646                           status	equ	0xFD8
  1647                           
  1648                           	psect	rparam
  1649  0000                     tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           indf2	equ	0xFDF
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      21
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[12]), STR_3(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _lcd_msg->_lcd_putc
    _lcd_putc->_lcd_cmd
    _lcd_putc->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_manda
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd_hf->_manda
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_manda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1664
                                              9 COMRAM     3     3      0
                         _lcd_gotoxy
                           _lcd_init
                            _lcd_msg
                           _lcd_putc
                             _printf
                           _sci_conf
 ---------------------------------------------------------------------------------
 (1) _sci_conf                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     305
                                              1 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     483
                                              4 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0     210
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      75
                                              1 COMRAM     1     1      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     411
                                              3 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (3) _manda                                                1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_cmd
       _lcd_lat
       _manda
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_cmd_hf
       _lcd_lat
       _manda
   _lcd_msg
     _lcd_putc
       _lcd_cmd
         _lcd_lat
         _manda
       _lcd_dwr
         _lcd_lat
         _manda
   _lcd_putc
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_dwr
       _lcd_lat
       _manda
   _printf
     _putch
   _sci_conf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      15       1       16.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      15        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 20 13:41:20 2018

            lcd_cmd_hf@x 0002                       l24 08C0                       l25 08A0  
                     l42 08E8                       l27 08A8                       l44 08F8  
                     l28 08B0                       l36 094C                       l53 0914  
                     l45 08DE                       l29 08B8                       l37 0938  
                     l54 0916                       l46 08E2                       l55 091E  
                     l56 0920                       l57 0928                       l58 092A  
                     l59 0932              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l150 07F2                      l143 079E  
                    l144 07AE                      l128 0732                      l145 07D0  
                    l129 073E                      l148 07B4                      l149 07C8  
                    l866 09BE             __CFG_CPB$OFF 000000                      u207 0658  
                    u217 066E                      u227 0684                      u237 069A  
                    u247 06AE                      u257 06C2             __CFG_CPD$OFF 000000  
                    u267 06D6                      u187 0782                      u277 06EA  
                    u197 0874                      u287 082E                      u297 09AE  
                    _lcd 0015                      wreg 000FE8              lcd_gotoxy@x 0006  
            lcd_gotoxy@y 0004             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1082 0736                     STR_1 0616                     STR_2 0636  
                   STR_3 0601                     STR_4 0624                     STR_5 0630  
           __CFG_PWRT$ON 000000                     _main 06FA                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTB 000F81                    _PORTD 000F83                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_cmd 0856          __end_of_lcd_lat 09BC          __end_of_lcd_dwr 089C  
        __end_of_lcd_msg 0960            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _manda 090A  
                  _value 000D                    _putch 09BC                    main@x 000C  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __initialization 097A             __end_of_main 0794                   ??_main 000A  
          __activetblptr 000002                   ?_manda 0001                   ?_putch 0001  
         __CFG_XINST$OFF 000000         __end_of_lcd_init 06FA         __end_of_lcd_putc 08D6  
         __CFG_STVREN$ON 000000                   clear_0 0980                   _printf 0794  
       __end_of_sci_conf 09A6                ??_lcd_cmd 0002                ??_lcd_lat 0001  
              ??_lcd_dwr 0002                ??_lcd_msg 0007             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      lcd_gotoxy@ADDRESS 0007               __accesstop 0080  __end_of__initialization 0986  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_manda 0936            __end_of_putch 09C8                  ??_manda 0001  
                ??_putch 0001       __CFG_CCP2MX$PORTBE 000000                  ?_printf 0002  
             _lcd_cmd_hf 0960               _lcd_gotoxy 08D6                ?_lcd_init 0001  
              ?_lcd_putc 0001                ?_sci_conf 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 097A  
                __ramtop 0600                  __ptext0 06FA                  __ptext1 0990  
                __ptext2 0794                  __ptext3 09BC                  __ptext4 0936  
                __ptext5 089C                  __ptext6 0856                  __ptext7 063C  
                __ptext8 0960                  __ptext9 08D6                  _lcd_cmd 080C  
                _lcd_lat 09A6          __size_of_printf 0078                  _lcd_dwr 0856  
                _lcd_msg 0936               ??_lcd_init 0004               ??_lcd_putc 0004  
   end_of_initialization 0986            __Lmediumconst 0000               ??_sci_conf 0001  
              _RCSTAbits 000FAB                  printf@c 0009                  printf@f 0002  
                postinc0 000FEE              ?_lcd_cmd_hf 0001                _TRISCbits 000F94  
            ?_lcd_gotoxy 0004                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
         __end_of_printf 080C      start_initialization 097A      __size_of_lcd_cmd_hf 001A  
    __size_of_lcd_gotoxy 0034         __CFG_LPT1OSC$OFF 000000                 ??_printf 0006  
            __pbssCOMRAM 000D        __size_of_lcd_init 00BE        __size_of_lcd_putc 003A  
      __size_of_sci_conf 0016                 ?_lcd_cmd 0001                 ?_lcd_lat 0001  
               ?_lcd_dwr 0001                 ?_lcd_msg 0005              __smallconst 0600  
         __size_of_manda 002C           __size_of_putch 000C                 _LATCbits 000F8B  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               printf@flag 0006  
           ??_lcd_cmd_hf 0002                lcd_putc@c 0004             ??_lcd_gotoxy 0005  
              manda@dato 0001                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_lcd_cmd_hf 097A       __end_of_lcd_gotoxy 090A         __size_of_lcd_cmd 004A  
       __size_of_lcd_lat 0016         __size_of_lcd_dwr 0046         __size_of_lcd_msg 002A  
               __ptext10 080C                 __ptext11 090A                 __ptext12 09A6  
               _lcd_init 063C                 _lcd_putc 089C            __size_of_main 009A  
               _sci_conf 0990                 lcd_cmd@x 0003                 lcd_dwr@x 0003  
               lcd_msg@c 0005                putch@dato 0001                 printf@ap 0007  
