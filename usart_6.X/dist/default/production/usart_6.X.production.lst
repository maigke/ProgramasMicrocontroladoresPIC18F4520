

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 20 05:13:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _LATCbits	set	3979
    60  0000                     _TXREG	set	4013
    61  0000                     _RCREG	set	4014
    62  0000                     _PIR1bits	set	3998
    63  0000                     _TRISCbits	set	3988
    64  0000                     _RCSTAbits	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _TXSTAbits	set	4012
    67  0000                     _BAUDCONbits	set	4024
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTD	set	3971
    70                           
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	opt stack 0
    74  000600  00                 	db	0
    75  000601                     STR_3:
    76  000601  4D                 	db	77	;'M'
    77  000602  75                 	db	117	;'u'
    78  000603  65                 	db	101	;'e'
    79  000604  73                 	db	115	;'s'
    80  000605  74                 	db	116	;'t'
    81  000606  72                 	db	114	;'r'
    82  000607  61                 	db	97	;'a'
    83  000608  20                 	db	32
    84  000609  63                 	db	99	;'c'
    85  00060A  61                 	db	97	;'a'
    86  00060B  72                 	db	114	;'r'
    87  00060C  61                 	db	97	;'a'
    88  00060D  63                 	db	99	;'c'
    89  00060E  74                 	db	116	;'t'
    90  00060F  65                 	db	101	;'e'
    91  000610  72                 	db	114	;'r'
    92  000611  65                 	db	101	;'e'
    93  000612  73                 	db	115	;'s'
    94  000613  0A                 	db	10
    95  000614  0D                 	db	13
    96  000615  00                 	db	0
    97  000616                     STR_1:
    98  000616  50                 	db	80	;'P'
    99  000617  75                 	db	117	;'u'
   100  000618  65                 	db	101	;'e'
   101  000619  72                 	db	114	;'r'
   102  00061A  74                 	db	116	;'t'
   103  00061B  6F                 	db	111	;'o'
   104  00061C  20                 	db	32
   105  00061D  53                 	db	83	;'S'
   106  00061E  65                 	db	101	;'e'
   107  00061F  72                 	db	114	;'r'
   108  000620  69                 	db	105	;'i'
   109  000621  61                 	db	97	;'a'
   110  000622  6C                 	db	108	;'l'
   111  000623  00                 	db	0
   112  000624                     STR_4:
   113  000624  6C                 	db	108	;'l'
   114  000625  65                 	db	101	;'e'
   115  000626  74                 	db	116	;'t'
   116  000627  72                 	db	114	;'r'
   117  000628  61                 	db	97	;'a'
   118  000629  3A                 	db	58	;':'
   119  00062A  20                 	db	32
   120  00062B  25                 	db	37
   121  00062C  63                 	db	99	;'c'
   122  00062D  0A                 	db	10
   123  00062E  0D                 	db	13
   124  00062F  00                 	db	0
   125  000630                     STR_5:
   126  000630  20                 	db	32
   127  000631  20                 	db	32
   128  000632  20                 	db	32
   129  000633  20                 	db	32
   130  000634  20                 	db	32
   131  000635  00                 	db	0
   132  000636                     STR_2:
   133  000636  68                 	db	104	;'h'
   134  000637  6F                 	db	111	;'o'
   135  000638  6C                 	db	108	;'l'
   136  000639  61                 	db	97	;'a'
   137  00063A  00                 	db	0
   138                           
   139                           ; #config settings
   140  00063B  00                 	db	0	; dummy byte at the end
   141  0000                     
   142                           	psect	cinit
   143  000978                     __pcinit:
   144                           	opt stack 0
   145  000978                     start_initialization:
   146                           	opt stack 0
   147  000978                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Clear objects allocated to COMRAM (9 bytes)
   151  000978  EE00  F00D         	lfsr	0,__pbssCOMRAM
   152  00097C  0E09               	movlw	9
   153  00097E                     clear_0:
   154  00097E  6AEE               	clrf	postinc0,c
   155  000980  06E8               	decf	wreg,f,c
   156  000982  E1FD               	bnz	clear_0
   157  000984                     end_of_initialization:
   158                           	opt stack 0
   159  000984                     __end_of__initialization:
   160                           	opt stack 0
   161  000984  0E00               	movlw	low (__Lmediumconst shr (0+16))
   162  000986  6EF8               	movwf	tblptru,c
   163  000988  0100               	movlb	0
   164  00098A  EF7D  F003         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssCOMRAM
   170  00000D                     __pbssCOMRAM:
   171                           	opt stack 0
   172  00000D                     _value:
   173                           	opt stack 0
   174  00000D                     	ds	8
   175  000015                     _lcd:
   176                           	opt stack 0
   177  000015                     	ds	1
   178                           tblptru	equ	0xFF8
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	cstackCOMRAM
   183  000001                     __pcstackCOMRAM:
   184                           	opt stack 0
   185  000001                     ??_lcd_lat:
   186  000001                     manda@dato:
   187                           	opt stack 0
   188  000001                     putch@dato:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x0
   192  000001                     	ds	1
   193  000002                     ??_lcd_dwr:
   194  000002                     ??_lcd_cmd:
   195  000002                     ?_printf:
   196                           	opt stack 0
   197  000002                     lcd_cmd_hf@x:
   198                           	opt stack 0
   199  000002                     printf@f:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x1
   203  000002                     	ds	1
   204  000003                     lcd_cmd@x:
   205                           	opt stack 0
   206  000003                     lcd_dwr@x:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000003                     	ds	1
   211  000004                     ??_lcd_init:
   212  000004                     lcd_putc@c:
   213                           	opt stack 0
   214  000004                     lcd_gotoxy@y:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x3
   218  000004                     	ds	1
   219  000005                     ??_lcd_gotoxy:
   220  000005                     lcd_msg@c:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x4
   224  000005                     	ds	1
   225  000006                     lcd_gotoxy@x:
   226                           	opt stack 0
   227  000006                     printf@flag:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x5
   231  000006                     	ds	1
   232  000007                     lcd_gotoxy@ADDRESS:
   233                           	opt stack 0
   234  000007                     printf@ap:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x6
   238  000007                     	ds	2
   239  000009                     printf@c:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x8
   243  000009                     	ds	1
   244  00000A                     ??_main:
   245                           
   246                           ; 1 bytes @ 0x9
   247  00000A                     	ds	2
   248  00000C                     main@x:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0xB
   252  00000C                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 39 in file "usart_6,c.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  x               1   11[COMRAM] unsigned char 
   267 ;;  c               1    0        unsigned char 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   277 ;;      Params:         0       0       0       0       0       0       0
   278 ;;      Locals:         1       0       0       0       0       0       0
   279 ;;      Temps:          2       0       0       0       0       0       0
   280 ;;      Totals:         3       0       0       0       0       0       0
   281 ;;Total ram usage:        3 bytes
   282 ;; Hardware stack levels required when called:    4
   283 ;; This function calls:
   284 ;;		_lcd_gotoxy
   285 ;;		_lcd_init
   286 ;;		_lcd_msg
   287 ;;		_lcd_putc
   288 ;;		_printf
   289 ;;		_sci_conf
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  0006FA                     __ptext0:
   297                           	opt stack 0
   298  0006FA                     _main:
   299                           	opt stack 27
   300                           
   301                           ;usart_6,c.c: 41: unsigned char c;
   302                           ;usart_6,c.c: 43: TRISCbits.TRISC4 = 0;
   303                           
   304                           ;incstack = 0
   305  0006FA  9894               	bcf	3988,4,c	;volatile
   306                           
   307                           ;usart_6,c.c: 44: sci_conf();
   308  0006FC  ECC7  F004         	call	_sci_conf	;wreg free
   309                           
   310                           ;usart_6,c.c: 45: lcd_init();
   311  000700  EC1E  F003         	call	_lcd_init	;wreg free
   312                           
   313                           ;usart_6,c.c: 46: lcd_msg("Puerto Serial");
   314  000704  0E16               	movlw	low STR_1
   315  000706  6E05               	movwf	lcd_msg@c,c
   316  000708  0E06               	movlw	high STR_1
   317  00070A  6E06               	movwf	lcd_msg@c+1,c
   318  00070C  EC9A  F004         	call	_lcd_msg	;wreg free
   319                           
   320                           ;usart_6,c.c: 47: lcd_gotoxy(1,2);
   321  000710  0E02               	movlw	2
   322  000712  6E04               	movwf	lcd_gotoxy@y,c
   323  000714  0E01               	movlw	1
   324  000716  EC6A  F004         	call	_lcd_gotoxy
   325                           
   326                           ;usart_6,c.c: 48: lcd_msg("hola");
   327  00071A  0E36               	movlw	low STR_2
   328  00071C  6E05               	movwf	lcd_msg@c,c
   329  00071E  0E06               	movlw	high STR_2
   330  000720  6E06               	movwf	lcd_msg@c+1,c
   331  000722  EC9A  F004         	call	_lcd_msg	;wreg free
   332                           
   333                           ;usart_6,c.c: 49: printf("Muestra caracteres\n\r");
   334  000726  0E01               	movlw	low STR_3
   335  000728  6E02               	movwf	printf@f,c
   336  00072A  0E06               	movlw	high STR_3
   337  00072C  6E03               	movwf	printf@f+1,c
   338  00072E  ECC9  F003         	call	_printf	;wreg free
   339  000732                     
   340                           ;usart_6,c.c: 51: {
   341                           ;usart_6,c.c: 52: for (unsigned char x = 65; x <=90; x++)
   342  000732  0E41               	movlw	65
   343  000734  6E0C               	movwf	main@x,c
   344  000736                     l1082:
   345  000736  0E5A               	movlw	90
   346  000738  640C               	cpfsgt	main@x,c
   347  00073A  D001               	goto	l129
   348  00073C  D7FA               	goto	l128
   349  00073E                     l129:
   350                           
   351                           ;usart_6,c.c: 53: {
   352                           ;usart_6,c.c: 54: printf("letra: %c\n\r",x);
   353  00073E  0E24               	movlw	low STR_4
   354  000740  6E02               	movwf	printf@f,c
   355  000742  0E06               	movlw	high STR_4
   356  000744  6E03               	movwf	printf@f+1,c
   357  000746  C00C  F004         	movff	main@x,?_printf+2
   358  00074A  6A05               	clrf	?_printf+3,c
   359  00074C  ECC9  F003         	call	_printf	;wreg free
   360                           
   361                           ;usart_6,c.c: 55: LATCbits.LATC4^= 1;
   362  000750  788B               	btg	3979,4,c	;volatile
   363                           
   364                           ;usart_6,c.c: 56: lcd_gotoxy(1,2); lcd_msg("     ");
   365  000752  0E02               	movlw	2
   366  000754  6E04               	movwf	lcd_gotoxy@y,c
   367  000756  0E01               	movlw	1
   368  000758  EC6A  F004         	call	_lcd_gotoxy
   369  00075C  0E30               	movlw	low STR_5
   370  00075E  6E05               	movwf	lcd_msg@c,c
   371  000760  0E06               	movlw	high STR_5
   372  000762  6E06               	movwf	lcd_msg@c+1,c
   373  000764  EC9A  F004         	call	_lcd_msg	;wreg free
   374                           
   375                           ;usart_6,c.c: 57: lcd_gotoxy(1,2); lcd_putc(x);
   376  000768  0E02               	movlw	2
   377  00076A  6E04               	movwf	lcd_gotoxy@y,c
   378  00076C  0E01               	movlw	1
   379  00076E  EC6A  F004         	call	_lcd_gotoxy
   380  000772  500C               	movf	main@x,w,c
   381  000774  EC4D  F004         	call	_lcd_putc
   382                           
   383                           ;usart_6,c.c: 58: _delay((unsigned long)((500)*(16000000/4000.0)));
   384  000778  0E0B               	movlw	11
   385  00077A  6E0B               	movwf	(??_main+1)& (0+255),c
   386  00077C  0E26               	movlw	38
   387  00077E  6E0A               	movwf	??_main& (0+255),c
   388  000780  0E5E               	movlw	94
   389  000782                     u187:
   390  000782  2EE8               	decfsz	wreg,f,c
   391  000784  D7FE               	bra	u187
   392  000786  2E0A               	decfsz	??_main& (0+255),f,c
   393  000788  D7FC               	bra	u187
   394  00078A  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   395  00078C  D7FA               	bra	u187
   396  00078E  2A0C               	incf	main@x,f,c
   397  000790  D7D2               	goto	l1082
   398  000792                     __end_of_main:
   399                           	opt stack 0
   400                           tblptru	equ	0xFF8
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404 ;; *************** function _sci_conf *****************
   405 ;; Defined at:
   406 ;;		line 4 in file "../MyLibs/usart.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   420 ;;      Params:         0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434  00098E                     __ptext1:
   435                           	opt stack 0
   436  00098E                     _sci_conf:
   437                           	opt stack 30
   438                           
   439                           ;usart.c: 13: BAUDCONbits.BRG16 = 0;
   440                           
   441                           ;incstack = 0
   442  00098E  96B8               	bcf	4024,3,c	;volatile
   443                           
   444                           ;usart.c: 15: TXSTAbits.SYNC = 0;
   445  000990  98AC               	bcf	4012,4,c	;volatile
   446                           
   447                           ;usart.c: 16: TXSTAbits.BRGH = 1;
   448  000992  84AC               	bsf	4012,2,c	;volatile
   449                           
   450                           ;usart.c: 17: SPBRG = 103;
   451  000994  0E67               	movlw	103
   452  000996  6EAF               	movwf	4015,c	;volatile
   453                           
   454                           ;usart.c: 18: TXSTAbits.TXEN = 1;
   455  000998  8AAC               	bsf	4012,5,c	;volatile
   456                           
   457                           ;usart.c: 20: RCSTAbits.SPEN = 1;
   458  00099A  8EAB               	bsf	4011,7,c	;volatile
   459                           
   460                           ;usart.c: 21: RCSTAbits.CREN = 1;
   461  00099C  88AB               	bsf	4011,4,c	;volatile
   462                           
   463                           ;usart.c: 23: TRISCbits.TRISC7 = 1;
   464  00099E  8E94               	bsf	3988,7,c	;volatile
   465                           
   466                           ;usart.c: 24: TRISCbits.TRISC6 = 0;
   467  0009A0  9C94               	bcf	3988,6,c	;volatile
   468  0009A2  0012               	return		;funcret
   469  0009A4                     __end_of_sci_conf:
   470                           	opt stack 0
   471                           tblptru	equ	0xFF8
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           
   475 ;; *************** function _printf *****************
   476 ;; Defined at:
   477 ;;		line 464 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  f               2    1[COMRAM] PTR const unsigned char 
   480 ;;		 -> STR_4(12), STR_3(21), 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  tmpval          4    0        struct .
   483 ;;  cp              3    0        PTR const unsigned char 
   484 ;;  ap              2    6[COMRAM] PTR void [1]
   485 ;;		 -> ?_printf(2), 
   486 ;;  len             2    0        unsigned int 
   487 ;;  val             2    0        unsigned int 
   488 ;;  c               1    8[COMRAM] char 
   489 ;;  flag            1    5[COMRAM] unsigned char 
   490 ;;  prec            1    0        char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  2    1[COMRAM] int 
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   500 ;;      Params:         4       0       0       0       0       0       0
   501 ;;      Locals:         4       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0
   503 ;;      Totals:         8       0       0       0       0       0       0
   504 ;;Total ram usage:        8 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		_putch
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text2
   515  000792                     __ptext2:
   516                           	opt stack 0
   517  000792                     _printf:
   518                           	opt stack 29
   519                           
   520                           ;doprnt.c: 466: va_list ap;
   521                           ;doprnt.c: 499: signed char c;
   522                           ;doprnt.c: 506: signed char prec;
   523                           ;doprnt.c: 508: unsigned char flag;
   524                           ;doprnt.c: 523: union {
   525                           ;doprnt.c: 524: unsigned long vd;
   526                           ;doprnt.c: 525: double integ;
   527                           ;doprnt.c: 526: } tmpval;
   528                           ;doprnt.c: 528: unsigned int val;
   529                           ;doprnt.c: 529: unsigned len;
   530                           ;doprnt.c: 530: const char * cp;
   531                           ;doprnt.c: 533: *ap = __va_start();
   532                           
   533                           ;incstack = 0
   534  000792  0E04               	movlw	low (?_printf+2)
   535  000794  6E07               	movwf	printf@ap,c
   536  000796  0E00               	movlw	high (?_printf+2)
   537  000798  6E08               	movwf	printf@ap+1,c
   538                           
   539                           ;doprnt.c: 536: while(c = *f++) {
   540  00079A  D02A               	goto	l150
   541  00079C                     
   542                           ;doprnt.c: 538: if(c != '%')
   543  00079C  0E25               	movlw	37
   544  00079E  1809               	xorwf	printf@c,w,c
   545  0007A0  B4D8               	btfsc	status,2,c
   546  0007A2  D004               	goto	l144
   547                           
   548                           ;doprnt.c: 540: {
   549                           ;doprnt.c: 541: (putch(c) );
   550  0007A4  5009               	movf	printf@c,w,c
   551  0007A6  ECDD  F004         	call	_putch
   552                           
   553                           ;doprnt.c: 542: continue;
   554  0007AA  D022               	goto	l150
   555  0007AC                     l144:
   556                           
   557                           ;doprnt.c: 543: }
   558                           ;doprnt.c: 548: flag = 0;
   559  0007AC  0E00               	movlw	0
   560  0007AE  6E06               	movwf	printf@flag,c
   561                           
   562                           ;doprnt.c: 635: switch(c = *f++) {
   563  0007B0  D00E               	goto	l145
   564  0007B2                     
   565                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   566  0007B2  C007  FFD9         	movff	printf@ap,fsr2l
   567  0007B6  C008  FFDA         	movff	printf@ap+1,fsr2h
   568  0007BA  50DF               	movf	indf2,w,c
   569  0007BC  6E09               	movwf	printf@c,c
   570  0007BE  0E02               	movlw	2
   571  0007C0  2607               	addwf	printf@ap,f,c
   572  0007C2  0E00               	movlw	0
   573  0007C4  2208               	addwfc	printf@ap+1,f,c
   574  0007C6                     
   575                           ;doprnt.c: 809: (putch(c) );
   576  0007C6  5009               	movf	printf@c,w,c
   577  0007C8  ECDD  F004         	call	_putch
   578                           
   579                           ;doprnt.c: 822: }
   580                           
   581                           ;doprnt.c: 810: continue;
   582  0007CC  D011               	goto	l150
   583  0007CE                     l145:
   584  0007CE  C002  FFF6         	movff	printf@f,tblptrl
   585  0007D2  C003  FFF7         	movff	printf@f+1,tblptrh
   586  0007D6  4A02               	infsnz	printf@f,f,c
   587  0007D8  2A03               	incf	printf@f+1,f,c
   588  0007DA                     	if	0	;tblptru may be non-zero
   589  0007DA                     	endif
   590  0007DA                     	if	0	;tblptru may be non-zero
   591  0007DA                     	endif
   592  0007DA  0008               	tblrd		*
   593  0007DC  CFF5 F009          	movff	tablat,printf@c
   594  0007E0  5009               	movf	printf@c,w,c
   595                           
   596                           ; Switch size 1, requested type "space"
   597                           ; Number of cases is 2, Range of values is 0 to 99
   598                           ; switch strategies available:
   599                           ; Name         Instructions Cycles
   600                           ; simple_byte            7     4 (average)
   601                           ;	Chosen strategy is simple_byte
   602  0007E2  0A00               	xorlw	0	; case 0
   603  0007E4  B4D8               	btfsc	status,2,c
   604  0007E6  0012               	return	
   605  0007E8  0A63               	xorlw	99	; case 99
   606  0007EA  B4D8               	btfsc	status,2,c
   607  0007EC  D7E2               	goto	l148
   608  0007EE  D7EB               	goto	l149
   609  0007F0                     l150:
   610                           
   611                           ;doprnt.c: 1422: {
   612  0007F0  C002  FFF6         	movff	printf@f,tblptrl
   613  0007F4  C003  FFF7         	movff	printf@f+1,tblptrh
   614  0007F8  4A02               	infsnz	printf@f,f,c
   615  0007FA  2A03               	incf	printf@f+1,f,c
   616  0007FC                     	if	0	;tblptru may be non-zero
   617  0007FC                     	endif
   618  0007FC                     	if	0	;tblptru may be non-zero
   619  0007FC                     	endif
   620  0007FC  0008               	tblrd		*
   621  0007FE  CFF5 F009          	movff	tablat,printf@c
   622  000802  5009               	movf	printf@c,w,c
   623  000804  B4D8               	btfsc	status,2,c
   624  000806  0012               	return	
   625  000808  D7C9               	goto	l143
   626  00080A                     __end_of_printf:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           indf2	equ	0xFDF
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639 ;; *************** function _putch *****************
   640 ;; Defined at:
   641 ;;		line 34 in file "../MyLibs/usart.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  dato            1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  dato            1    0[COMRAM] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   655 ;;      Params:         0       0       0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0
   658 ;;      Totals:         1       0       0       0       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_printf
   665 ;;		_getche
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text3
   670  0009BA                     __ptext3:
   671                           	opt stack 0
   672  0009BA                     _putch:
   673                           	opt stack 29
   674                           
   675                           ;incstack = 0
   676                           ;putch@dato stored from wreg
   677  0009BA  6E01               	movwf	putch@dato,c
   678  0009BC                     
   679                           ;usart.c: 36: while(PIR1bits.TXIF == 0);
   680  0009BC  A89E               	btfss	3998,4,c	;volatile
   681  0009BE  D7FE               	goto	l866
   682                           
   683                           ;usart.c: 37: TXREG = dato;
   684  0009C0  C001  FFAD         	movff	putch@dato,4013	;volatile
   685  0009C4  0012               	return		;funcret
   686  0009C6                     __end_of_putch:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           indf2	equ	0xFDF
   695                           fsr2h	equ	0xFDA
   696                           fsr2l	equ	0xFD9
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _lcd_msg *****************
   700 ;; Defined at:
   701 ;;		line 101 in file "../MyLibs/lcd4a.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  c               2    4[COMRAM] PTR unsigned char 
   704 ;;		 -> STR_5(6), STR_2(5), STR_1(14), 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   716 ;;      Params:         2       0       0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0
   719 ;;      Totals:         2       0       0       0       0       0       0
   720 ;;Total ram usage:        2 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    3
   723 ;; This function calls:
   724 ;;		_lcd_putc
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text4
   731  000934                     __ptext4:
   732                           	opt stack 0
   733  000934                     _lcd_msg:
   734                           	opt stack 27
   735                           
   736                           ;lcd4a.c: 103: while(*c != 0)
   737                           
   738                           ;incstack = 0
   739  000934  D00A               	goto	l36
   740  000936                     
   741                           ;lcd4a.c: 104: {
   742                           ;lcd4a.c: 105: lcd_putc(*c++);
   743  000936  C005  FFF6         	movff	lcd_msg@c,tblptrl
   744  00093A  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   745  00093E                     	if	0	;tblptru may be non-zero
   746  00093E                     	endif
   747  00093E                     	if	0	;tblptru may be non-zero
   748  00093E                     	endif
   749  00093E  0008               	tblrd		*
   750  000940  50F5               	movf	tablat,w,c
   751  000942  EC4D  F004         	call	_lcd_putc
   752  000946  4A05               	infsnz	lcd_msg@c,f,c
   753  000948  2A06               	incf	lcd_msg@c+1,f,c
   754  00094A                     l36:
   755  00094A  C005  FFF6         	movff	lcd_msg@c,tblptrl
   756  00094E  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   757  000952                     	if	0	;tblptru may be non-zero
   758  000952                     	endif
   759  000952                     	if	0	;tblptru may be non-zero
   760  000952                     	endif
   761  000952  0008               	tblrd		*
   762  000954  50F5               	movf	tablat,w,c
   763  000956  0900               	iorlw	0
   764  000958  B4D8               	btfsc	status,2,c
   765  00095A  0012               	return	
   766  00095C  D7EC               	goto	l37
   767  00095E                     __end_of_lcd_msg:
   768                           	opt stack 0
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           indf2	equ	0xFDF
   776                           fsr2h	equ	0xFDA
   777                           fsr2l	equ	0xFD9
   778                           status	equ	0xFD8
   779                           
   780 ;; *************** function _lcd_putc *****************
   781 ;; Defined at:
   782 ;;		line 66 in file "../MyLibs/lcd4a.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  c               1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  c               1    3[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         0       0       0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0
   799 ;;      Totals:         1       0       0       0       0       0       0
   800 ;;Total ram usage:        1 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    2
   803 ;; This function calls:
   804 ;;		_lcd_cmd
   805 ;;		_lcd_dwr
   806 ;; This function is called by:
   807 ;;		_lcd_msg
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text5
   813  00089A                     __ptext5:
   814                           	opt stack 0
   815  00089A                     _lcd_putc:
   816                           	opt stack 28
   817                           
   818                           ;incstack = 0
   819                           ;lcd_putc@c stored from wreg
   820  00089A  6E04               	movwf	lcd_putc@c,c
   821                           
   822                           ;lcd4a.c: 68: switch(c)
   823  00089C  D010               	goto	l24
   824  00089E                     
   825                           ;lcd4a.c: 71: lcd_cmd(0x01);
   826  00089E  0E01               	movlw	1
   827  0008A0  EC05  F004         	call	_lcd_cmd
   828                           
   829                           ;lcd4a.c: 72: break;
   830  0008A4  0012               	return	
   831  0008A6                     
   832                           ;lcd4a.c: 74: lcd_cmd(3);
   833  0008A6  0E03               	movlw	3
   834  0008A8  EC05  F004         	call	_lcd_cmd
   835                           
   836                           ;lcd4a.c: 75: break;
   837  0008AC  0012               	return	
   838  0008AE                     
   839                           ;lcd4a.c: 77: lcd_cmd(0x10);
   840  0008AE  0E10               	movlw	16
   841  0008B0  EC05  F004         	call	_lcd_cmd
   842                           
   843                           ;lcd4a.c: 78: break;
   844  0008B4  0012               	return	
   845  0008B6                     
   846                           ;lcd4a.c: 80: lcd_dwr(c);
   847  0008B6  5004               	movf	lcd_putc@c,w,c
   848  0008B8  EC2A  F004         	call	_lcd_dwr
   849                           
   850                           ;lcd4a.c: 82: }
   851                           
   852                           ;lcd4a.c: 81: break;
   853  0008BC  0012               	return	
   854  0008BE                     l24:
   855  0008BE  5004               	movf	lcd_putc@c,w,c
   856                           
   857                           ; Switch size 1, requested type "space"
   858                           ; Number of cases is 3, Range of values is 8 to 12
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte           10     6 (average)
   862                           ;	Chosen strategy is simple_byte
   863  0008C0  0A08               	xorlw	8	; case 8
   864  0008C2  B4D8               	btfsc	status,2,c
   865  0008C4  D7F4               	goto	l28
   866  0008C6  0A02               	xorlw	2	; case 10
   867  0008C8  B4D8               	btfsc	status,2,c
   868  0008CA  D7ED               	goto	l27
   869  0008CC  0A06               	xorlw	6	; case 12
   870  0008CE  B4D8               	btfsc	status,2,c
   871  0008D0  D7E6               	goto	l25
   872  0008D2  D7F1               	goto	l29
   873  0008D4                     __end_of_lcd_putc:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           indf2	equ	0xFDF
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _lcd_dwr *****************
   887 ;; Defined at:
   888 ;;		line 86 in file "../MyLibs/lcd4a.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  x               1    wreg     unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  x               1    2[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0
   904 ;;      Temps:          1       0       0       0       0       0       0
   905 ;;      Totals:         2       0       0       0       0       0       0
   906 ;;Total ram usage:        2 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    1
   909 ;; This function calls:
   910 ;;		_lcd_lat
   911 ;;		_manda
   912 ;; This function is called by:
   913 ;;		_lcd_putc
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text6
   918  000854                     __ptext6:
   919                           	opt stack 0
   920  000854                     _lcd_dwr:
   921                           	opt stack 28
   922                           
   923                           ;incstack = 0
   924                           ;lcd_dwr@x stored from wreg
   925  000854  6E03               	movwf	lcd_dwr@x,c
   926                           
   927                           ;lcd4a.c: 88: (*(&(*(&PORTD + 0x09))) |= (1<<(5)));
   928  000856  8A8C               	bsf	3980,5,c	;volatile
   929                           
   930                           ;lcd4a.c: 89: lcd &= 0x0F;
   931  000858  0E0F               	movlw	15
   932  00085A  1615               	andwf	_lcd,f,c
   933                           
   934                           ;lcd4a.c: 90: lcd |= ((x & 0xF0));
   935  00085C  5003               	movf	lcd_dwr@x,w,c
   936  00085E  0BF0               	andlw	240
   937  000860  1215               	iorwf	_lcd,f,c
   938                           
   939                           ;lcd4a.c: 91: manda(lcd);
   940  000862  5015               	movf	_lcd,w,c
   941  000864  EC84  F004         	call	_manda
   942                           
   943                           ;lcd4a.c: 92: lcd_lat();
   944  000868  ECD2  F004         	call	_lcd_lat	;wreg free
   945                           
   946                           ;lcd4a.c: 93: _delay((unsigned long)((4)*(16000000/4000.0)));
   947  00086C  0E15               	movlw	21
   948  00086E  6E02               	movwf	??_lcd_dwr& (0+255),c
   949  000870  0EC6               	movlw	198
   950  000872                     u197:
   951  000872  2EE8               	decfsz	wreg,f,c
   952  000874  D7FE               	bra	u197
   953  000876  2E02               	decfsz	??_lcd_dwr& (0+255),f,c
   954  000878  D7FC               	bra	u197
   955  00087A  D000               	nop2	
   956                           
   957                           ;lcd4a.c: 95: lcd &= 0x0F;
   958  00087C  0E0F               	movlw	15
   959  00087E  1615               	andwf	_lcd,f,c
   960                           
   961                           ;lcd4a.c: 96: lcd |= ((x & 0x0F)<<4);
   962  000880  C003  F002         	movff	lcd_dwr@x,??_lcd_dwr
   963  000884  0E0F               	movlw	15
   964  000886  1602               	andwf	??_lcd_dwr,f,c
   965  000888  3802               	swapf	??_lcd_dwr,w,c
   966  00088A  0BF0               	andlw	240
   967  00088C  1215               	iorwf	_lcd,f,c
   968                           
   969                           ;lcd4a.c: 97: manda(lcd);
   970  00088E  5015               	movf	_lcd,w,c
   971  000890  EC84  F004         	call	_manda
   972                           
   973                           ;lcd4a.c: 98: lcd_lat();
   974  000894  ECD2  F004         	call	_lcd_lat	;wreg free
   975  000898  0012               	return		;funcret
   976  00089A                     __end_of_lcd_dwr:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           indf2	equ	0xFDF
   985                           fsr2h	equ	0xFDA
   986                           fsr2l	equ	0xFD9
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _lcd_init *****************
   990 ;; Defined at:
   991 ;;		line 135 in file "../MyLibs/lcd4a.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1005 ;;      Params:         0       0       0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0
  1007 ;;      Temps:          1       0       0       0       0       0       0
  1008 ;;      Totals:         1       0       0       0       0       0       0
  1009 ;;Total ram usage:        1 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    2
  1012 ;; This function calls:
  1013 ;;		_lcd_cmd
  1014 ;;		_lcd_cmd_hf
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text7
  1021  00063C                     __ptext7:
  1022                           	opt stack 0
  1023  00063C                     _lcd_init:
  1024                           	opt stack 28
  1025                           
  1026                           ;lcd4a.c: 143: (*(&(*(&PORTB + 0x12))) &=~ (1<<(7)));
  1027                           
  1028                           ;incstack = 0
  1029  00063C  9E93               	bcf	3987,7,c	;volatile
  1030                           
  1031                           ;lcd4a.c: 144: (*(&(*(&PORTB + 0x12))) &=~ (1<<(6)));
  1032  00063E  9C93               	bcf	3987,6,c	;volatile
  1033                           
  1034                           ;lcd4a.c: 145: (*(&(*(&PORTB + 0x12))) &=~ (1<<(5)));
  1035  000640  9A93               	bcf	3987,5,c	;volatile
  1036                           
  1037                           ;lcd4a.c: 146: (*(&(*(&PORTB + 0x12))) &=~ (1<<(4)));
  1038  000642  9893               	bcf	3987,4,c	;volatile
  1039                           
  1040                           ;lcd4a.c: 147: (*(&(*(&PORTD + 0x12))) &=~ (1<<(5)));
  1041  000644  9A95               	bcf	3989,5,c	;volatile
  1042                           
  1043                           ;lcd4a.c: 149: (*(&(*(&PORTD + 0x12))) &=~ (1<<(6)));
  1044  000646  9C95               	bcf	3989,6,c	;volatile
  1045                           
  1046                           ;lcd4a.c: 152: (*(&(*(&PORTD + 0x12))) &=~ (1<<(7)));
  1047  000648  9E95               	bcf	3989,7,c	;volatile
  1048                           
  1049                           ;lcd4a.c: 155: (*(&(*(&PORTD + 0x09))) &=~ (1<<(6)));
  1050  00064A  9C8C               	bcf	3980,6,c	;volatile
  1051                           
  1052                           ;lcd4a.c: 158: lcd_cmd_hf(0x30);
  1053  00064C  0E30               	movlw	48
  1054  00064E  ECAF  F004         	call	_lcd_cmd_hf
  1055                           
  1056                           ;lcd4a.c: 159: _delay((unsigned long)((15)*(16000000/4000.0)));
  1057  000652  0E4E               	movlw	78
  1058  000654  6E04               	movwf	??_lcd_init& (0+255),c
  1059  000656  0EEB               	movlw	235
  1060  000658                     u207:
  1061  000658  2EE8               	decfsz	wreg,f,c
  1062  00065A  D7FE               	bra	u207
  1063  00065C  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1064  00065E  D7FC               	bra	u207
  1065  000660  F000               	nop	
  1066                           
  1067                           ;lcd4a.c: 160: lcd_cmd_hf(0x30);
  1068  000662  0E30               	movlw	48
  1069  000664  ECAF  F004         	call	_lcd_cmd_hf
  1070                           
  1071                           ;lcd4a.c: 161: _delay((unsigned long)((3)*(16000000/4000.0)));
  1072  000668  0E10               	movlw	16
  1073  00066A  6E04               	movwf	??_lcd_init& (0+255),c
  1074  00066C  0E94               	movlw	148
  1075  00066E                     u217:
  1076  00066E  2EE8               	decfsz	wreg,f,c
  1077  000670  D7FE               	bra	u217
  1078  000672  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1079  000674  D7FC               	bra	u217
  1080  000676  D000               	nop2	
  1081                           
  1082                           ;lcd4a.c: 162: lcd_cmd_hf(0x30);
  1083  000678  0E30               	movlw	48
  1084  00067A  ECAF  F004         	call	_lcd_cmd_hf
  1085                           
  1086                           ;lcd4a.c: 163: _delay((unsigned long)((15)*(16000000/4000.0)));
  1087  00067E  0E4E               	movlw	78
  1088  000680  6E04               	movwf	??_lcd_init& (0+255),c
  1089  000682  0EEB               	movlw	235
  1090  000684                     u227:
  1091  000684  2EE8               	decfsz	wreg,f,c
  1092  000686  D7FE               	bra	u227
  1093  000688  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1094  00068A  D7FC               	bra	u227
  1095  00068C  F000               	nop	
  1096                           
  1097                           ;lcd4a.c: 164: lcd_cmd_hf(0x20);
  1098  00068E  0E20               	movlw	32
  1099  000690  ECAF  F004         	call	_lcd_cmd_hf
  1100                           
  1101                           ;lcd4a.c: 165: _delay((unsigned long)((6)*(16000000/4000.0)));
  1102  000694  0E20               	movlw	32
  1103  000696  6E04               	movwf	??_lcd_init& (0+255),c
  1104  000698  0E2A               	movlw	42
  1105  00069A                     u237:
  1106  00069A  2EE8               	decfsz	wreg,f,c
  1107  00069C  D7FE               	bra	u237
  1108  00069E  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1109  0006A0  D7FC               	bra	u237
  1110                           
  1111                           ;lcd4a.c: 166: lcd_cmd(0x28);
  1112  0006A2  0E28               	movlw	40
  1113  0006A4  EC05  F004         	call	_lcd_cmd
  1114                           
  1115                           ;lcd4a.c: 167: _delay((unsigned long)((6)*(16000000/4000.0)));
  1116  0006A8  0E20               	movlw	32
  1117  0006AA  6E04               	movwf	??_lcd_init& (0+255),c
  1118  0006AC  0E2A               	movlw	42
  1119  0006AE                     u247:
  1120  0006AE  2EE8               	decfsz	wreg,f,c
  1121  0006B0  D7FE               	bra	u247
  1122  0006B2  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1123  0006B4  D7FC               	bra	u247
  1124                           
  1125                           ;lcd4a.c: 168: lcd_cmd(0x0E);
  1126  0006B6  0E0E               	movlw	14
  1127  0006B8  EC05  F004         	call	_lcd_cmd
  1128                           
  1129                           ;lcd4a.c: 169: _delay((unsigned long)((6)*(16000000/4000.0)));
  1130  0006BC  0E20               	movlw	32
  1131  0006BE  6E04               	movwf	??_lcd_init& (0+255),c
  1132  0006C0  0E2A               	movlw	42
  1133  0006C2                     u257:
  1134  0006C2  2EE8               	decfsz	wreg,f,c
  1135  0006C4  D7FE               	bra	u257
  1136  0006C6  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1137  0006C8  D7FC               	bra	u257
  1138                           
  1139                           ;lcd4a.c: 170: lcd_cmd(0x01);
  1140  0006CA  0E01               	movlw	1
  1141  0006CC  EC05  F004         	call	_lcd_cmd
  1142                           
  1143                           ;lcd4a.c: 171: _delay((unsigned long)((6)*(16000000/4000.0)));
  1144  0006D0  0E20               	movlw	32
  1145  0006D2  6E04               	movwf	??_lcd_init& (0+255),c
  1146  0006D4  0E2A               	movlw	42
  1147  0006D6                     u267:
  1148  0006D6  2EE8               	decfsz	wreg,f,c
  1149  0006D8  D7FE               	bra	u267
  1150  0006DA  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1151  0006DC  D7FC               	bra	u267
  1152                           
  1153                           ;lcd4a.c: 172: lcd_cmd(0x06);
  1154  0006DE  0E06               	movlw	6
  1155  0006E0  EC05  F004         	call	_lcd_cmd
  1156                           
  1157                           ;lcd4a.c: 173: _delay((unsigned long)((6)*(16000000/4000.0)));
  1158  0006E4  0E20               	movlw	32
  1159  0006E6  6E04               	movwf	??_lcd_init& (0+255),c
  1160  0006E8  0E2A               	movlw	42
  1161  0006EA                     u277:
  1162  0006EA  2EE8               	decfsz	wreg,f,c
  1163  0006EC  D7FE               	bra	u277
  1164  0006EE  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1165  0006F0  D7FC               	bra	u277
  1166                           
  1167                           ;lcd4a.c: 174: lcd_cmd(0x80);
  1168  0006F2  0E80               	movlw	128
  1169  0006F4  EC05  F004         	call	_lcd_cmd
  1170  0006F8  0012               	return		;funcret
  1171  0006FA                     __end_of_lcd_init:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           indf2	equ	0xFDF
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function _lcd_cmd_hf *****************
  1185 ;; Defined at:
  1186 ;;		line 56 in file "../MyLibs/lcd4a.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  x               1    wreg     unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  x               1    1[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         0       0       0       0       0       0       0
  1201 ;;      Locals:         1       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         1       0       0       0       0       0       0
  1204 ;;Total ram usage:        1 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    1
  1207 ;; This function calls:
  1208 ;;		_lcd_lat
  1209 ;;		_manda
  1210 ;; This function is called by:
  1211 ;;		_lcd_init
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text8
  1216  00095E                     __ptext8:
  1217                           	opt stack 0
  1218  00095E                     _lcd_cmd_hf:
  1219                           	opt stack 28
  1220                           
  1221                           ;incstack = 0
  1222                           ;lcd_cmd_hf@x stored from wreg
  1223  00095E  6E02               	movwf	lcd_cmd_hf@x,c
  1224                           
  1225                           ;lcd4a.c: 58: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1226  000960  9A8C               	bcf	3980,5,c	;volatile
  1227                           
  1228                           ;lcd4a.c: 59: lcd &= 0x0F;
  1229  000962  0E0F               	movlw	15
  1230  000964  1615               	andwf	_lcd,f,c
  1231                           
  1232                           ;lcd4a.c: 60: lcd |= (x & 0xF0);
  1233  000966  5002               	movf	lcd_cmd_hf@x,w,c
  1234  000968  0BF0               	andlw	240
  1235  00096A  1215               	iorwf	_lcd,f,c
  1236                           
  1237                           ;lcd4a.c: 61: manda(lcd);
  1238  00096C  5015               	movf	_lcd,w,c
  1239  00096E  EC84  F004         	call	_manda
  1240                           
  1241                           ;lcd4a.c: 62: lcd_lat();
  1242  000972  ECD2  F004         	call	_lcd_lat	;wreg free
  1243  000976  0012               	return		;funcret
  1244  000978                     __end_of_lcd_cmd_hf:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           indf2	equ	0xFDF
  1253                           fsr2h	equ	0xFDA
  1254                           fsr2l	equ	0xFD9
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _lcd_gotoxy *****************
  1258 ;; Defined at:
  1259 ;;		line 114 in file "../MyLibs/lcd4a.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  x               1    wreg     unsigned char 
  1262 ;;  y               1    3[COMRAM] unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  x               1    5[COMRAM] unsigned char 
  1265 ;;  ADDRESS         1    6[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         1       0       0       0       0       0       0
  1276 ;;      Locals:         2       0       0       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0
  1278 ;;      Totals:         4       0       0       0       0       0       0
  1279 ;;Total ram usage:        4 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    2
  1282 ;; This function calls:
  1283 ;;		_lcd_cmd
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text9
  1290  0008D4                     __ptext9:
  1291                           	opt stack 0
  1292  0008D4                     _lcd_gotoxy:
  1293                           	opt stack 28
  1294                           
  1295                           ;incstack = 0
  1296                           ;lcd_gotoxy@x stored from wreg
  1297  0008D4  6E06               	movwf	lcd_gotoxy@x,c
  1298                           
  1299                           ;lcd4a.c: 116: unsigned char ADDRESS= 0x00U;
  1300  0008D6  0E00               	movlw	0
  1301  0008D8  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1302                           
  1303                           ;lcd4a.c: 118: switch(y)
  1304  0008DA  D005               	goto	l42
  1305  0008DC                     
  1306                           ;lcd4a.c: 124: ADDRESS = 0xC0;
  1307  0008DC  0EC0               	movlw	192
  1308  0008DE  D001               	goto	L2
  1309  0008E0                     
  1310                           ;lcd4a.c: 127: ADDRESS = 0x80;
  1311  0008E0  0E80               	movlw	128
  1312  0008E2                     L2:
  1313  0008E2  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1314                           
  1315                           ;lcd4a.c: 130: }
  1316                           
  1317                           ;lcd4a.c: 128: break;
  1318  0008E4  D008               	goto	l44
  1319  0008E6                     l42:
  1320  0008E6  5004               	movf	lcd_gotoxy@y,w,c
  1321                           
  1322                           ; Switch size 1, requested type "space"
  1323                           ; Number of cases is 2, Range of values is 1 to 2
  1324                           ; switch strategies available:
  1325                           ; Name         Instructions Cycles
  1326                           ; simple_byte            7     4 (average)
  1327                           ;	Chosen strategy is simple_byte
  1328  0008E8  0A01               	xorlw	1	; case 1
  1329  0008EA  B4D8               	btfsc	status,2,c
  1330  0008EC  D7F9               	goto	l46
  1331  0008EE  0A03               	xorlw	3	; case 2
  1332  0008F0  B4D8               	btfsc	status,2,c
  1333  0008F2  D7F4               	goto	l45
  1334  0008F4  D7F5               	goto	l46
  1335  0008F6                     l44:
  1336                           
  1337                           ;lcd4a.c: 131: ADDRESS = (unsigned char)((unsigned char)(ADDRESS + x) - (1U));
  1338  0008F6  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1339  0008F8  2406               	addwf	lcd_gotoxy@x,w,c
  1340  0008FA  6E05               	movwf	??_lcd_gotoxy& (0+255),c
  1341  0008FC  0405               	decf	??_lcd_gotoxy,w,c
  1342  0008FE  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1343                           
  1344                           ;lcd4a.c: 132: lcd_cmd(ADDRESS);
  1345  000900  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1346  000902  EC05  F004         	call	_lcd_cmd
  1347  000906  0012               	return		;funcret
  1348  000908                     __end_of_lcd_gotoxy:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           indf2	equ	0xFDF
  1357                           fsr2h	equ	0xFDA
  1358                           fsr2l	equ	0xFD9
  1359                           status	equ	0xFD8
  1360                           
  1361 ;; *************** function _lcd_cmd *****************
  1362 ;; Defined at:
  1363 ;;		line 40 in file "../MyLibs/lcd4a.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  x               1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  x               1    2[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1377 ;;      Params:         0       0       0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0       0       0
  1380 ;;      Totals:         2       0       0       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    1
  1384 ;; This function calls:
  1385 ;;		_lcd_lat
  1386 ;;		_manda
  1387 ;; This function is called by:
  1388 ;;		_lcd_putc
  1389 ;;		_lcd_gotoxy
  1390 ;;		_lcd_init
  1391 ;;		_lcd_setcursor_vb
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text10
  1396  00080A                     __ptext10:
  1397                           	opt stack 0
  1398  00080A                     _lcd_cmd:
  1399                           	opt stack 28
  1400                           
  1401                           ;incstack = 0
  1402                           ;lcd_cmd@x stored from wreg
  1403  00080A  6E03               	movwf	lcd_cmd@x,c
  1404                           
  1405                           ;lcd4a.c: 42: lcd = 0;
  1406  00080C  0E00               	movlw	0
  1407  00080E  6E15               	movwf	_lcd,c
  1408                           
  1409                           ;lcd4a.c: 43: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1410  000810  9A8C               	bcf	3980,5,c	;volatile
  1411                           
  1412                           ;lcd4a.c: 44: lcd &= 0x0F;
  1413  000812  0E0F               	movlw	15
  1414  000814  1615               	andwf	_lcd,f,c
  1415                           
  1416                           ;lcd4a.c: 45: lcd |= (x & 0xF0);
  1417  000816  5003               	movf	lcd_cmd@x,w,c
  1418  000818  0BF0               	andlw	240
  1419  00081A  1215               	iorwf	_lcd,f,c
  1420                           
  1421                           ;lcd4a.c: 46: manda(lcd);
  1422  00081C  5015               	movf	_lcd,w,c
  1423  00081E  EC84  F004         	call	_manda
  1424                           
  1425                           ;lcd4a.c: 47: lcd_lat();
  1426  000822  ECD2  F004         	call	_lcd_lat	;wreg free
  1427                           
  1428                           ;lcd4a.c: 48: _delay((unsigned long)((4)*(16000000/4000.0)));
  1429  000826  0E15               	movlw	21
  1430  000828  6E02               	movwf	??_lcd_cmd& (0+255),c
  1431  00082A  0EC6               	movlw	198
  1432  00082C                     u287:
  1433  00082C  2EE8               	decfsz	wreg,f,c
  1434  00082E  D7FE               	bra	u287
  1435  000830  2E02               	decfsz	??_lcd_cmd& (0+255),f,c
  1436  000832  D7FC               	bra	u287
  1437  000834  D000               	nop2	
  1438                           
  1439                           ;lcd4a.c: 50: lcd &= 0x0F;
  1440  000836  0E0F               	movlw	15
  1441  000838  1615               	andwf	_lcd,f,c
  1442                           
  1443                           ;lcd4a.c: 51: lcd |= ((x & 0x0F)<<4);
  1444  00083A  C003  F002         	movff	lcd_cmd@x,??_lcd_cmd
  1445  00083E  0E0F               	movlw	15
  1446  000840  1602               	andwf	??_lcd_cmd,f,c
  1447  000842  3802               	swapf	??_lcd_cmd,w,c
  1448  000844  0BF0               	andlw	240
  1449  000846  1215               	iorwf	_lcd,f,c
  1450                           
  1451                           ;lcd4a.c: 52: manda(lcd);
  1452  000848  5015               	movf	_lcd,w,c
  1453  00084A  EC84  F004         	call	_manda
  1454                           
  1455                           ;lcd4a.c: 53: lcd_lat();
  1456  00084E  ECD2  F004         	call	_lcd_lat	;wreg free
  1457  000852  0012               	return		;funcret
  1458  000854                     __end_of_lcd_cmd:
  1459                           	opt stack 0
  1460                           tblptru	equ	0xFF8
  1461                           tblptrh	equ	0xFF7
  1462                           tblptrl	equ	0xFF6
  1463                           tablat	equ	0xFF5
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           indf2	equ	0xFDF
  1467                           fsr2h	equ	0xFDA
  1468                           fsr2l	equ	0xFD9
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _manda *****************
  1472 ;; Defined at:
  1473 ;;		line 178 in file "../MyLibs/lcd4a.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  dato            1    wreg     unsigned char 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  dato            1    0[COMRAM] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1487 ;;      Params:         0       0       0       0       0       0       0
  1488 ;;      Locals:         1       0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0
  1490 ;;      Totals:         1       0       0       0       0       0       0
  1491 ;;Total ram usage:        1 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_lcd_cmd
  1497 ;;		_lcd_cmd_hf
  1498 ;;		_lcd_dwr
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text11
  1503  000908                     __ptext11:
  1504                           	opt stack 0
  1505  000908                     _manda:
  1506                           	opt stack 28
  1507                           
  1508                           ;incstack = 0
  1509                           ;manda@dato stored from wreg
  1510  000908  6E01               	movwf	manda@dato,c
  1511                           
  1512                           ;lcd4a.c: 180: if(dato & (1 << 4)) (*(&(*(&PORTB + 0x09))) |= (1<<(4)));
  1513  00090A  A801               	btfss	manda@dato,4,c
  1514  00090C  D002               	goto	l53
  1515  00090E  888A               	bsf	3978,4,c	;volatile
  1516  000910  D001               	goto	l54
  1517  000912                     l53:
  1518                           
  1519                           ;lcd4a.c: 181: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(4)));
  1520  000912  988A               	bcf	3978,4,c	;volatile
  1521  000914                     l54:
  1522                           
  1523                           ;lcd4a.c: 182: if(dato & (1 << 5)) (*(&(*(&PORTB + 0x09))) |= (1<<(5)));
  1524  000914  AA01               	btfss	manda@dato,5,c
  1525  000916  D002               	goto	l55
  1526  000918  8A8A               	bsf	3978,5,c	;volatile
  1527  00091A  D001               	goto	l56
  1528  00091C                     l55:
  1529                           
  1530                           ;lcd4a.c: 183: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(5)));
  1531  00091C  9A8A               	bcf	3978,5,c	;volatile
  1532  00091E                     l56:
  1533                           
  1534                           ;lcd4a.c: 184: if(dato & (1 << 6)) (*(&(*(&PORTB + 0x09))) |= (1<<(6)));
  1535  00091E  AC01               	btfss	manda@dato,6,c
  1536  000920  D002               	goto	l57
  1537  000922  8C8A               	bsf	3978,6,c	;volatile
  1538  000924  D001               	goto	l58
  1539  000926                     l57:
  1540                           
  1541                           ;lcd4a.c: 185: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(6)));
  1542  000926  9C8A               	bcf	3978,6,c	;volatile
  1543  000928                     l58:
  1544                           
  1545                           ;lcd4a.c: 186: if(dato & (1 << 7)) (*(&(*(&PORTB + 0x09))) |= (1<<(7)));
  1546  000928  AE01               	btfss	manda@dato,7,c
  1547  00092A  D002               	goto	l59
  1548  00092C  8E8A               	bsf	3978,7,c	;volatile
  1549  00092E  0012               	return	
  1550  000930                     l59:
  1551                           
  1552                           ;lcd4a.c: 187: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(7)));
  1553  000930  9E8A               	bcf	3978,7,c	;volatile
  1554  000932  0012               	return	
  1555  000934                     __end_of_manda:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _lcd_lat *****************
  1569 ;; Defined at:
  1570 ;;		line 29 in file "../MyLibs/lcd4a.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1584 ;;      Params:         0       0       0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_lcd_cmd
  1594 ;;		_lcd_cmd_hf
  1595 ;;		_lcd_dwr
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text12
  1600  0009A4                     __ptext12:
  1601                           	opt stack 0
  1602  0009A4                     _lcd_lat:
  1603                           	opt stack 28
  1604                           
  1605                           ;lcd4a.c: 33: (*(&(*(&PORTD + 0x09))) |= (1<<(7)));
  1606                           
  1607                           ;incstack = 0
  1608  0009A4  8E8C               	bsf	3980,7,c	;volatile
  1609                           
  1610                           ;lcd4a.c: 35: _delay((unsigned long)((3)*(16000000/4000.0)));
  1611  0009A6  0E10               	movlw	16
  1612  0009A8  6E01               	movwf	??_lcd_lat& (0+255),c
  1613  0009AA  0E94               	movlw	148
  1614  0009AC                     u297:
  1615  0009AC  2EE8               	decfsz	wreg,f,c
  1616  0009AE  D7FE               	bra	u297
  1617  0009B0  2E01               	decfsz	??_lcd_lat& (0+255),f,c
  1618  0009B2  D7FC               	bra	u297
  1619  0009B4  D000               	nop2	
  1620                           
  1621                           ;lcd4a.c: 36: (*(&(*(&PORTD + 0x09))) &=~ (1<<(7)));
  1622  0009B6  9E8C               	bcf	3980,7,c	;volatile
  1623  0009B8  0012               	return		;funcret
  1624  0009BA                     __end_of_lcd_lat:
  1625                           	opt stack 0
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           indf2	equ	0xFDF
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647                           	psect	rparam
  1648  0000                     tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           indf2	equ	0xFDF
  1655                           fsr2h	equ	0xFDA
  1656                           fsr2l	equ	0xFD9
  1657                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      21
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[12]), STR_3(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _lcd_msg->_lcd_putc
    _lcd_putc->_lcd_cmd
    _lcd_putc->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_manda
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd_hf->_manda
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_manda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1664
                                              9 COMRAM     3     3      0
                         _lcd_gotoxy
                           _lcd_init
                            _lcd_msg
                           _lcd_putc
                             _printf
                           _sci_conf
 ---------------------------------------------------------------------------------
 (1) _sci_conf                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     305
                                              1 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     483
                                              4 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0     210
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      75
                                              1 COMRAM     1     1      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     411
                                              3 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (3) _manda                                                1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_cmd
       _lcd_lat
       _manda
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_cmd_hf
       _lcd_lat
       _manda
   _lcd_msg
     _lcd_putc
       _lcd_cmd
         _lcd_lat
         _manda
       _lcd_dwr
         _lcd_lat
         _manda
   _lcd_putc
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_dwr
       _lcd_lat
       _manda
   _printf
     _putch
   _sci_conf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      15       1       16.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      15        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 20 05:13:44 2018

            lcd_cmd_hf@x 0002                       l24 08BE                       l25 089E  
                     l42 08E6                       l27 08A6                       l44 08F6  
                     l28 08AE                       l36 094A                       l53 0912  
                     l45 08DC                       l29 08B6                       l37 0936  
                     l54 0914                       l46 08E0                       l55 091C  
                     l56 091E                       l57 0926                       l58 0928  
                     l59 0930              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l150 07F0                      l143 079C  
                    l144 07AC                      l128 0732                      l145 07CE  
                    l129 073E                      l148 07B2                      l149 07C6  
                    l866 09BC             __CFG_CPB$OFF 000000                      u207 0658  
                    u217 066E                      u227 0684                      u237 069A  
                    u247 06AE                      u257 06C2             __CFG_CPD$OFF 000000  
                    u267 06D6                      u187 0782                      u277 06EA  
                    u197 0872                      u287 082C                      u297 09AC  
                    _lcd 0015                      wreg 000FE8              lcd_gotoxy@x 0006  
            lcd_gotoxy@y 0004             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1082 0736                     STR_1 0616                     STR_2 0636  
                   STR_3 0601                     STR_4 0624                     STR_5 0630  
           __CFG_PWRT$ON 000000                     _main 06FA                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTB 000F81                    _PORTD 000F83                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_cmd 0854          __end_of_lcd_lat 09BA          __end_of_lcd_dwr 089A  
        __end_of_lcd_msg 095E            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _manda 0908  
                  _value 000D                    _putch 09BA                    main@x 000C  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __initialization 0978             __end_of_main 0792                   ??_main 000A  
          __activetblptr 000002                   ?_manda 0001                   ?_putch 0001  
         __CFG_XINST$OFF 000000         __end_of_lcd_init 06FA         __end_of_lcd_putc 08D4  
         __CFG_STVREN$ON 000000                   clear_0 097E                   _printf 0792  
       __end_of_sci_conf 09A4                ??_lcd_cmd 0002                ??_lcd_lat 0001  
              ??_lcd_dwr 0002                ??_lcd_msg 0007             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      lcd_gotoxy@ADDRESS 0007               __accesstop 0080  __end_of__initialization 0984  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_manda 0934            __end_of_putch 09C6                  ??_manda 0001  
                ??_putch 0001       __CFG_CCP2MX$PORTBE 000000                  ?_printf 0002  
             _lcd_cmd_hf 095E               _lcd_gotoxy 08D4                ?_lcd_init 0001  
              ?_lcd_putc 0001                ?_sci_conf 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0978  
                __ramtop 0600                  __ptext0 06FA                  __ptext1 098E  
                __ptext2 0792                  __ptext3 09BA                  __ptext4 0934  
                __ptext5 089A                  __ptext6 0854                  __ptext7 063C  
                __ptext8 095E                  __ptext9 08D4                  _lcd_cmd 080A  
                _lcd_lat 09A4          __size_of_printf 0078                  _lcd_dwr 0854  
                _lcd_msg 0934               ??_lcd_init 0004               ??_lcd_putc 0004  
   end_of_initialization 0984            __Lmediumconst 0000               ??_sci_conf 0001  
              _RCSTAbits 000FAB                  printf@c 0009                  printf@f 0002  
                postinc0 000FEE              ?_lcd_cmd_hf 0001                _TRISCbits 000F94  
            ?_lcd_gotoxy 0004                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
         __end_of_printf 080A      start_initialization 0978      __size_of_lcd_cmd_hf 001A  
    __size_of_lcd_gotoxy 0034         __CFG_LPT1OSC$OFF 000000                 ??_printf 0006  
            __pbssCOMRAM 000D        __size_of_lcd_init 00BE        __size_of_lcd_putc 003A  
      __size_of_sci_conf 0016                 ?_lcd_cmd 0001                 ?_lcd_lat 0001  
               ?_lcd_dwr 0001                 ?_lcd_msg 0005              __smallconst 0600  
         __size_of_manda 002C           __size_of_putch 000C                 _LATCbits 000F8B  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               printf@flag 0006  
           ??_lcd_cmd_hf 0002                lcd_putc@c 0004             ??_lcd_gotoxy 0005  
              manda@dato 0001                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_lcd_cmd_hf 0978       __end_of_lcd_gotoxy 0908         __size_of_lcd_cmd 004A  
       __size_of_lcd_lat 0016         __size_of_lcd_dwr 0046         __size_of_lcd_msg 002A  
               __ptext10 080A                 __ptext11 0908                 __ptext12 09A4  
               _lcd_init 063C                 _lcd_putc 089A            __size_of_main 0098  
               _sci_conf 098E                 lcd_cmd@x 0003                 lcd_dwr@x 0003  
               lcd_msg@c 0005                putch@dato 0001                 printf@ap 0007  
