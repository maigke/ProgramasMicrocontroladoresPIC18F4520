

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Mar 26 22:10:38 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 1.44
    30                           ; Generated 14/09/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F45K50 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  000D50                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _numero
    69  000D50  03FB               	dw	1019
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	opt stack 0
    74  000800  00                 	db	0
    75  000801                     _dpowers:
    76                           	opt stack 0
    77  000801  0001               	dw	1
    78  000803  000A               	dw	10
    79  000805  0064               	dw	100
    80  000807  03E8               	dw	1000
    81  000809  2710               	dw	10000
    82  00080B                     __end_of_dpowers:
    83                           	opt stack 0
    84  0000                     _ANSELB	set	3932
    85  0000                     _ANSELC	set	3933
    86  0000                     _ANSELD	set	3934
    87  0000                     _PORTB	set	3969
    88  0000                     _PORTCbits	set	3970
    89  0000                     _PORTD	set	3971
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISD	set	3989
    93  00080B                     STR_1:
    94  00080B  56                 	db	86	;'V'
    95  00080C  61                 	db	97	;'a'
    96  00080D  6C                 	db	108	;'l'
    97  00080E  65                 	db	101	;'e'
    98  00080F  72                 	db	114	;'r'
    99  000810  69                 	db	105	;'i'
   100  000811  61                 	db	97	;'a'
   101  000812  20                 	db	32
   102  000813  62                 	db	98	;'b'
   103  000814  62                 	db	98	;'b'
   104  000815  00                 	db	0
   105  000816                     STR_2:
   106  000816  3A                 	db	58	;':'
   107  000817  25                 	db	37
   108  000818  64                 	db	100	;'d'
   109  000819  00                 	db	0
   110                           
   111                           ; #config settings
   112  00081A  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  000CA4                     __pcinit:
   116                           	opt stack 0
   117  000CA4                     start_initialization:
   118                           	opt stack 0
   119  000CA4                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Initialize objects allocated to COMRAM (2 bytes)
   123                           ; load TBLPTR registers with __pidataCOMRAM
   124  000CA4  0E50               	movlw	low __pidataCOMRAM
   125  000CA6  6EF6               	movwf	tblptrl,c
   126  000CA8  0E0D               	movlw	high __pidataCOMRAM
   127  000CAA  6EF7               	movwf	tblptrh,c
   128  000CAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   129  000CAE  6EF8               	movwf	tblptru,c
   130  000CB0  0009               	tblrd		*+	;fetch initializer
   131  000CB2  CFF5 F026          	movff	tablat,__pdataCOMRAM
   132  000CB6  0009               	tblrd		*+	;fetch initializer
   133  000CB8  CFF5 F027          	movff	tablat,__pdataCOMRAM+1
   134                           
   135                           ; Clear objects allocated to COMRAM (9 bytes)
   136  000CBC  EE00  F01D         	lfsr	0,__pbssCOMRAM
   137  000CC0  0E09               	movlw	9
   138  000CC2                     clear_0:
   139  000CC2  6AEE               	clrf	postinc0,c
   140  000CC4  06E8               	decf	wreg,f,c
   141  000CC6  E1FD               	bnz	clear_0
   142  000CC8                     end_of_initialization:
   143                           	opt stack 0
   144  000CC8                     __end_of__initialization:
   145                           	opt stack 0
   146  000CC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   147  000CCA  6EF8               	movwf	tblptru,c
   148  000CCC  0100               	movlb	0
   149  000CCE  EF0F  F005         	goto	_main	;jump to C main() function
   150                           tblptru	equ	0xFF8
   151                           tblptrh	equ	0xFF7
   152                           tblptrl	equ	0xFF6
   153                           tablat	equ	0xFF5
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           
   157                           	psect	bssCOMRAM
   158  00001D                     __pbssCOMRAM:
   159                           	opt stack 0
   160  00001D                     _lcd:
   161                           	opt stack 0
   162  00001D                     	ds	1
   163  00001E                     _value:
   164                           	opt stack 0
   165  00001E                     	ds	8
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           wreg	equ	0xFE8
   172                           
   173                           	psect	dataCOMRAM
   174  000026                     __pdataCOMRAM:
   175                           	opt stack 0
   176  000026                     _numero:
   177                           	opt stack 0
   178  000026                     	ds	2
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           
   186                           	psect	cstackCOMRAM
   187  000001                     __pcstackCOMRAM:
   188                           	opt stack 0
   189  000001                     ??_lcd_lat:
   190  000001                     ?___lwdiv:
   191                           	opt stack 0
   192  000001                     manda@dato:
   193                           	opt stack 0
   194  000001                     lcd_hexa@a:
   195                           	opt stack 0
   196  000001                     ___lwdiv@dividend:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x0
   200  000001                     	ds	1
   201  000002                     ??_lcd_cmd:
   202  000002                     ??_lcd_dwr:
   203  000002                     lcd_cmd_hf@x:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x1
   207  000002                     	ds	1
   208  000003                     lcd_cmd@x:
   209                           	opt stack 0
   210  000003                     lcd_dwr@x:
   211                           	opt stack 0
   212  000003                     ___lwdiv@divisor:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2
   216  000003                     	ds	1
   217  000004                     ??_lcd_init:
   218  000004                     lcd_putc@c:
   219                           	opt stack 0
   220  000004                     lcd_gotoxy@y:
   221                           	opt stack 0
   222  000004                     lcd_setcursor_vb@blink:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x3
   226  000004                     	ds	1
   227  000005                     ??_lcd_gotoxy:
   228  000005                     lcd_setcursor_vb@visible:
   229                           	opt stack 0
   230  000005                     lcd_msg@c:
   231                           	opt stack 0
   232  000005                     ___lwdiv@quotient:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x4
   236  000005                     	ds	1
   237  000006                     lcd_gotoxy@x:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x5
   241  000006                     	ds	1
   242  000007                     lcd_gotoxy@ADDRESS:
   243                           	opt stack 0
   244  000007                     ___lwdiv@counter:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x6
   248  000007                     	ds	1
   249  000008                     ?___lwmod:
   250                           	opt stack 0
   251  000008                     ___lwmod@dividend:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x7
   255  000008                     	ds	2
   256  00000A                     ___lwmod@divisor:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x9
   260  00000A                     	ds	2
   261  00000C                     ___lwmod@counter:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0xB
   265  00000C                     	ds	1
   266  00000D                     ?_sprintf:
   267                           	opt stack 0
   268  00000D                     sprintf@sp:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0xC
   272  00000D                     	ds	2
   273  00000F                     sprintf@f:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xE
   277  00000F                     	ds	4
   278  000013                     ??_sprintf:
   279                           
   280                           ; 1 bytes @ 0x12
   281  000013                     	ds	1
   282  000014                     sprintf@ap:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x13
   286  000014                     	ds	2
   287  000016                     sprintf@flag:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x15
   291  000016                     	ds	1
   292  000017                     sprintf@prec:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x16
   296  000017                     	ds	1
   297  000018                     sprintf@val:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x17
   301  000018                     	ds	2
   302  00001A                     sprintf@c:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x19
   306  00001A                     	ds	1
   307  00001B                     ??_main:
   308                           
   309                           ; 1 bytes @ 0x1A
   310  00001B                     	ds	2
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 31 in file "lcdt_1.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   337 ;;      Params:         0       0       0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0       0       0
   339 ;;      Temps:          2       0       0       0       0       0       0       0       0
   340 ;;      Totals:         2       0       0       0       0       0       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels required when called:    4
   343 ;; This function calls:
   344 ;;		_lcd_cmd
   345 ;;		_lcd_gotoxy
   346 ;;		_lcd_hexa
   347 ;;		_lcd_init
   348 ;;		_lcd_msg
   349 ;;		_lcd_putc
   350 ;;		_lcd_setcursor_vb
   351 ;;		_sprintf
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358  000A1E                     __ptext0:
   359                           	opt stack 0
   360  000A1E                     _main:
   361                           	opt stack 27
   362                           
   363                           ;lcdt_1.c: 33: TRISD = 0x00;
   364                           
   365                           ;incstack = 0
   366  000A1E  0E00               	movlw	0
   367  000A20  6E95               	movwf	3989,c	;volatile
   368                           
   369                           ;lcdt_1.c: 34: TRISB = 0x00;
   370  000A22  0E00               	movlw	0
   371  000A24  6E93               	movwf	3987,c	;volatile
   372                           
   373                           ;lcdt_1.c: 35: ANSELD = 0;
   374  000A26  0E00               	movlw	0
   375  000A28  010F               	movlb	15	; () banked
   376  000A2A  6F5E               	movwf	94,b	;volatile
   377                           
   378                           ;lcdt_1.c: 36: ANSELC = 0;
   379  000A2C  0E00               	movlw	0
   380  000A2E  6F5D               	movwf	93,b	;volatile
   381                           
   382                           ;lcdt_1.c: 37: ANSELB = 0;
   383  000A30  0E00               	movlw	0
   384  000A32  6F5C               	movwf	92,b	;volatile
   385                           
   386                           ; BSR set to: 15
   387                           ;lcdt_1.c: 38: TRISCbits.TRISC2 = 0;
   388  000A34  9494               	bcf	3988,2,c	;volatile
   389                           
   390                           ; BSR set to: 15
   391                           ;lcdt_1.c: 39: (*(&(*(&PORTD + 0x09))) &=~ (1<<(6)));
   392  000A36  9C8C               	bcf	3980,6,c	;volatile
   393                           
   394                           ; BSR set to: 15
   395                           ;lcdt_1.c: 40: PORTCbits.RC2 = 0;
   396  000A38  9482               	bcf	3970,2,c	;volatile
   397                           
   398                           ; BSR set to: 15
   399                           ;lcdt_1.c: 41: lcd_init();
   400  000A3A  ECB2  F004         	call	_lcd_init	;wreg free
   401                           
   402                           ;lcdt_1.c: 42: lcd_cmd(0x01);
   403  000A3E  0E01               	movlw	1
   404  000A40  ECB2  F005         	call	_lcd_cmd
   405                           
   406                           ;lcdt_1.c: 43: lcd_gotoxy(1,1);
   407  000A44  0E01               	movlw	1
   408  000A46  6E04               	movwf	lcd_gotoxy@y,c
   409  000A48  0E01               	movlw	1
   410  000A4A  EC38  F006         	call	_lcd_gotoxy
   411                           
   412                           ;lcdt_1.c: 45: lcd_msg("Valeria bb");
   413  000A4E  0E0B               	movlw	low STR_1
   414  000A50  6E05               	movwf	lcd_msg@c,c
   415  000A52  0E08               	movlw	high STR_1
   416  000A54  6E06               	movwf	lcd_msg@c+1,c
   417  000A56  EC89  F005         	call	_lcd_msg	;wreg free
   418                           
   419                           ;lcdt_1.c: 46: lcd_gotoxy(9,2);
   420  000A5A  0E02               	movlw	2
   421  000A5C  6E04               	movwf	lcd_gotoxy@y,c
   422  000A5E  0E09               	movlw	9
   423  000A60  EC38  F006         	call	_lcd_gotoxy
   424                           
   425                           ;lcdt_1.c: 47: lcd_setcursor_vb(1,1);
   426  000A64  0E01               	movlw	1
   427  000A66  6E04               	movwf	lcd_setcursor_vb@blink,c
   428  000A68  0E01               	movlw	1
   429  000A6A  ECA0  F006         	call	_lcd_setcursor_vb
   430                           
   431                           ;lcdt_1.c: 48: lcd_putc('a');
   432  000A6E  0E61               	movlw	97
   433  000A70  EC1B  F006         	call	_lcd_putc
   434                           
   435                           ;lcdt_1.c: 49: lcd_putc(lcd_hexa(6));
   436  000A74  0E06               	movlw	6
   437  000A76  EC8C  F006         	call	_lcd_hexa
   438  000A7A  EC1B  F006         	call	_lcd_putc
   439                           
   440                           ;lcdt_1.c: 50: sprintf(value,":%d",numero);
   441  000A7E  0E1E               	movlw	low _value
   442  000A80  6E0D               	movwf	sprintf@sp,c
   443  000A82  0E00               	movlw	high _value
   444  000A84  6E0E               	movwf	sprintf@sp+1,c
   445  000A86  0E16               	movlw	low STR_2
   446  000A88  6E0F               	movwf	sprintf@f,c
   447  000A8A  0E08               	movlw	high STR_2
   448  000A8C  6E10               	movwf	sprintf@f+1,c
   449  000A8E  C026  F011         	movff	_numero,?_sprintf+4
   450  000A92  C027  F012         	movff	_numero+1,?_sprintf+5
   451  000A96  EC0E  F004         	call	_sprintf	;wreg free
   452                           
   453                           ;lcdt_1.c: 51: lcd_msg(value);
   454  000A9A  0E1E               	movlw	low _value
   455  000A9C  6E05               	movwf	lcd_msg@c,c
   456  000A9E  0E00               	movlw	high _value
   457  000AA0  6E06               	movwf	lcd_msg@c+1,c
   458  000AA2  EC89  F005         	call	_lcd_msg	;wreg free
   459  000AA6                     
   460                           ;lcdt_1.c: 53: PORTCbits.RC2 ^=1;
   461  000AA6  7482               	btg	3970,2,c	;volatile
   462                           
   463                           ;lcdt_1.c: 54: _delay((unsigned long)((500)*(4000000/4000.0)));
   464  000AA8  0E03               	movlw	3
   465  000AAA  6E1C               	movwf	(??_main+1)& (0+255),c
   466  000AAC  0E8A               	movlw	138
   467  000AAE  6E1B               	movwf	??_main& (0+255),c
   468  000AB0  0E56               	movlw	86
   469  000AB2                     u407:
   470  000AB2  2EE8               	decfsz	wreg,f,c
   471  000AB4  D7FE               	bra	u407
   472  000AB6  2E1B               	decfsz	??_main& (0+255),f,c
   473  000AB8  D7FC               	bra	u407
   474  000ABA  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   475  000ABC  D7FA               	bra	u407
   476  000ABE  D7F3               	goto	l43
   477  000AC0                     __end_of_main:
   478                           	opt stack 0
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           
   486 ;; *************** function _sprintf *****************
   487 ;; Defined at:
   488 ;;		line 492 in file "/opt/microchip/xc8/v1.44/sources/common/doprnt.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  sp              2   12[COMRAM] PTR unsigned char 
   491 ;;		 -> value(8), 
   492 ;;  f               2   14[COMRAM] PTR const unsigned char 
   493 ;;		 -> STR_2(4), 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  tmpval          4    0        struct .
   496 ;;  cp              3    0        PTR const unsigned char 
   497 ;;  val             2   23[COMRAM] unsigned int 
   498 ;;  ap              2   19[COMRAM] PTR void [1]
   499 ;;		 -> ?_sprintf(2), 
   500 ;;  len             2    0        unsigned int 
   501 ;;  c               1   25[COMRAM] char 
   502 ;;  prec            1   22[COMRAM] char 
   503 ;;  flag            1   21[COMRAM] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  2   12[COMRAM] int 
   506 ;; Registers used:
   507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   513 ;;      Params:         6       0       0       0       0       0       0       0       0
   514 ;;      Locals:         7       0       0       0       0       0       0       0       0
   515 ;;      Temps:          1       0       0       0       0       0       0       0       0
   516 ;;      Totals:        14       0       0       0       0       0       0       0       0
   517 ;;Total ram usage:       14 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		___lwdiv
   522 ;;		___lwmod
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text1
   529  00081C                     __ptext1:
   530                           	opt stack 0
   531  00081C                     _sprintf:
   532                           	opt stack 29
   533                           
   534                           ;doprnt.c: 494: va_list ap;
   535                           ;doprnt.c: 499: signed char c;
   536                           ;doprnt.c: 506: signed char prec;
   537                           ;doprnt.c: 508: unsigned char flag;
   538                           ;doprnt.c: 523: union {
   539                           ;doprnt.c: 524: unsigned long vd;
   540                           ;doprnt.c: 525: double integ;
   541                           ;doprnt.c: 526: } tmpval;
   542                           ;doprnt.c: 528: unsigned int val;
   543                           ;doprnt.c: 529: unsigned len;
   544                           ;doprnt.c: 530: const char * cp;
   545                           ;doprnt.c: 533: *ap = __va_start();
   546                           
   547                           ;incstack = 0
   548  00081C  0E11               	movlw	low (?_sprintf+4)
   549  00081E  6E14               	movwf	sprintf@ap,c
   550  000820  0E00               	movlw	high (?_sprintf+4)
   551  000822  6E15               	movwf	sprintf@ap+1,c
   552                           
   553                           ;doprnt.c: 536: while(c = *f++) {
   554  000824  D08C               	goto	u380
   555  000826                     
   556                           ;doprnt.c: 538: if(c != '%')
   557  000826  0E25               	movlw	37
   558  000828  181A               	xorwf	sprintf@c,w,c
   559  00082A  B4D8               	btfsc	status,2,c
   560  00082C  D009               	goto	l126
   561                           
   562                           ;doprnt.c: 540: {
   563                           ;doprnt.c: 541: ((*sp++ = (c)));
   564  00082E  C00D  FFD9         	movff	sprintf@sp,fsr2l
   565  000832  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   566  000836  C01A  FFDF         	movff	sprintf@c,indf2
   567  00083A  4A0D               	infsnz	sprintf@sp,f,c
   568  00083C  2A0E               	incf	sprintf@sp+1,f,c
   569                           
   570                           ;doprnt.c: 542: continue;
   571  00083E  D07F               	goto	u380
   572  000840                     l126:
   573                           
   574                           ;doprnt.c: 543: }
   575                           ;doprnt.c: 548: flag = 0;
   576  000840  0E00               	movlw	0
   577  000842  6E16               	movwf	sprintf@flag,c
   578                           
   579                           ;doprnt.c: 822: }
   580                           
   581                           ;doprnt.c: 813: continue;
   582                           
   583                           ;doprnt.c: 802: default:
   584                           
   585                           ;doprnt.c: 698: case 'i':
   586                           ;doprnt.c: 699: break;
   587                           
   588                           ;doprnt.c: 697: case 'd':
   589                           
   590                           ;doprnt.c: 638: goto alldone;
   591                           
   592                           ;doprnt.c: 637: case 0:
   593                           
   594                           ;doprnt.c: 635: switch(c = *f++) {
   595  000844  C00F  FFF6         	movff	sprintf@f,tblptrl
   596  000848  C010  FFF7         	movff	sprintf@f+1,tblptrh
   597  00084C  4A0F               	infsnz	sprintf@f,f,c
   598  00084E  2A10               	incf	sprintf@f+1,f,c
   599  000850                     	if	0	;tblptru may be non-zero
   600  000850                     	endif
   601  000850                     	if	0	;tblptru may be non-zero
   602  000850                     	endif
   603  000850  0008               	tblrd		*
   604  000852  CFF5 F01A          	movff	tablat,sprintf@c
   605  000856  501A               	movf	sprintf@c,w,c
   606                           
   607                           ; Switch size 1, requested type "space"
   608                           ; Number of cases is 3, Range of values is 0 to 105
   609                           ; switch strategies available:
   610                           ; Name         Instructions Cycles
   611                           ; simple_byte           10     6 (average)
   612                           ;	Chosen strategy is simple_byte
   613  000858  0A00               	xorlw	0	; case 0
   614  00085A  B4D8               	btfsc	status,2,c
   615  00085C  D07C               	goto	u390
   616  00085E  0A64               	xorlw	100	; case 100
   617  000860  B4D8               	btfsc	status,2,c
   618  000862  D003               	goto	l132
   619  000864  0A0D               	xorlw	13	; case 105
   620  000866  A4D8               	btfss	status,2,c
   621  000868  D06A               	goto	u380
   622  00086A                     l132:
   623                           
   624                           ;doprnt.c: 1253: {
   625                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   626  00086A  C014  FFD9         	movff	sprintf@ap,fsr2l
   627  00086E  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   628  000872  CFDE F018          	movff	postinc2,sprintf@val
   629  000876  CFDD F019          	movff	postdec2,sprintf@val+1
   630  00087A  0E02               	movlw	2
   631  00087C  2614               	addwf	sprintf@ap,f,c
   632  00087E  0E00               	movlw	0
   633  000880  2215               	addwfc	sprintf@ap+1,f,c
   634                           
   635                           ;doprnt.c: 1261: if((int)val < 0) {
   636  000882  AE19               	btfss	sprintf@val+1,7,c
   637  000884  D006               	goto	l134
   638                           
   639                           ;doprnt.c: 1262: flag |= 0x03;
   640  000886  0E03               	movlw	3
   641  000888  1216               	iorwf	sprintf@flag,f,c
   642                           
   643                           ;doprnt.c: 1263: val = -val;
   644  00088A  6C18               	negf	sprintf@val,c
   645  00088C  1E19               	comf	sprintf@val+1,f,c
   646  00088E  B0D8               	btfsc	status,0,c
   647  000890  2A19               	incf	sprintf@val+1,f,c
   648  000892                     l134:
   649                           
   650                           ;doprnt.c: 1264: }
   651                           ;doprnt.c: 1266: }
   652                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   653  000892  0E01               	movlw	1
   654  000894  6E1A               	movwf	sprintf@c,c
   655  000896                     l1149:
   656  000896  0E05               	movlw	5
   657  000898  181A               	xorwf	sprintf@c,w,c
   658  00089A  B4D8               	btfsc	status,2,c
   659  00089C  D012               	goto	u360
   660                           
   661                           ;doprnt.c: 1306: if(val < dpowers[c])
   662  00089E  501A               	movf	sprintf@c,w,c
   663  0008A0  0D02               	mullw	2
   664  0008A2  0E01               	movlw	low _dpowers
   665  0008A4  24F3               	addwf	prodl,w,c
   666  0008A6  6EF6               	movwf	tblptrl,c
   667  0008A8  0E08               	movlw	high _dpowers
   668  0008AA  20F4               	addwfc	prodh,w,c
   669  0008AC  6EF7               	movwf	tblptrh,c
   670  0008AE                     	if	0	;There are less than 3 active tblptr bytes
   671  0008AE                     	endif
   672  0008AE  0009               	tblrd		*+
   673  0008B0  50F5               	movf	tablat,w,c
   674  0008B2  5C18               	subwf	sprintf@val,w,c
   675  0008B4  0009               	tblrd		*+
   676  0008B6  50F5               	movf	tablat,w,c
   677  0008B8  5819               	subwfb	sprintf@val+1,w,c
   678  0008BA  A0D8               	btfss	status,0,c
   679  0008BC  D002               	goto	u360
   680                           
   681                           ;doprnt.c: 1307: break;
   682  0008BE  2A1A               	incf	sprintf@c,f,c
   683  0008C0  D7EA               	goto	l1149
   684  0008C2                     u360:
   685                           
   686                           ;doprnt.c: 1422: {
   687                           ;doprnt.c: 1438: if(flag & 0x03)
   688  0008C2  C016  F013         	movff	sprintf@flag,??_sprintf
   689  0008C6  0E03               	movlw	3
   690  0008C8  1613               	andwf	??_sprintf,f,c
   691  0008CA  B4D8               	btfsc	status,2,c
   692  0008CC  D008               	goto	l138
   693                           
   694                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   695  0008CE  C00D  FFD9         	movff	sprintf@sp,fsr2l
   696  0008D2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   697  0008D6  0E2D               	movlw	45
   698  0008D8  6EDF               	movwf	indf2,c
   699  0008DA  4A0D               	infsnz	sprintf@sp,f,c
   700  0008DC  2A0E               	incf	sprintf@sp+1,f,c
   701  0008DE                     l138:
   702                           
   703                           ;doprnt.c: 1469: }
   704                           ;doprnt.c: 1472: prec = c;
   705  0008DE  C01A  F017         	movff	sprintf@c,sprintf@prec
   706                           
   707                           ;doprnt.c: 1474: while(prec--) {
   708  0008E2  D029               	goto	l139
   709  0008E4                     
   710                           ;doprnt.c: 1478: {
   711                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   712  0008E4  5017               	movf	sprintf@prec,w,c
   713  0008E6  0D02               	mullw	2
   714  0008E8  0E01               	movlw	low _dpowers
   715  0008EA  24F3               	addwf	prodl,w,c
   716  0008EC  6EF6               	movwf	tblptrl,c
   717  0008EE  0E08               	movlw	high _dpowers
   718  0008F0  20F4               	addwfc	prodh,w,c
   719  0008F2  6EF7               	movwf	tblptrh,c
   720  0008F4                     	if	0	;There are less than 3 active tblptr bytes
   721  0008F4                     	endif
   722  0008F4  0009               	tblrd		*+
   723  0008F6  CFF5 F003          	movff	tablat,___lwdiv@divisor
   724  0008FA  000A               	tblrd		*-
   725  0008FC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   726  000900  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   727  000904  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   728  000908  EC60  F005         	call	___lwdiv	;wreg free
   729  00090C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   730  000910  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   731  000914  0E00               	movlw	0
   732  000916  6E0B               	movwf	___lwmod@divisor+1,c
   733  000918  0E0A               	movlw	10
   734  00091A  6E0A               	movwf	___lwmod@divisor,c
   735  00091C  ECFA  F005         	call	___lwmod	;wreg free
   736  000920  5008               	movf	?___lwmod,w,c
   737  000922  0F30               	addlw	48
   738  000924  6E1A               	movwf	sprintf@c,c
   739                           
   740                           ;doprnt.c: 1523: }
   741                           ;doprnt.c: 1524: ((*sp++ = (c)));
   742  000926  C00D  FFD9         	movff	sprintf@sp,fsr2l
   743  00092A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   744  00092E  C01A  FFDF         	movff	sprintf@c,indf2
   745  000932  4A0D               	infsnz	sprintf@sp,f,c
   746  000934  2A0E               	incf	sprintf@sp+1,f,c
   747  000936                     l139:
   748  000936  0617               	decf	sprintf@prec,f,c
   749  000938  2817               	incf	sprintf@prec,w,c
   750  00093A  A4D8               	btfss	status,2,c
   751  00093C  D7D3               	goto	l140
   752  00093E                     u380:
   753  00093E  C00F  FFF6         	movff	sprintf@f,tblptrl
   754  000942  C010  FFF7         	movff	sprintf@f+1,tblptrh
   755  000946  4A0F               	infsnz	sprintf@f,f,c
   756  000948  2A10               	incf	sprintf@f+1,f,c
   757  00094A                     	if	0	;tblptru may be non-zero
   758  00094A                     	endif
   759  00094A                     	if	0	;tblptru may be non-zero
   760  00094A                     	endif
   761  00094A  0008               	tblrd		*
   762  00094C  CFF5 F01A          	movff	tablat,sprintf@c
   763  000950  501A               	movf	sprintf@c,w,c
   764  000952  A4D8               	btfss	status,2,c
   765  000954  D768               	goto	l125
   766  000956                     u390:
   767                           
   768                           ;doprnt.c: 1538: *sp = 0;
   769                           
   770                           ;doprnt.c: 1525: }
   771                           ;doprnt.c: 1533: }
   772                           ;doprnt.c: 1535: alldone:
   773  000956  C00D  FFD9         	movff	sprintf@sp,fsr2l
   774  00095A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   775  00095E  0E00               	movlw	0
   776  000960  6EDF               	movwf	indf2,c
   777  000962  0012               	return	
   778  000964                     __end_of_sprintf:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           indf2	equ	0xFDF
   789                           postinc2	equ	0xFDE
   790                           postdec2	equ	0xFDD
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function ___lwmod *****************
   796 ;; Defined at:
   797 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/lwmod.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  dividend        2    7[COMRAM] unsigned int 
   800 ;;  divisor         2    9[COMRAM] unsigned int 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  counter         1   11[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    7[COMRAM] unsigned int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         4       0       0       0       0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0
   815 ;;      Totals:         5       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        5 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_sprintf
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text2
   826  000BF4                     __ptext2:
   827                           	opt stack 0
   828  000BF4                     ___lwmod:
   829                           	opt stack 29
   830                           
   831                           ;incstack = 0
   832  000BF4  500A               	movf	___lwmod@divisor,w,c
   833  000BF6  100B               	iorwf	___lwmod@divisor+1,w,c
   834  000BF8  B4D8               	btfsc	status,2,c
   835  000BFA  D018               	goto	l562
   836  000BFC  0E01               	movlw	1
   837  000BFE  6E0C               	movwf	___lwmod@counter,c
   838  000C00  D004               	goto	l557
   839  000C02  90D8               	bcf	status,0,c
   840  000C04  360A               	rlcf	___lwmod@divisor,f,c
   841  000C06  360B               	rlcf	___lwmod@divisor+1,f,c
   842  000C08  2A0C               	incf	___lwmod@counter,f,c
   843  000C0A                     l557:
   844  000C0A  AE0B               	btfss	___lwmod@divisor+1,7,c
   845  000C0C  D7FA               	goto	l558
   846  000C0E                     u270:
   847  000C0E  500A               	movf	___lwmod@divisor,w,c
   848  000C10  5C08               	subwf	___lwmod@dividend,w,c
   849  000C12  500B               	movf	___lwmod@divisor+1,w,c
   850  000C14  5809               	subwfb	___lwmod@dividend+1,w,c
   851  000C16  A0D8               	btfss	status,0,c
   852  000C18  D004               	goto	l561
   853  000C1A  500A               	movf	___lwmod@divisor,w,c
   854  000C1C  5E08               	subwf	___lwmod@dividend,f,c
   855  000C1E  500B               	movf	___lwmod@divisor+1,w,c
   856  000C20  5A09               	subwfb	___lwmod@dividend+1,f,c
   857  000C22                     l561:
   858  000C22  90D8               	bcf	status,0,c
   859  000C24  320B               	rrcf	___lwmod@divisor+1,f,c
   860  000C26  320A               	rrcf	___lwmod@divisor,f,c
   861  000C28  2E0C               	decfsz	___lwmod@counter,f,c
   862  000C2A  D7F1               	goto	u270
   863  000C2C                     l562:
   864  000C2C  C008  F008         	movff	___lwmod@dividend,?___lwmod
   865  000C30  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   866  000C34  0012               	return		;funcret
   867  000C36                     __end_of___lwmod:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           indf2	equ	0xFDF
   878                           postinc2	equ	0xFDE
   879                           postdec2	equ	0xFDD
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function ___lwdiv *****************
   885 ;; Defined at:
   886 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/lwdiv.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  dividend        2    0[COMRAM] unsigned int 
   889 ;;  divisor         2    2[COMRAM] unsigned int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  quotient        2    4[COMRAM] unsigned int 
   892 ;;  counter         1    6[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    0[COMRAM] unsigned int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         4       0       0       0       0       0       0       0       0
   903 ;;      Locals:         3       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0
   905 ;;      Totals:         7       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:        7 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_sprintf
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  000AC0                     __ptext3:
   917                           	opt stack 0
   918  000AC0                     ___lwdiv:
   919                           	opt stack 29
   920                           
   921                           ;incstack = 0
   922  000AC0  0E00               	movlw	0
   923  000AC2  6E06               	movwf	___lwdiv@quotient+1,c
   924  000AC4  0E00               	movlw	0
   925  000AC6  6E05               	movwf	___lwdiv@quotient,c
   926  000AC8  5003               	movf	___lwdiv@divisor,w,c
   927  000ACA  1004               	iorwf	___lwdiv@divisor+1,w,c
   928  000ACC  B4D8               	btfsc	status,2,c
   929  000ACE  D01C               	goto	l552
   930  000AD0  0E01               	movlw	1
   931  000AD2  6E07               	movwf	___lwdiv@counter,c
   932  000AD4  D004               	goto	l547
   933  000AD6  90D8               	bcf	status,0,c
   934  000AD8  3603               	rlcf	___lwdiv@divisor,f,c
   935  000ADA  3604               	rlcf	___lwdiv@divisor+1,f,c
   936  000ADC  2A07               	incf	___lwdiv@counter,f,c
   937  000ADE                     l547:
   938  000ADE  AE04               	btfss	___lwdiv@divisor+1,7,c
   939  000AE0  D7FA               	goto	l548
   940  000AE2                     u240:
   941  000AE2  90D8               	bcf	status,0,c
   942  000AE4  3605               	rlcf	___lwdiv@quotient,f,c
   943  000AE6  3606               	rlcf	___lwdiv@quotient+1,f,c
   944  000AE8  5003               	movf	___lwdiv@divisor,w,c
   945  000AEA  5C01               	subwf	___lwdiv@dividend,w,c
   946  000AEC  5004               	movf	___lwdiv@divisor+1,w,c
   947  000AEE  5802               	subwfb	___lwdiv@dividend+1,w,c
   948  000AF0  A0D8               	btfss	status,0,c
   949  000AF2  D005               	goto	l551
   950  000AF4  5003               	movf	___lwdiv@divisor,w,c
   951  000AF6  5E01               	subwf	___lwdiv@dividend,f,c
   952  000AF8  5004               	movf	___lwdiv@divisor+1,w,c
   953  000AFA  5A02               	subwfb	___lwdiv@dividend+1,f,c
   954  000AFC  8005               	bsf	___lwdiv@quotient,0,c
   955  000AFE                     l551:
   956  000AFE  90D8               	bcf	status,0,c
   957  000B00  3204               	rrcf	___lwdiv@divisor+1,f,c
   958  000B02  3203               	rrcf	___lwdiv@divisor,f,c
   959  000B04  2E07               	decfsz	___lwdiv@counter,f,c
   960  000B06  D7ED               	goto	u240
   961  000B08                     l552:
   962  000B08  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   963  000B0C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   964  000B10  0012               	return		;funcret
   965  000B12                     __end_of___lwdiv:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           prodh	equ	0xFF4
   972                           prodl	equ	0xFF3
   973                           postinc0	equ	0xFEE
   974                           wreg	equ	0xFE8
   975                           indf2	equ	0xFDF
   976                           postinc2	equ	0xFDE
   977                           postdec2	equ	0xFDD
   978                           fsr2h	equ	0xFDA
   979                           fsr2l	equ	0xFD9
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _lcd_setcursor_vb *****************
   983 ;; Defined at:
   984 ;;		line 183 in file "../MyLibs/lcd4a.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  visible         1    wreg     unsigned char 
   987 ;;  blink           1    3[COMRAM] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  visible         1    4[COMRAM] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         1       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    2
  1006 ;; This function calls:
  1007 ;;		_lcd_cmd
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text4
  1014  000D40                     __ptext4:
  1015                           	opt stack 0
  1016  000D40                     _lcd_setcursor_vb:
  1017                           	opt stack 28
  1018                           
  1019                           ;incstack = 0
  1020                           ;lcd_setcursor_vb@visible stored from wreg
  1021  000D40  6E05               	movwf	lcd_setcursor_vb@visible,c
  1022                           
  1023                           ;lcd4a.c: 185: lcd_cmd((unsigned char)(0x0C | (visible << (1U)) | blink));
  1024  000D42  5005               	movf	lcd_setcursor_vb@visible,w,c
  1025  000D44  2405               	addwf	lcd_setcursor_vb@visible,w,c
  1026  000D46  1004               	iorwf	lcd_setcursor_vb@blink,w,c
  1027  000D48  090C               	iorlw	12
  1028  000D4A  ECB2  F005         	call	_lcd_cmd
  1029  000D4E  0012               	return		;funcret
  1030  000D50                     __end_of_lcd_setcursor_vb:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           prodh	equ	0xFF4
  1037                           prodl	equ	0xFF3
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           indf2	equ	0xFDF
  1041                           postinc2	equ	0xFDE
  1042                           postdec2	equ	0xFDD
  1043                           fsr2h	equ	0xFDA
  1044                           fsr2l	equ	0xFD9
  1045                           status	equ	0xFD8
  1046                           
  1047 ;; *************** function _lcd_msg *****************
  1048 ;; Defined at:
  1049 ;;		line 93 in file "../MyLibs/lcd4a.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  c               2    4[COMRAM] PTR unsigned char 
  1052 ;;		 -> value(8), STR_1(11), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         2       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        2 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    3
  1071 ;; This function calls:
  1072 ;;		_lcd_putc
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text5
  1079  000B12                     __ptext5:
  1080                           	opt stack 0
  1081  000B12                     _lcd_msg:
  1082                           	opt stack 27
  1083                           
  1084                           ;lcd4a.c: 95: while(*c != 0)
  1085                           
  1086                           ;incstack = 0
  1087  000B12  D014               	goto	l82
  1088  000B14                     
  1089                           ;lcd4a.c: 96: {
  1090                           ;lcd4a.c: 97: lcd_putc(*c++);
  1091  000B14  C005  FFF6         	movff	lcd_msg@c,tblptrl
  1092  000B18  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
  1093  000B1C  6AF8               	clrf	tblptru,c
  1094  000B1E  0E07               	movlw	(high __ramtop+-1)
  1095  000B20  64F7               	cpfsgt	tblptrh,c
  1096  000B22  D003               	bra	u297
  1097  000B24  0008               	tblrd		*
  1098  000B26  50F5               	movf	tablat,w,c
  1099  000B28  D005               	bra	u290
  1100  000B2A                     u297:
  1101  000B2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1102  000B2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1103  000B32  50EF               	movf	indf0,w,c
  1104  000B34                     u290:
  1105  000B34  EC1B  F006         	call	_lcd_putc
  1106  000B38  4A05               	infsnz	lcd_msg@c,f,c
  1107  000B3A  2A06               	incf	lcd_msg@c+1,f,c
  1108  000B3C                     l82:
  1109  000B3C  C005  FFF6         	movff	lcd_msg@c,tblptrl
  1110  000B40  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
  1111  000B44  6AF8               	clrf	tblptru,c
  1112  000B46  0E07               	movlw	(high __ramtop+-1)
  1113  000B48  64F7               	cpfsgt	tblptrh,c
  1114  000B4A  D003               	bra	u307
  1115  000B4C  0008               	tblrd		*
  1116  000B4E  50F5               	movf	tablat,w,c
  1117  000B50  D005               	bra	u300
  1118  000B52                     u307:
  1119  000B52  CFF6 FFE9          	movff	tblptrl,fsr0l
  1120  000B56  CFF7 FFEA          	movff	tblptrh,fsr0h
  1121  000B5A  50EF               	movf	indf0,w,c
  1122  000B5C                     u300:
  1123  000B5C  0900               	iorlw	0
  1124  000B5E  B4D8               	btfsc	status,2,c
  1125  000B60  0012               	return	
  1126  000B62  D7D8               	goto	l83
  1127  000B64                     __end_of_lcd_msg:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           prodh	equ	0xFF4
  1134                           prodl	equ	0xFF3
  1135                           indf0	equ	0xFEF
  1136                           postinc0	equ	0xFEE
  1137                           fsr0h	equ	0xFEA
  1138                           fsr0l	equ	0xFE9
  1139                           wreg	equ	0xFE8
  1140                           indf2	equ	0xFDF
  1141                           postinc2	equ	0xFDE
  1142                           postdec2	equ	0xFDD
  1143                           fsr2h	equ	0xFDA
  1144                           fsr2l	equ	0xFD9
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _lcd_putc *****************
  1148 ;; Defined at:
  1149 ;;		line 58 in file "../MyLibs/lcd4a.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  c               1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  c               1    3[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        1 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		_lcd_cmd
  1172 ;;		_lcd_dwr
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;;		_lcd_msg
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text6
  1180  000C36                     __ptext6:
  1181                           	opt stack 0
  1182  000C36                     _lcd_putc:
  1183                           	opt stack 28
  1184                           
  1185                           ;incstack = 0
  1186                           ;lcd_putc@c stored from wreg
  1187  000C36  6E04               	movwf	lcd_putc@c,c
  1188                           
  1189                           ;lcd4a.c: 60: switch(c)
  1190  000C38  D010               	goto	l70
  1191  000C3A                     
  1192                           ;lcd4a.c: 63: lcd_cmd(0x01);
  1193  000C3A  0E01               	movlw	1
  1194  000C3C  ECB2  F005         	call	_lcd_cmd
  1195                           
  1196                           ;lcd4a.c: 64: break;
  1197  000C40  0012               	return	
  1198  000C42                     
  1199                           ;lcd4a.c: 66: lcd_cmd(2);
  1200  000C42  0E02               	movlw	2
  1201  000C44  ECB2  F005         	call	_lcd_cmd
  1202                           
  1203                           ;lcd4a.c: 67: break;
  1204  000C48  0012               	return	
  1205  000C4A                     
  1206                           ;lcd4a.c: 69: lcd_cmd(0x10);
  1207  000C4A  0E10               	movlw	16
  1208  000C4C  ECB2  F005         	call	_lcd_cmd
  1209                           
  1210                           ;lcd4a.c: 70: break;
  1211  000C50  0012               	return	
  1212  000C52                     
  1213                           ;lcd4a.c: 72: lcd_dwr(c);
  1214  000C52  5004               	movf	lcd_putc@c,w,c
  1215  000C54  ECD7  F005         	call	_lcd_dwr
  1216                           
  1217                           ;lcd4a.c: 74: }
  1218                           
  1219                           ;lcd4a.c: 73: break;
  1220  000C58  0012               	return	
  1221  000C5A                     l70:
  1222  000C5A  5004               	movf	lcd_putc@c,w,c
  1223                           
  1224                           ; Switch size 1, requested type "space"
  1225                           ; Number of cases is 3, Range of values is 8 to 12
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; simple_byte           10     6 (average)
  1229                           ;	Chosen strategy is simple_byte
  1230  000C5C  0A08               	xorlw	8	; case 8
  1231  000C5E  B4D8               	btfsc	status,2,c
  1232  000C60  D7F4               	goto	l74
  1233  000C62  0A02               	xorlw	2	; case 10
  1234  000C64  B4D8               	btfsc	status,2,c
  1235  000C66  D7ED               	goto	l73
  1236  000C68  0A06               	xorlw	6	; case 12
  1237  000C6A  B4D8               	btfsc	status,2,c
  1238  000C6C  D7E6               	goto	l71
  1239  000C6E  D7F1               	goto	l75
  1240  000C70                     __end_of_lcd_putc:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           prodh	equ	0xFF4
  1247                           prodl	equ	0xFF3
  1248                           indf0	equ	0xFEF
  1249                           postinc0	equ	0xFEE
  1250                           fsr0h	equ	0xFEA
  1251                           fsr0l	equ	0xFE9
  1252                           wreg	equ	0xFE8
  1253                           indf2	equ	0xFDF
  1254                           postinc2	equ	0xFDE
  1255                           postdec2	equ	0xFDD
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _lcd_dwr *****************
  1261 ;; Defined at:
  1262 ;;		line 78 in file "../MyLibs/lcd4a.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  x               1    wreg     unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  x               1    2[COMRAM] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        2 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		_lcd_lat
  1285 ;;		_manda
  1286 ;; This function is called by:
  1287 ;;		_lcd_putc
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text7
  1292  000BAE                     __ptext7:
  1293                           	opt stack 0
  1294  000BAE                     _lcd_dwr:
  1295                           	opt stack 28
  1296                           
  1297                           ;incstack = 0
  1298                           ;lcd_dwr@x stored from wreg
  1299  000BAE  6E03               	movwf	lcd_dwr@x,c
  1300                           
  1301                           ;lcd4a.c: 80: (*(&(*(&PORTD + 0x09))) |= (1<<(5)));
  1302  000BB0  8A8C               	bsf	3980,5,c	;volatile
  1303                           
  1304                           ;lcd4a.c: 81: lcd &= 0x0F;
  1305  000BB2  0E0F               	movlw	15
  1306  000BB4  161D               	andwf	_lcd,f,c
  1307                           
  1308                           ;lcd4a.c: 82: lcd |= ((x & 0xF0));
  1309  000BB6  5003               	movf	lcd_dwr@x,w,c
  1310  000BB8  0BF0               	andlw	240
  1311  000BBA  121D               	iorwf	_lcd,f,c
  1312                           
  1313                           ;lcd4a.c: 83: manda(lcd);
  1314  000BBC  501D               	movf	_lcd,w,c
  1315  000BBE  EC69  F006         	call	_manda
  1316                           
  1317                           ;lcd4a.c: 84: lcd_lat();
  1318  000BC2  EC96  F006         	call	_lcd_lat	;wreg free
  1319                           
  1320                           ;lcd4a.c: 85: _delay((unsigned long)((3)*(4000000/4000.0)));
  1321  000BC6  0E04               	movlw	4
  1322  000BC8  6E02               	movwf	??_lcd_dwr& (0+255),c
  1323  000BCA  0EE4               	movlw	228
  1324  000BCC                     u417:
  1325  000BCC  2EE8               	decfsz	wreg,f,c
  1326  000BCE  D7FE               	bra	u417
  1327  000BD0  2E02               	decfsz	??_lcd_dwr& (0+255),f,c
  1328  000BD2  D7FC               	bra	u417
  1329  000BD4  D000               	nop2	
  1330                           
  1331                           ;lcd4a.c: 87: lcd &= 0x0F;
  1332  000BD6  0E0F               	movlw	15
  1333  000BD8  161D               	andwf	_lcd,f,c
  1334                           
  1335                           ;lcd4a.c: 88: lcd |= ((x & 0x0F)<<4);
  1336  000BDA  C003  F002         	movff	lcd_dwr@x,??_lcd_dwr
  1337  000BDE  0E0F               	movlw	15
  1338  000BE0  1602               	andwf	??_lcd_dwr,f,c
  1339  000BE2  3802               	swapf	??_lcd_dwr,w,c
  1340  000BE4  0BF0               	andlw	240
  1341  000BE6  121D               	iorwf	_lcd,f,c
  1342                           
  1343                           ;lcd4a.c: 89: manda(lcd);
  1344  000BE8  501D               	movf	_lcd,w,c
  1345  000BEA  EC69  F006         	call	_manda
  1346                           
  1347                           ;lcd4a.c: 90: lcd_lat();
  1348  000BEE  EC96  F006         	call	_lcd_lat	;wreg free
  1349  000BF2  0012               	return		;funcret
  1350  000BF4                     __end_of_lcd_dwr:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           prodh	equ	0xFF4
  1357                           prodl	equ	0xFF3
  1358                           indf0	equ	0xFEF
  1359                           postinc0	equ	0xFEE
  1360                           fsr0h	equ	0xFEA
  1361                           fsr0l	equ	0xFE9
  1362                           wreg	equ	0xFE8
  1363                           indf2	equ	0xFDF
  1364                           postinc2	equ	0xFDE
  1365                           postdec2	equ	0xFDD
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _lcd_init *****************
  1371 ;; Defined at:
  1372 ;;		line 127 in file "../MyLibs/lcd4a.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1389 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    2
  1393 ;; This function calls:
  1394 ;;		_lcd_cmd
  1395 ;;		_lcd_cmd_hf
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text8
  1402  000964                     __ptext8:
  1403                           	opt stack 0
  1404  000964                     _lcd_init:
  1405                           	opt stack 28
  1406                           
  1407                           ;lcd4a.c: 135: (*(&(*(&PORTB + 0x12))) &=~ (1<<(7)));
  1408                           
  1409                           ;incstack = 0
  1410  000964  9E93               	bcf	3987,7,c	;volatile
  1411                           
  1412                           ;lcd4a.c: 136: (*(&(*(&PORTB + 0x12))) &=~ (1<<(6)));
  1413  000966  9C93               	bcf	3987,6,c	;volatile
  1414                           
  1415                           ;lcd4a.c: 137: (*(&(*(&PORTB + 0x12))) &=~ (1<<(5)));
  1416  000968  9A93               	bcf	3987,5,c	;volatile
  1417                           
  1418                           ;lcd4a.c: 138: (*(&(*(&PORTB + 0x12))) &=~ (1<<(4)));
  1419  00096A  9893               	bcf	3987,4,c	;volatile
  1420                           
  1421                           ;lcd4a.c: 139: (*(&(*(&PORTD + 0x12))) &=~ (1<<(5)));
  1422  00096C  9A95               	bcf	3989,5,c	;volatile
  1423                           
  1424                           ;lcd4a.c: 140: (*(&(*(&PORTD + 0x12))) &=~ (1<<(6)));
  1425  00096E  9C95               	bcf	3989,6,c	;volatile
  1426                           
  1427                           ;lcd4a.c: 141: (*(&(*(&PORTD + 0x12))) &=~ (1<<(7)));
  1428  000970  9E95               	bcf	3989,7,c	;volatile
  1429                           
  1430                           ;lcd4a.c: 143: lcd_cmd_hf(0x30);
  1431  000972  0E30               	movlw	48
  1432  000974  EC7F  F006         	call	_lcd_cmd_hf
  1433                           
  1434                           ;lcd4a.c: 144: _delay((unsigned long)((15)*(4000000/4000.0)));
  1435  000978  0E14               	movlw	20
  1436  00097A  6E04               	movwf	??_lcd_init& (0+255),c
  1437  00097C  0E7A               	movlw	122
  1438  00097E                     u427:
  1439  00097E  2EE8               	decfsz	wreg,f,c
  1440  000980  D7FE               	bra	u427
  1441  000982  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1442  000984  D7FC               	bra	u427
  1443                           
  1444                           ;lcd4a.c: 145: lcd_cmd_hf(0x30);
  1445  000986  0E30               	movlw	48
  1446  000988  EC7F  F006         	call	_lcd_cmd_hf
  1447                           
  1448                           ;lcd4a.c: 146: _delay((unsigned long)((1)*(4000000/4000.0)));
  1449  00098C  0EC8               	movlw	200
  1450  00098E                     u437:
  1451  00098E  D000               	nop2	
  1452  000990  2EE8               	decfsz	wreg,f,c
  1453  000992  D7FD               	bra	u437
  1454                           
  1455                           ;lcd4a.c: 147: lcd_cmd_hf(0x30);
  1456  000994  0E30               	movlw	48
  1457  000996  EC7F  F006         	call	_lcd_cmd_hf
  1458                           
  1459                           ;lcd4a.c: 148: _delay((unsigned long)((15)*(4000000/4000.0)));
  1460  00099A  0E14               	movlw	20
  1461  00099C  6E04               	movwf	??_lcd_init& (0+255),c
  1462  00099E  0E7A               	movlw	122
  1463  0009A0                     u447:
  1464  0009A0  2EE8               	decfsz	wreg,f,c
  1465  0009A2  D7FE               	bra	u447
  1466  0009A4  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1467  0009A6  D7FC               	bra	u447
  1468                           
  1469                           ;lcd4a.c: 149: lcd_cmd_hf(0x20);
  1470  0009A8  0E20               	movlw	32
  1471  0009AA  EC7F  F006         	call	_lcd_cmd_hf
  1472                           
  1473                           ;lcd4a.c: 150: _delay((unsigned long)((5)*(4000000/4000.0)));
  1474  0009AE  0E07               	movlw	7
  1475  0009B0  6E04               	movwf	??_lcd_init& (0+255),c
  1476  0009B2  0E7D               	movlw	125
  1477  0009B4                     u457:
  1478  0009B4  2EE8               	decfsz	wreg,f,c
  1479  0009B6  D7FE               	bra	u457
  1480  0009B8  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1481  0009BA  D7FC               	bra	u457
  1482  0009BC  F000               	nop	
  1483                           
  1484                           ;lcd4a.c: 151: lcd_cmd(0x28);
  1485  0009BE  0E28               	movlw	40
  1486  0009C0  ECB2  F005         	call	_lcd_cmd
  1487                           
  1488                           ;lcd4a.c: 152: _delay((unsigned long)((5)*(4000000/4000.0)));
  1489  0009C4  0E07               	movlw	7
  1490  0009C6  6E04               	movwf	??_lcd_init& (0+255),c
  1491  0009C8  0E7D               	movlw	125
  1492  0009CA                     u467:
  1493  0009CA  2EE8               	decfsz	wreg,f,c
  1494  0009CC  D7FE               	bra	u467
  1495  0009CE  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1496  0009D0  D7FC               	bra	u467
  1497  0009D2  F000               	nop	
  1498                           
  1499                           ;lcd4a.c: 153: lcd_cmd(0x0E);
  1500  0009D4  0E0E               	movlw	14
  1501  0009D6  ECB2  F005         	call	_lcd_cmd
  1502                           
  1503                           ;lcd4a.c: 154: _delay((unsigned long)((5)*(4000000/4000.0)));
  1504  0009DA  0E07               	movlw	7
  1505  0009DC  6E04               	movwf	??_lcd_init& (0+255),c
  1506  0009DE  0E7D               	movlw	125
  1507  0009E0                     u477:
  1508  0009E0  2EE8               	decfsz	wreg,f,c
  1509  0009E2  D7FE               	bra	u477
  1510  0009E4  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1511  0009E6  D7FC               	bra	u477
  1512  0009E8  F000               	nop	
  1513                           
  1514                           ;lcd4a.c: 155: lcd_cmd(0x01);
  1515  0009EA  0E01               	movlw	1
  1516  0009EC  ECB2  F005         	call	_lcd_cmd
  1517                           
  1518                           ;lcd4a.c: 156: _delay((unsigned long)((5)*(4000000/4000.0)));
  1519  0009F0  0E07               	movlw	7
  1520  0009F2  6E04               	movwf	??_lcd_init& (0+255),c
  1521  0009F4  0E7D               	movlw	125
  1522  0009F6                     u487:
  1523  0009F6  2EE8               	decfsz	wreg,f,c
  1524  0009F8  D7FE               	bra	u487
  1525  0009FA  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1526  0009FC  D7FC               	bra	u487
  1527  0009FE  F000               	nop	
  1528                           
  1529                           ;lcd4a.c: 157: lcd_cmd(0x06);
  1530  000A00  0E06               	movlw	6
  1531  000A02  ECB2  F005         	call	_lcd_cmd
  1532                           
  1533                           ;lcd4a.c: 158: _delay((unsigned long)((5)*(4000000/4000.0)));
  1534  000A06  0E07               	movlw	7
  1535  000A08  6E04               	movwf	??_lcd_init& (0+255),c
  1536  000A0A  0E7D               	movlw	125
  1537  000A0C                     u497:
  1538  000A0C  2EE8               	decfsz	wreg,f,c
  1539  000A0E  D7FE               	bra	u497
  1540  000A10  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1541  000A12  D7FC               	bra	u497
  1542  000A14  F000               	nop	
  1543                           
  1544                           ;lcd4a.c: 159: lcd_cmd(0x80);
  1545  000A16  0E80               	movlw	128
  1546  000A18  ECB2  F005         	call	_lcd_cmd
  1547  000A1C  0012               	return		;funcret
  1548  000A1E                     __end_of_lcd_init:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           prodh	equ	0xFF4
  1555                           prodl	equ	0xFF3
  1556                           indf0	equ	0xFEF
  1557                           postinc0	equ	0xFEE
  1558                           fsr0h	equ	0xFEA
  1559                           fsr0l	equ	0xFE9
  1560                           wreg	equ	0xFE8
  1561                           indf2	equ	0xFDF
  1562                           postinc2	equ	0xFDE
  1563                           postdec2	equ	0xFDD
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _lcd_cmd_hf *****************
  1569 ;; Defined at:
  1570 ;;		line 48 in file "../MyLibs/lcd4a.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  x               1    wreg     unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  x               1    1[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    1
  1591 ;; This function calls:
  1592 ;;		_lcd_lat
  1593 ;;		_manda
  1594 ;; This function is called by:
  1595 ;;		_lcd_init
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text9
  1600  000CFE                     __ptext9:
  1601                           	opt stack 0
  1602  000CFE                     _lcd_cmd_hf:
  1603                           	opt stack 28
  1604                           
  1605                           ;incstack = 0
  1606                           ;lcd_cmd_hf@x stored from wreg
  1607  000CFE  6E02               	movwf	lcd_cmd_hf@x,c
  1608                           
  1609                           ;lcd4a.c: 50: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1610  000D00  9A8C               	bcf	3980,5,c	;volatile
  1611                           
  1612                           ;lcd4a.c: 51: lcd &= 0x0F;
  1613  000D02  0E0F               	movlw	15
  1614  000D04  161D               	andwf	_lcd,f,c
  1615                           
  1616                           ;lcd4a.c: 52: lcd |= (x & 0xF0);
  1617  000D06  5002               	movf	lcd_cmd_hf@x,w,c
  1618  000D08  0BF0               	andlw	240
  1619  000D0A  121D               	iorwf	_lcd,f,c
  1620                           
  1621                           ;lcd4a.c: 53: manda(lcd);
  1622  000D0C  501D               	movf	_lcd,w,c
  1623  000D0E  EC69  F006         	call	_manda
  1624                           
  1625                           ;lcd4a.c: 54: lcd_lat();
  1626  000D12  EC96  F006         	call	_lcd_lat	;wreg free
  1627  000D16  0012               	return		;funcret
  1628  000D18                     __end_of_lcd_cmd_hf:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           indf0	equ	0xFEF
  1637                           postinc0	equ	0xFEE
  1638                           fsr0h	equ	0xFEA
  1639                           fsr0l	equ	0xFE9
  1640                           wreg	equ	0xFE8
  1641                           indf2	equ	0xFDF
  1642                           postinc2	equ	0xFDE
  1643                           postdec2	equ	0xFDD
  1644                           fsr2h	equ	0xFDA
  1645                           fsr2l	equ	0xFD9
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _lcd_hexa *****************
  1649 ;; Defined at:
  1650 ;;		line 188 in file "../MyLibs/lcd4a.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  a               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  a               1    0[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      unsigned char 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text10
  1678  000D18                     __ptext10:
  1679                           	opt stack 0
  1680  000D18                     _lcd_hexa:
  1681                           	opt stack 30
  1682                           
  1683                           ;incstack = 0
  1684                           ;lcd_hexa@a stored from wreg
  1685  000D18  6E01               	movwf	lcd_hexa@a,c
  1686                           
  1687                           ;lcd4a.c: 190: if(a > 9)
  1688  000D1A  0E09               	movlw	9
  1689  000D1C  6401               	cpfsgt	lcd_hexa@a,c
  1690  000D1E  D002               	goto	l113
  1691                           
  1692                           ;lcd4a.c: 191: a+= 55;
  1693  000D20  0E37               	movlw	55
  1694  000D22  D001               	goto	L1
  1695  000D24                     l113:
  1696                           
  1697                           ;lcd4a.c: 192: else
  1698                           ;lcd4a.c: 193: a+= 48;
  1699  000D24  0E30               	movlw	48
  1700  000D26                     L1:
  1701  000D26  2601               	addwf	lcd_hexa@a,f,c
  1702                           
  1703                           ;lcd4a.c: 194: return a;
  1704  000D28  5001               	movf	lcd_hexa@a,w,c
  1705  000D2A  0012               	return	
  1706  000D2C                     __end_of_lcd_hexa:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           indf0	equ	0xFEF
  1715                           postinc0	equ	0xFEE
  1716                           fsr0h	equ	0xFEA
  1717                           fsr0l	equ	0xFE9
  1718                           wreg	equ	0xFE8
  1719                           indf2	equ	0xFDF
  1720                           postinc2	equ	0xFDE
  1721                           postdec2	equ	0xFDD
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _lcd_gotoxy *****************
  1727 ;; Defined at:
  1728 ;;		line 106 in file "../MyLibs/lcd4a.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  x               1    wreg     unsigned char 
  1731 ;;  y               1    3[COMRAM] unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  x               1    5[COMRAM] unsigned char 
  1734 ;;  ADDRESS         1    6[COMRAM] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1744 ;;      Params:         1       0       0       0       0       0       0       0       0
  1745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1747 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1748 ;;Total ram usage:        4 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    2
  1751 ;; This function calls:
  1752 ;;		_lcd_cmd
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text11
  1759  000C70                     __ptext11:
  1760                           	opt stack 0
  1761  000C70                     _lcd_gotoxy:
  1762                           	opt stack 28
  1763                           
  1764                           ;incstack = 0
  1765                           ;lcd_gotoxy@x stored from wreg
  1766  000C70  6E06               	movwf	lcd_gotoxy@x,c
  1767                           
  1768                           ;lcd4a.c: 108: unsigned char ADDRESS= 0x00U;
  1769  000C72  0E00               	movlw	0
  1770  000C74  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1771                           
  1772                           ;lcd4a.c: 110: switch(y)
  1773  000C76  D005               	goto	l88
  1774  000C78                     
  1775                           ;lcd4a.c: 116: ADDRESS = 0xC0;
  1776  000C78  0EC0               	movlw	192
  1777  000C7A  D001               	goto	L3
  1778  000C7C                     
  1779                           ;lcd4a.c: 119: ADDRESS = 0x80;
  1780  000C7C  0E80               	movlw	128
  1781  000C7E                     L3:
  1782  000C7E  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1783                           
  1784                           ;lcd4a.c: 122: }
  1785                           
  1786                           ;lcd4a.c: 120: break;
  1787  000C80  D008               	goto	l90
  1788  000C82                     l88:
  1789  000C82  5004               	movf	lcd_gotoxy@y,w,c
  1790                           
  1791                           ; Switch size 1, requested type "space"
  1792                           ; Number of cases is 2, Range of values is 1 to 2
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte            7     4 (average)
  1796                           ;	Chosen strategy is simple_byte
  1797  000C84  0A01               	xorlw	1	; case 1
  1798  000C86  B4D8               	btfsc	status,2,c
  1799  000C88  D7F9               	goto	l92
  1800  000C8A  0A03               	xorlw	3	; case 2
  1801  000C8C  B4D8               	btfsc	status,2,c
  1802  000C8E  D7F4               	goto	l91
  1803  000C90  D7F5               	goto	l92
  1804  000C92                     l90:
  1805                           
  1806                           ;lcd4a.c: 123: ADDRESS = (unsigned char)((unsigned char)(ADDRESS + x) - (1U));
  1807  000C92  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1808  000C94  2406               	addwf	lcd_gotoxy@x,w,c
  1809  000C96  6E05               	movwf	??_lcd_gotoxy& (0+255),c
  1810  000C98  0405               	decf	??_lcd_gotoxy,w,c
  1811  000C9A  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1812                           
  1813                           ;lcd4a.c: 124: lcd_cmd(ADDRESS);
  1814  000C9C  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1815  000C9E  ECB2  F005         	call	_lcd_cmd
  1816  000CA2  0012               	return		;funcret
  1817  000CA4                     __end_of_lcd_gotoxy:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           indf0	equ	0xFEF
  1826                           postinc0	equ	0xFEE
  1827                           fsr0h	equ	0xFEA
  1828                           fsr0l	equ	0xFE9
  1829                           wreg	equ	0xFE8
  1830                           indf2	equ	0xFDF
  1831                           postinc2	equ	0xFDE
  1832                           postdec2	equ	0xFDD
  1833                           fsr2h	equ	0xFDA
  1834                           fsr2l	equ	0xFD9
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function _lcd_cmd *****************
  1838 ;; Defined at:
  1839 ;;		line 32 in file "../MyLibs/lcd4a.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  x               1    wreg     unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  x               1    2[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0
  1854 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1855 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		_lcd_lat
  1862 ;;		_manda
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;;		_lcd_putc
  1866 ;;		_lcd_gotoxy
  1867 ;;		_lcd_init
  1868 ;;		_lcd_setcursor_vb
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text12
  1873  000B64                     __ptext12:
  1874                           	opt stack 0
  1875  000B64                     _lcd_cmd:
  1876                           	opt stack 28
  1877                           
  1878                           ;incstack = 0
  1879                           ;lcd_cmd@x stored from wreg
  1880  000B64  6E03               	movwf	lcd_cmd@x,c
  1881                           
  1882                           ;lcd4a.c: 34: lcd = 0;
  1883  000B66  0E00               	movlw	0
  1884  000B68  6E1D               	movwf	_lcd,c
  1885                           
  1886                           ;lcd4a.c: 35: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1887  000B6A  9A8C               	bcf	3980,5,c	;volatile
  1888                           
  1889                           ;lcd4a.c: 36: lcd &= 0x0F;
  1890  000B6C  0E0F               	movlw	15
  1891  000B6E  161D               	andwf	_lcd,f,c
  1892                           
  1893                           ;lcd4a.c: 37: lcd |= (x & 0xF0);
  1894  000B70  5003               	movf	lcd_cmd@x,w,c
  1895  000B72  0BF0               	andlw	240
  1896  000B74  121D               	iorwf	_lcd,f,c
  1897                           
  1898                           ;lcd4a.c: 38: manda(lcd);
  1899  000B76  501D               	movf	_lcd,w,c
  1900  000B78  EC69  F006         	call	_manda
  1901                           
  1902                           ;lcd4a.c: 39: lcd_lat();
  1903  000B7C  EC96  F006         	call	_lcd_lat	;wreg free
  1904                           
  1905                           ;lcd4a.c: 40: _delay((unsigned long)((3)*(4000000/4000.0)));
  1906  000B80  0E04               	movlw	4
  1907  000B82  6E02               	movwf	??_lcd_cmd& (0+255),c
  1908  000B84  0EE4               	movlw	228
  1909  000B86                     u507:
  1910  000B86  2EE8               	decfsz	wreg,f,c
  1911  000B88  D7FE               	bra	u507
  1912  000B8A  2E02               	decfsz	??_lcd_cmd& (0+255),f,c
  1913  000B8C  D7FC               	bra	u507
  1914  000B8E  D000               	nop2	
  1915                           
  1916                           ;lcd4a.c: 42: lcd &= 0x0F;
  1917  000B90  0E0F               	movlw	15
  1918  000B92  161D               	andwf	_lcd,f,c
  1919                           
  1920                           ;lcd4a.c: 43: lcd |= ((x & 0x0F)<<4);
  1921  000B94  C003  F002         	movff	lcd_cmd@x,??_lcd_cmd
  1922  000B98  0E0F               	movlw	15
  1923  000B9A  1602               	andwf	??_lcd_cmd,f,c
  1924  000B9C  3802               	swapf	??_lcd_cmd,w,c
  1925  000B9E  0BF0               	andlw	240
  1926  000BA0  121D               	iorwf	_lcd,f,c
  1927                           
  1928                           ;lcd4a.c: 44: manda(lcd);
  1929  000BA2  501D               	movf	_lcd,w,c
  1930  000BA4  EC69  F006         	call	_manda
  1931                           
  1932                           ;lcd4a.c: 45: lcd_lat();
  1933  000BA8  EC96  F006         	call	_lcd_lat	;wreg free
  1934  000BAC  0012               	return		;funcret
  1935  000BAE                     __end_of_lcd_cmd:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           prodh	equ	0xFF4
  1942                           prodl	equ	0xFF3
  1943                           indf0	equ	0xFEF
  1944                           postinc0	equ	0xFEE
  1945                           fsr0h	equ	0xFEA
  1946                           fsr0l	equ	0xFE9
  1947                           wreg	equ	0xFE8
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           postdec2	equ	0xFDD
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _manda *****************
  1956 ;; Defined at:
  1957 ;;		line 163 in file "../MyLibs/lcd4a.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  dato            1    wreg     unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  dato            1    0[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        1 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_lcd_cmd
  1981 ;;		_lcd_cmd_hf
  1982 ;;		_lcd_dwr
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text13
  1987  000CD2                     __ptext13:
  1988                           	opt stack 0
  1989  000CD2                     _manda:
  1990                           	opt stack 28
  1991                           
  1992                           ;incstack = 0
  1993                           ;manda@dato stored from wreg
  1994  000CD2  6E01               	movwf	manda@dato,c
  1995                           
  1996                           ;lcd4a.c: 165: if(dato & (1 << 4)) (*(&(*(&PORTB + 0x09))) |= (1<<(4)));
  1997  000CD4  A801               	btfss	manda@dato,4,c
  1998  000CD6  D002               	goto	l99
  1999  000CD8  888A               	bsf	3978,4,c	;volatile
  2000  000CDA  D001               	goto	l100
  2001  000CDC                     l99:
  2002                           
  2003                           ;lcd4a.c: 166: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(4)));
  2004  000CDC  988A               	bcf	3978,4,c	;volatile
  2005  000CDE                     l100:
  2006                           
  2007                           ;lcd4a.c: 167: if(dato & (1 << 5)) (*(&(*(&PORTB + 0x09))) |= (1<<(5)));
  2008  000CDE  AA01               	btfss	manda@dato,5,c
  2009  000CE0  D002               	goto	l101
  2010  000CE2  8A8A               	bsf	3978,5,c	;volatile
  2011  000CE4  D001               	goto	l102
  2012  000CE6                     l101:
  2013                           
  2014                           ;lcd4a.c: 168: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(5)));
  2015  000CE6  9A8A               	bcf	3978,5,c	;volatile
  2016  000CE8                     l102:
  2017                           
  2018                           ;lcd4a.c: 169: if(dato & (1 << 6)) (*(&(*(&PORTB + 0x09))) |= (1<<(6)));
  2019  000CE8  AC01               	btfss	manda@dato,6,c
  2020  000CEA  D002               	goto	l103
  2021  000CEC  8C8A               	bsf	3978,6,c	;volatile
  2022  000CEE  D001               	goto	l104
  2023  000CF0                     l103:
  2024                           
  2025                           ;lcd4a.c: 170: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(6)));
  2026  000CF0  9C8A               	bcf	3978,6,c	;volatile
  2027  000CF2                     l104:
  2028                           
  2029                           ;lcd4a.c: 171: if(dato & (1 << 7)) (*(&(*(&PORTB + 0x09))) |= (1<<(7)));
  2030  000CF2  AE01               	btfss	manda@dato,7,c
  2031  000CF4  D002               	goto	l105
  2032  000CF6  8E8A               	bsf	3978,7,c	;volatile
  2033  000CF8  0012               	return	
  2034  000CFA                     l105:
  2035                           
  2036                           ;lcd4a.c: 172: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(7)));
  2037  000CFA  9E8A               	bcf	3978,7,c	;volatile
  2038  000CFC  0012               	return	
  2039  000CFE                     __end_of_manda:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           indf0	equ	0xFEF
  2048                           postinc0	equ	0xFEE
  2049                           fsr0h	equ	0xFEA
  2050                           fsr0l	equ	0xFE9
  2051                           wreg	equ	0xFE8
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           postdec2	equ	0xFDD
  2055                           fsr2h	equ	0xFDA
  2056                           fsr2l	equ	0xFD9
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _lcd_lat *****************
  2060 ;; Defined at:
  2061 ;;		line 21 in file "../MyLibs/lcd4a.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_lcd_cmd
  2085 ;;		_lcd_cmd_hf
  2086 ;;		_lcd_dwr
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text14
  2091  000D2C                     __ptext14:
  2092                           	opt stack 0
  2093  000D2C                     _lcd_lat:
  2094                           	opt stack 28
  2095                           
  2096                           ;lcd4a.c: 25: (*(&(*(&PORTD + 0x09))) |= (1<<(7)));
  2097                           
  2098                           ;incstack = 0
  2099  000D2C  8E8C               	bsf	3980,7,c	;volatile
  2100                           
  2101                           ;lcd4a.c: 27: _delay((unsigned long)((2)*(4000000/4000.0)));
  2102  000D2E  0E03               	movlw	3
  2103  000D30  6E01               	movwf	??_lcd_lat& (0+255),c
  2104  000D32  0E98               	movlw	152
  2105  000D34                     u517:
  2106  000D34  2EE8               	decfsz	wreg,f,c
  2107  000D36  D7FE               	bra	u517
  2108  000D38  2E01               	decfsz	??_lcd_lat& (0+255),f,c
  2109  000D3A  D7FC               	bra	u517
  2110                           
  2111                           ;lcd4a.c: 28: (*(&(*(&PORTD + 0x09))) &=~ (1<<(7)));
  2112  000D3C  9E8C               	bcf	3980,7,c	;volatile
  2113  000D3E  0012               	return		;funcret
  2114  000D40                     __end_of_lcd_lat:
  2115                           	opt stack 0
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           indf0	equ	0xFEF
  2123                           postinc0	equ	0xFEE
  2124                           fsr0h	equ	0xFEA
  2125                           fsr0l	equ	0xFE9
  2126                           wreg	equ	0xFE8
  2127                           indf2	equ	0xFDF
  2128                           postinc2	equ	0xFDE
  2129                           postdec2	equ	0xFDD
  2130                           fsr2h	equ	0xFDA
  2131                           fsr2l	equ	0xFD9
  2132                           status	equ	0xFD8
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           indf0	equ	0xFEF
  2140                           postinc0	equ	0xFEE
  2141                           fsr0h	equ	0xFEA
  2142                           fsr0l	equ	0xFE9
  2143                           wreg	equ	0xFE8
  2144                           indf2	equ	0xFDF
  2145                           postinc2	equ	0xFDE
  2146                           postdec2	equ	0xFDD
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           
  2151                           	psect	rparam
  2152  0000                     tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           indf0	equ	0xFEF
  2159                           postinc0	equ	0xFEE
  2160                           fsr0h	equ	0xFEA
  2161                           fsr0l	equ	0xFE9
  2162                           wreg	equ	0xFE8
  2163                           indf2	equ	0xFDF
  2164                           postinc2	equ	0xFDE
  2165                           postdec2	equ	0xFDD
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    10
    Data        2
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> value(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 11
		 -> value(COMRAM[8]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_setcursor_vb->_lcd_cmd
    _lcd_msg->_lcd_putc
    _lcd_putc->_lcd_cmd
    _lcd_putc->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_manda
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd_hf->_manda
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_manda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2701
                                             26 COMRAM     2     2      0
                            _lcd_cmd
                         _lcd_gotoxy
                           _lcd_hexa
                           _lcd_init
                            _lcd_msg
                           _lcd_putc
                   _lcd_setcursor_vb
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     210
                                              3 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     407
                                              4 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0     210
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      75
                                              1 COMRAM     1     1      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_hexa                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     335
                                              3 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (3) _manda                                                1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _lcd_lat
     _manda
   _lcd_gotoxy
     _lcd_cmd
       _lcd_lat
       _manda
   _lcd_hexa
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_cmd_hf
       _lcd_lat
       _manda
   _lcd_msg
     _lcd_putc
       _lcd_cmd
         _lcd_lat
         _manda
       _lcd_dwr
         _lcd_lat
         _manda
   _lcd_putc
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_dwr
       _lcd_lat
       _manda
   _lcd_setcursor_vb
     _lcd_cmd
       _lcd_lat
       _manda
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      27       1       41.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27       6        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Mar 26 22:10:38 2018

              lcd_cmd_hf@x 0002                         l43 0AA6                         l70 0C5A  
                       l71 0C3A                         l73 0C42                         l90 0C92  
                       l74 0C4A                         l82 0B3C                         l91 0C78  
                       l75 0C52                         l83 0B14                         l92 0C7C  
                       l88 0C82                         l99 0CDC               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_LVP$ON 000000                        l100 0CDE                        l101 0CE6  
                      l102 0CE8                        l103 0CF0                        l104 0CF2  
                      l105 0CFA                        l113 0D24                        l140 08E4  
                      l132 086A                        l125 0826                        l134 0892  
                      l126 0840                        l138 08DE                        l139 0936  
                      l551 0AFE                        l552 0B08                        l561 0C22  
                      l562 0C2C                        l547 0ADE                        l548 0AD6  
                      l557 0C0A                        l558 0C02               __CFG_CPB$OFF 000000  
                      u300 0B5C                        u240 0AE2                        u307 0B52  
                      u270 0C0E                        u407 0AB2                        u360 08C2  
                      u417 0BCC                        u290 0B34               __CFG_CPD$OFF 000000  
                      u507 0B86                        u427 097E                        u380 093E  
                      u517 0D34                        u437 098E                        u390 0956  
                      u447 09A0                        u457 09B4                        u297 0B2A  
                      u467 09CA                        u477 09E0                        u487 09F6  
                      u497 0A0C                        _lcd 001D                        wreg 000FE8  
             __CFG_FOSC$XT 000000                lcd_gotoxy@x 0006                lcd_gotoxy@y 0004  
                     l1149 0896                       STR_1 080B                       STR_2 0816  
                     _main 0A1E                       fsr0h 000FEA                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_BORV$190 000000                       prodh 000FF4  
                     prodl 000FF3                       start 0000              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000000                      ?_main 0001  
          __end_of___lwdiv 0B12            __end_of___lwmod 0C36                      _PORTB 000F81  
                    _PORTD 000F83                      _TRISB 000F93                      _TRISD 000F95  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
          __end_of_lcd_cmd 0BAE            __end_of_lcd_lat 0D40            __end_of_lcd_dwr 0BF4  
          __end_of_lcd_msg 0B64              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000            __end_of_dpowers 080B  
                    _manda 0CD2                      _value 001E             __CFG_BOREN$OFF 000000  
                    tablat 000FF5                      status 000FD8             __CFG_T3CMX$RC0 000000  
          __end_of_sprintf 0964             __CFG_ICPRT$OFF 000000            __initialization 0CA4  
             __end_of_main 0AC0             __CFG_PCLKEN$ON 000000                     ??_main 001B  
            __activetblptr 000002             __CFG_SDOMX$RB3 000000            __CFG_CCP2MX$RC1 000000  
                   ?_manda 0001                     _ANSELB 000F5C                     _ANSELC 000F5D  
                   _ANSELD 000F5E             __CFG_WDTEN$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_hexa 0D2C           __end_of_lcd_init 0A1E           __end_of_lcd_putc 0C70  
        ?_lcd_setcursor_vb 0004             __CFG_STVREN$ON 000000                  ??___lwdiv 0005  
                ??___lwmod 000C         ??_lcd_setcursor_vb 0005                     clear_0 0CC2  
                   _numero 0026                  ??_lcd_cmd 0002                  ??_lcd_lat 0001  
                ??_lcd_dwr 0002                  ??_lcd_msg 0007               __pdataCOMRAM 0026  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8          lcd_gotoxy@ADDRESS 0007                  ??_sprintf 0013  
     __CFG_LS48MHZ$SYS24X4 000000                 __accesstop 0060    __end_of__initialization 0CC8  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_manda 0CFE                    ??_manda 0001          __CFG_PLLSEL$PLL4X 000000  
               _lcd_cmd_hf 0CFE                 _lcd_gotoxy 0C70                  ?_lcd_hexa 0001  
                ?_lcd_init 0001                  ?_lcd_putc 0001                    __Hparam 0000  
                  __Lparam 0000                    ___lwdiv 0AC0                    ___lwmod 0BF4  
             __psmallconst 0800                    __pcinit 0CA4                    __ramtop 0800  
                  __ptext0 0A1E                    __ptext1 081C                    __ptext2 0BF4  
                  __ptext3 0AC0                    __ptext4 0D40                    __ptext5 0B12  
                  __ptext6 0C36                    __ptext7 0BAE                    __ptext8 0964  
                  __ptext9 0CFE                    _lcd_cmd 0B64                    _lcd_lat 0D2C  
                  _lcd_dwr 0BAE                    _lcd_msg 0B12                    _dpowers 0801  
                  _sprintf 081C                 ??_lcd_hexa 0001                 ??_lcd_init 0004  
               ??_lcd_putc 0004       end_of_initialization 0CC8              __Lmediumconst 0000  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
                _PORTCbits 000F82                ?_lcd_cmd_hf 0001                  _TRISCbits 000F94  
              ?_lcd_gotoxy 0004  __size_of_lcd_setcursor_vb 0010              __pidataCOMRAM 0D50  
      start_initialization 0CA4            __CFG_nLPBOR$OFF 000000        __size_of_lcd_cmd_hf 001A  
      __size_of_lcd_gotoxy 0034                __pbssCOMRAM 001D            __CFG_nPWRTEN$ON 000000  
        __size_of_lcd_hexa 0014          __size_of_lcd_init 00BA                sprintf@flag 0016  
        __size_of_lcd_putc 003A                sprintf@prec 0017           ___lwdiv@dividend 0001  
                 ?___lwdiv 0001                   ?___lwmod 0008                   ?_lcd_cmd 0001  
                 ?_lcd_lat 0001    lcd_setcursor_vb@visible 0005                   ?_lcd_dwr 0001  
                 ?_lcd_msg 0005                __smallconst 0800           _lcd_setcursor_vb 0D40  
         ___lwdiv@quotient 0005             __size_of_manda 002C                   ?_sprintf 000D  
         __CFG_WDTPS$32768 000000                  lcd_hexa@a 0001               ??_lcd_cmd_hf 0002  
                lcd_putc@c 0004          __CFG_CFGPLLEN$OFF 000000               ??_lcd_gotoxy 0005  
                manda@dato 0001                   __Hrparam 0000                   __Lrparam 0000  
       __end_of_lcd_cmd_hf 0D18         __end_of_lcd_gotoxy 0CA4           __size_of___lwdiv 0052  
         __size_of___lwmod 0042           __size_of_lcd_cmd 004A           __size_of_lcd_lat 0014  
         __size_of_lcd_dwr 0046           __size_of_lcd_msg 0052                 sprintf@val 0018  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007                   __ptext10 0D18  
                 __ptext11 0C70                   __ptext12 0B64                   __ptext13 0CD2  
                 __ptext14 0D2C                   _lcd_hexa 0D18                   _lcd_init 0964  
                 _lcd_putc 0C36           __size_of_sprintf 0148              __size_of_main 00A2  
                 lcd_cmd@x 0003                   lcd_dwr@x 0003                   lcd_msg@c 0005  
                sprintf@ap 0014                  sprintf@sp 000D      lcd_setcursor_vb@blink 0004  
         ___lwmod@dividend 0008   __end_of_lcd_setcursor_vb 0D50       __CFG_CPUDIV$NOCLKDIV 000000  
                 sprintf@c 001A                   sprintf@f 000F            ___lwmod@divisor 000A  
          ___lwmod@counter 000C  
