

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 20 04:55:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4520 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _PORTB	set	3969
    61  0000                     _PORTD	set	3971
    62  0000                     _TXREG	set	4013
    63  0000                     _RCREG	set	4014
    64  0000                     _PIR1bits	set	3998
    65  0000                     _RCSTAbits	set	4011
    66  0000                     _SPBRG	set	4015
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _BAUDCONbits	set	4024
    69  0000                     _LATCbits	set	3979
    70  0000                     _TRISCbits	set	3988
    71                           
    72                           	psect	smallconst
    73  000600                     __psmallconst:
    74                           	opt stack 0
    75  000600  00                 	db	0
    76  000601                     STR_3:
    77  000601  4D                 	db	77	;'M'
    78  000602  75                 	db	117	;'u'
    79  000603  65                 	db	101	;'e'
    80  000604  73                 	db	115	;'s'
    81  000605  74                 	db	116	;'t'
    82  000606  72                 	db	114	;'r'
    83  000607  61                 	db	97	;'a'
    84  000608  20                 	db	32
    85  000609  63                 	db	99	;'c'
    86  00060A  61                 	db	97	;'a'
    87  00060B  72                 	db	114	;'r'
    88  00060C  61                 	db	97	;'a'
    89  00060D  63                 	db	99	;'c'
    90  00060E  74                 	db	116	;'t'
    91  00060F  65                 	db	101	;'e'
    92  000610  72                 	db	114	;'r'
    93  000611  65                 	db	101	;'e'
    94  000612  73                 	db	115	;'s'
    95  000613  0A                 	db	10
    96  000614  0D                 	db	13
    97  000615  00                 	db	0
    98  000616                     STR_1:
    99  000616  50                 	db	80	;'P'
   100  000617  75                 	db	117	;'u'
   101  000618  65                 	db	101	;'e'
   102  000619  72                 	db	114	;'r'
   103  00061A  74                 	db	116	;'t'
   104  00061B  6F                 	db	111	;'o'
   105  00061C  20                 	db	32
   106  00061D  53                 	db	83	;'S'
   107  00061E  65                 	db	101	;'e'
   108  00061F  72                 	db	114	;'r'
   109  000620  69                 	db	105	;'i'
   110  000621  61                 	db	97	;'a'
   111  000622  6C                 	db	108	;'l'
   112  000623  00                 	db	0
   113  000624                     STR_4:
   114  000624  6C                 	db	108	;'l'
   115  000625  65                 	db	101	;'e'
   116  000626  74                 	db	116	;'t'
   117  000627  72                 	db	114	;'r'
   118  000628  61                 	db	97	;'a'
   119  000629  3A                 	db	58	;':'
   120  00062A  20                 	db	32
   121  00062B  25                 	db	37
   122  00062C  63                 	db	99	;'c'
   123  00062D  20                 	db	32
   124  00062E  0A                 	db	10
   125  00062F  0D                 	db	13
   126  000630  00                 	db	0
   127  000631                     STR_5:
   128  000631  20                 	db	32
   129  000632  20                 	db	32
   130  000633  20                 	db	32
   131  000634  20                 	db	32
   132  000635  20                 	db	32
   133  000636  00                 	db	0
   134  000637                     STR_2:
   135  000637  68                 	db	104	;'h'
   136  000638  6F                 	db	111	;'o'
   137  000639  6C                 	db	108	;'l'
   138  00063A  61                 	db	97	;'a'
   139  00063B  00                 	db	0
   140                           
   141                           ; #config settings
   142  00063C  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           	psect	cinit
   145  000976                     __pcinit:
   146                           	opt stack 0
   147  000976                     start_initialization:
   148                           	opt stack 0
   149  000976                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to COMRAM (9 bytes)
   153  000976  EE00  F00D         	lfsr	0,__pbssCOMRAM
   154  00097A  0E09               	movlw	9
   155  00097C                     clear_0:
   156  00097C  6AEE               	clrf	postinc0,c
   157  00097E  06E8               	decf	wreg,f,c
   158  000980  E1FD               	bnz	clear_0
   159  000982                     end_of_initialization:
   160                           	opt stack 0
   161  000982                     __end_of__initialization:
   162                           	opt stack 0
   163  000982  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  000984  6EF8               	movwf	tblptru,c
   165  000986  0100               	movlb	0
   166  000988  EF7E  F003         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssCOMRAM
   172  00000D                     __pbssCOMRAM:
   173                           	opt stack 0
   174  00000D                     _value:
   175                           	opt stack 0
   176  00000D                     	ds	8
   177  000015                     _lcd:
   178                           	opt stack 0
   179  000015                     	ds	1
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184                           	psect	cstackCOMRAM
   185  000001                     __pcstackCOMRAM:
   186                           	opt stack 0
   187  000001                     ??_lcd_lat:
   188  000001                     putch@dato:
   189                           	opt stack 0
   190  000001                     manda@dato:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	1
   195  000002                     ??_lcd_dwr:
   196  000002                     ??_lcd_cmd:
   197  000002                     ?_printf:
   198                           	opt stack 0
   199  000002                     lcd_cmd_hf@x:
   200                           	opt stack 0
   201  000002                     printf@f:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x1
   205  000002                     	ds	1
   206  000003                     lcd_cmd@x:
   207                           	opt stack 0
   208  000003                     lcd_dwr@x:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x2
   212  000003                     	ds	1
   213  000004                     ??_lcd_init:
   214  000004                     lcd_putc@c:
   215                           	opt stack 0
   216  000004                     lcd_gotoxy@y:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x3
   220  000004                     	ds	1
   221  000005                     ??_lcd_gotoxy:
   222  000005                     lcd_msg@c:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x4
   226  000005                     	ds	1
   227  000006                     lcd_gotoxy@x:
   228                           	opt stack 0
   229  000006                     printf@flag:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x5
   233  000006                     	ds	1
   234  000007                     lcd_gotoxy@ADDRESS:
   235                           	opt stack 0
   236  000007                     printf@ap:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x6
   240  000007                     	ds	2
   241  000009                     printf@c:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x8
   245  000009                     	ds	1
   246  00000A                     ??_main:
   247                           
   248                           ; 1 bytes @ 0x9
   249  00000A                     	ds	2
   250  00000C                     main@c:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0xB
   254  00000C                     	ds	1
   255                           tblptru	equ	0xFF8
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 37 in file "usart_5.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  c               1   11[COMRAM] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  2   40[None  ] int 
   271 ;; Registers used:
   272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   278 ;;      Params:         0       0       0       0       0       0       0
   279 ;;      Locals:         1       0       0       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0       0       0
   281 ;;      Totals:         3       0       0       0       0       0       0
   282 ;;Total ram usage:        3 bytes
   283 ;; Hardware stack levels required when called:    4
   284 ;; This function calls:
   285 ;;		_getch
   286 ;;		_lcd_gotoxy
   287 ;;		_lcd_init
   288 ;;		_lcd_msg
   289 ;;		_lcd_putc
   290 ;;		_printf
   291 ;;		_sci_conf
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  0006FC                     __ptext0:
   299                           	opt stack 0
   300  0006FC                     _main:
   301                           	opt stack 27
   302                           
   303                           ;usart_5.c: 39: unsigned char c;
   304                           ;usart_5.c: 41: TRISCbits.TRISC4 = 0;
   305                           
   306                           ;incstack = 0
   307  0006FC  9894               	bcf	3988,4,c	;volatile
   308                           
   309                           ;usart_5.c: 42: sci_conf();
   310  0006FE  ECC6  F004         	call	_sci_conf	;wreg free
   311                           
   312                           ;usart_5.c: 43: lcd_init();
   313  000702  EC1F  F003         	call	_lcd_init	;wreg free
   314                           
   315                           ;usart_5.c: 44: lcd_msg("Puerto Serial");
   316  000706  0E16               	movlw	low STR_1
   317  000708  6E05               	movwf	lcd_msg@c,c
   318  00070A  0E06               	movlw	high STR_1
   319  00070C  6E06               	movwf	lcd_msg@c+1,c
   320  00070E  EC99  F004         	call	_lcd_msg	;wreg free
   321                           
   322                           ;usart_5.c: 45: lcd_gotoxy(1,2);
   323  000712  0E02               	movlw	2
   324  000714  6E04               	movwf	lcd_gotoxy@y,c
   325  000716  0E01               	movlw	1
   326  000718  EC69  F004         	call	_lcd_gotoxy
   327                           
   328                           ;usart_5.c: 46: lcd_msg("hola");
   329  00071C  0E37               	movlw	low STR_2
   330  00071E  6E05               	movwf	lcd_msg@c,c
   331  000720  0E06               	movlw	high STR_2
   332  000722  6E06               	movwf	lcd_msg@c+1,c
   333  000724  EC99  F004         	call	_lcd_msg	;wreg free
   334                           
   335                           ;usart_5.c: 47: printf("Muestra caracteres\n\r");
   336  000728  0E01               	movlw	low STR_3
   337  00072A  6E02               	movwf	printf@f,c
   338  00072C  0E06               	movlw	high STR_3
   339  00072E  6E03               	movwf	printf@f+1,c
   340  000730  ECC8  F003         	call	_printf	;wreg free
   341                           
   342                           ;usart_5.c: 48: LATCbits.LATC4=0;
   343  000734  988B               	bcf	3979,4,c	;volatile
   344  000736                     
   345                           ;usart_5.c: 50: {
   346                           ;usart_5.c: 51: LATCbits.LATC4^=1;
   347  000736  788B               	btg	3979,4,c	;volatile
   348                           
   349                           ;usart_5.c: 52: c = getch();
   350  000738  ECE2  F004         	call	_getch	;wreg free
   351  00073C  6E0C               	movwf	main@c,c
   352                           
   353                           ;usart_5.c: 53: printf("letra: %c \n\r",c);
   354  00073E  0E24               	movlw	low STR_4
   355  000740  6E02               	movwf	printf@f,c
   356  000742  0E06               	movlw	high STR_4
   357  000744  6E03               	movwf	printf@f+1,c
   358  000746  C00C  F004         	movff	main@c,?_printf+2
   359  00074A  6A05               	clrf	?_printf+3,c
   360  00074C  ECC8  F003         	call	_printf	;wreg free
   361                           
   362                           ;usart_5.c: 54: lcd_gotoxy(1,2); lcd_msg("     ");
   363  000750  0E02               	movlw	2
   364  000752  6E04               	movwf	lcd_gotoxy@y,c
   365  000754  0E01               	movlw	1
   366  000756  EC69  F004         	call	_lcd_gotoxy
   367  00075A  0E31               	movlw	low STR_5
   368  00075C  6E05               	movwf	lcd_msg@c,c
   369  00075E  0E06               	movlw	high STR_5
   370  000760  6E06               	movwf	lcd_msg@c+1,c
   371  000762  EC99  F004         	call	_lcd_msg	;wreg free
   372                           
   373                           ;usart_5.c: 55: lcd_gotoxy(1,2); lcd_putc(c);
   374  000766  0E02               	movlw	2
   375  000768  6E04               	movwf	lcd_gotoxy@y,c
   376  00076A  0E01               	movlw	1
   377  00076C  EC69  F004         	call	_lcd_gotoxy
   378  000770  500C               	movf	main@c,w,c
   379  000772  EC4C  F004         	call	_lcd_putc
   380                           
   381                           ;usart_5.c: 56: _delay((unsigned long)((1500)*(16000000/4000.0)));
   382  000776  0E1F               	movlw	31
   383  000778  6E0B               	movwf	(??_main+1)& (0+255),c
   384  00077A  0E71               	movlw	113
   385  00077C  6E0A               	movwf	??_main& (0+255),c
   386  00077E  0E1E               	movlw	30
   387  000780                     u147:
   388  000780  2EE8               	decfsz	wreg,f,c
   389  000782  D7FE               	bra	u147
   390  000784  2E0A               	decfsz	??_main& (0+255),f,c
   391  000786  D7FC               	bra	u147
   392  000788  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   393  00078A  D7FA               	bra	u147
   394  00078C  D000               	nop2	
   395  00078E  D7D3               	goto	l41
   396  000790                     __end_of_main:
   397                           	opt stack 0
   398                           tblptru	equ	0xFF8
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402 ;; *************** function _sci_conf *****************
   403 ;; Defined at:
   404 ;;		line 62 in file "usart_5.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   418 ;;      Params:         0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  00098C                     __ptext1:
   433                           	opt stack 0
   434  00098C                     _sci_conf:
   435                           	opt stack 30
   436                           
   437                           ;usart_5.c: 71: BAUDCONbits.BRG16 = 0;
   438                           
   439                           ;incstack = 0
   440  00098C  96B8               	bcf	4024,3,c	;volatile
   441                           
   442                           ;usart_5.c: 73: TXSTAbits.SYNC = 0;
   443  00098E  98AC               	bcf	4012,4,c	;volatile
   444                           
   445                           ;usart_5.c: 74: TXSTAbits.BRGH = 1;
   446  000990  84AC               	bsf	4012,2,c	;volatile
   447                           
   448                           ;usart_5.c: 75: SPBRG = 103;
   449  000992  0E67               	movlw	103
   450  000994  6EAF               	movwf	4015,c	;volatile
   451                           
   452                           ;usart_5.c: 76: TXSTAbits.TXEN = 1;
   453  000996  8AAC               	bsf	4012,5,c	;volatile
   454                           
   455                           ;usart_5.c: 78: RCSTAbits.SPEN = 1;
   456  000998  8EAB               	bsf	4011,7,c	;volatile
   457                           
   458                           ;usart_5.c: 79: RCSTAbits.CREN = 1;
   459  00099A  88AB               	bsf	4011,4,c	;volatile
   460                           
   461                           ;usart_5.c: 81: TRISCbits.TRISC7 = 1;
   462  00099C  8E94               	bsf	3988,7,c	;volatile
   463                           
   464                           ;usart_5.c: 82: TRISCbits.TRISC6 = 0;
   465  00099E  9C94               	bcf	3988,6,c	;volatile
   466  0009A0  0012               	return		;funcret
   467  0009A2                     __end_of_sci_conf:
   468                           	opt stack 0
   469                           tblptru	equ	0xFF8
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           
   473 ;; *************** function _printf *****************
   474 ;; Defined at:
   475 ;;		line 464 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  f               2    1[COMRAM] PTR const unsigned char 
   478 ;;		 -> STR_4(13), STR_3(21), 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  tmpval          4    0        struct .
   481 ;;  cp              3    0        PTR const unsigned char 
   482 ;;  ap              2    6[COMRAM] PTR void [1]
   483 ;;		 -> ?_printf(2), 
   484 ;;  len             2    0        unsigned int 
   485 ;;  val             2    0        unsigned int 
   486 ;;  c               1    8[COMRAM] char 
   487 ;;  flag            1    5[COMRAM] unsigned char 
   488 ;;  prec            1    0        char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2    1[COMRAM] int 
   491 ;; Registers used:
   492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         4       0       0       0       0       0       0
   499 ;;      Locals:         4       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0
   501 ;;      Totals:         8       0       0       0       0       0       0
   502 ;;Total ram usage:        8 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		_putch
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text2
   513  000790                     __ptext2:
   514                           	opt stack 0
   515  000790                     _printf:
   516                           	opt stack 29
   517                           
   518                           ;doprnt.c: 466: va_list ap;
   519                           ;doprnt.c: 499: signed char c;
   520                           ;doprnt.c: 506: signed char prec;
   521                           ;doprnt.c: 508: unsigned char flag;
   522                           ;doprnt.c: 523: union {
   523                           ;doprnt.c: 524: unsigned long vd;
   524                           ;doprnt.c: 525: double integ;
   525                           ;doprnt.c: 526: } tmpval;
   526                           ;doprnt.c: 528: unsigned int val;
   527                           ;doprnt.c: 529: unsigned len;
   528                           ;doprnt.c: 530: const char * cp;
   529                           ;doprnt.c: 533: *ap = __va_start();
   530                           
   531                           ;incstack = 0
   532  000790  0E04               	movlw	low (?_printf+2)
   533  000792  6E07               	movwf	printf@ap,c
   534  000794  0E00               	movlw	high (?_printf+2)
   535  000796  6E08               	movwf	printf@ap+1,c
   536                           
   537                           ;doprnt.c: 536: while(c = *f++) {
   538  000798  D02A               	goto	l148
   539  00079A                     
   540                           ;doprnt.c: 538: if(c != '%')
   541  00079A  0E25               	movlw	37
   542  00079C  1809               	xorwf	printf@c,w,c
   543  00079E  B4D8               	btfsc	status,2,c
   544  0007A0  D004               	goto	l142
   545                           
   546                           ;doprnt.c: 540: {
   547                           ;doprnt.c: 541: (putch(c) );
   548  0007A2  5009               	movf	printf@c,w,c
   549  0007A4  ECDC  F004         	call	_putch
   550                           
   551                           ;doprnt.c: 542: continue;
   552  0007A8  D022               	goto	l148
   553  0007AA                     l142:
   554                           
   555                           ;doprnt.c: 543: }
   556                           ;doprnt.c: 548: flag = 0;
   557  0007AA  0E00               	movlw	0
   558  0007AC  6E06               	movwf	printf@flag,c
   559                           
   560                           ;doprnt.c: 635: switch(c = *f++) {
   561  0007AE  D00E               	goto	l143
   562  0007B0                     
   563                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
   564  0007B0  C007  FFD9         	movff	printf@ap,fsr2l
   565  0007B4  C008  FFDA         	movff	printf@ap+1,fsr2h
   566  0007B8  50DF               	movf	indf2,w,c
   567  0007BA  6E09               	movwf	printf@c,c
   568  0007BC  0E02               	movlw	2
   569  0007BE  2607               	addwf	printf@ap,f,c
   570  0007C0  0E00               	movlw	0
   571  0007C2  2208               	addwfc	printf@ap+1,f,c
   572  0007C4                     
   573                           ;doprnt.c: 809: (putch(c) );
   574  0007C4  5009               	movf	printf@c,w,c
   575  0007C6  ECDC  F004         	call	_putch
   576                           
   577                           ;doprnt.c: 822: }
   578                           
   579                           ;doprnt.c: 810: continue;
   580  0007CA  D011               	goto	l148
   581  0007CC                     l143:
   582  0007CC  C002  FFF6         	movff	printf@f,tblptrl
   583  0007D0  C003  FFF7         	movff	printf@f+1,tblptrh
   584  0007D4  4A02               	infsnz	printf@f,f,c
   585  0007D6  2A03               	incf	printf@f+1,f,c
   586  0007D8                     	if	0	;tblptru may be non-zero
   587  0007D8                     	endif
   588  0007D8                     	if	0	;tblptru may be non-zero
   589  0007D8                     	endif
   590  0007D8  0008               	tblrd		*
   591  0007DA  CFF5 F009          	movff	tablat,printf@c
   592  0007DE  5009               	movf	printf@c,w,c
   593                           
   594                           ; Switch size 1, requested type "space"
   595                           ; Number of cases is 2, Range of values is 0 to 99
   596                           ; switch strategies available:
   597                           ; Name         Instructions Cycles
   598                           ; simple_byte            7     4 (average)
   599                           ;	Chosen strategy is simple_byte
   600  0007E0  0A00               	xorlw	0	; case 0
   601  0007E2  B4D8               	btfsc	status,2,c
   602  0007E4  0012               	return	
   603  0007E6  0A63               	xorlw	99	; case 99
   604  0007E8  B4D8               	btfsc	status,2,c
   605  0007EA  D7E2               	goto	l146
   606  0007EC  D7EB               	goto	l147
   607  0007EE                     l148:
   608                           
   609                           ;doprnt.c: 1422: {
   610  0007EE  C002  FFF6         	movff	printf@f,tblptrl
   611  0007F2  C003  FFF7         	movff	printf@f+1,tblptrh
   612  0007F6  4A02               	infsnz	printf@f,f,c
   613  0007F8  2A03               	incf	printf@f+1,f,c
   614  0007FA                     	if	0	;tblptru may be non-zero
   615  0007FA                     	endif
   616  0007FA                     	if	0	;tblptru may be non-zero
   617  0007FA                     	endif
   618  0007FA  0008               	tblrd		*
   619  0007FC  CFF5 F009          	movff	tablat,printf@c
   620  000800  5009               	movf	printf@c,w,c
   621  000802  B4D8               	btfsc	status,2,c
   622  000804  0012               	return	
   623  000806  D7C9               	goto	l141
   624  000808                     __end_of_printf:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           indf2	equ	0xFDF
   633                           fsr2h	equ	0xFDA
   634                           fsr2l	equ	0xFD9
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _putch *****************
   638 ;; Defined at:
   639 ;;		line 92 in file "usart_5.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  dato            1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  dato            1    0[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   653 ;;      Params:         0       0       0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0
   656 ;;      Totals:         1       0       0       0       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_printf
   663 ;;		_getche
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668  0009B8                     __ptext3:
   669                           	opt stack 0
   670  0009B8                     _putch:
   671                           	opt stack 29
   672                           
   673                           ;incstack = 0
   674                           ;putch@dato stored from wreg
   675  0009B8  6E01               	movwf	putch@dato,c
   676  0009BA                     
   677                           ;usart_5.c: 94: while(PIR1bits.TXIF == 0);
   678  0009BA  A89E               	btfss	3998,4,c	;volatile
   679  0009BC  D7FE               	goto	l854
   680                           
   681                           ;usart_5.c: 95: TXREG = dato;
   682  0009BE  C001  FFAD         	movff	putch@dato,4013	;volatile
   683  0009C2  0012               	return		;funcret
   684  0009C4                     __end_of_putch:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           indf2	equ	0xFDF
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _lcd_msg *****************
   698 ;; Defined at:
   699 ;;		line 101 in file "../MyLibs/lcd4a.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  c               2    4[COMRAM] PTR unsigned char 
   702 ;;		 -> STR_5(6), STR_2(5), STR_1(14), 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         2       0       0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0
   717 ;;      Totals:         2       0       0       0       0       0       0
   718 ;;Total ram usage:        2 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    3
   721 ;; This function calls:
   722 ;;		_lcd_putc
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text4
   729  000932                     __ptext4:
   730                           	opt stack 0
   731  000932                     _lcd_msg:
   732                           	opt stack 27
   733                           
   734                           ;lcd4a.c: 103: while(*c != 0)
   735                           
   736                           ;incstack = 0
   737  000932  D00A               	goto	l98
   738  000934                     
   739                           ;lcd4a.c: 104: {
   740                           ;lcd4a.c: 105: lcd_putc(*c++);
   741  000934  C005  FFF6         	movff	lcd_msg@c,tblptrl
   742  000938  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   743  00093C                     	if	0	;tblptru may be non-zero
   744  00093C                     	endif
   745  00093C                     	if	0	;tblptru may be non-zero
   746  00093C                     	endif
   747  00093C  0008               	tblrd		*
   748  00093E  50F5               	movf	tablat,w,c
   749  000940  EC4C  F004         	call	_lcd_putc
   750  000944  4A05               	infsnz	lcd_msg@c,f,c
   751  000946  2A06               	incf	lcd_msg@c+1,f,c
   752  000948                     l98:
   753  000948  C005  FFF6         	movff	lcd_msg@c,tblptrl
   754  00094C  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   755  000950                     	if	0	;tblptru may be non-zero
   756  000950                     	endif
   757  000950                     	if	0	;tblptru may be non-zero
   758  000950                     	endif
   759  000950  0008               	tblrd		*
   760  000952  50F5               	movf	tablat,w,c
   761  000954  0900               	iorlw	0
   762  000956  B4D8               	btfsc	status,2,c
   763  000958  0012               	return	
   764  00095A  D7EC               	goto	l99
   765  00095C                     __end_of_lcd_msg:
   766                           	opt stack 0
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           indf2	equ	0xFDF
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _lcd_putc *****************
   779 ;; Defined at:
   780 ;;		line 66 in file "../MyLibs/lcd4a.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  c               1    wreg     unsigned char 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  c               1    3[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       0       0       0       0       0       0
   795 ;;      Locals:         1       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0
   797 ;;      Totals:         1       0       0       0       0       0       0
   798 ;;Total ram usage:        1 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		_lcd_cmd
   803 ;;		_lcd_dwr
   804 ;; This function is called by:
   805 ;;		_main
   806 ;;		_lcd_msg
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text5
   811  000898                     __ptext5:
   812                           	opt stack 0
   813  000898                     _lcd_putc:
   814                           	opt stack 28
   815                           
   816                           ;incstack = 0
   817                           ;lcd_putc@c stored from wreg
   818  000898  6E04               	movwf	lcd_putc@c,c
   819                           
   820                           ;lcd4a.c: 68: switch(c)
   821  00089A  D010               	goto	l86
   822  00089C                     
   823                           ;lcd4a.c: 71: lcd_cmd(0x01);
   824  00089C  0E01               	movlw	1
   825  00089E  EC04  F004         	call	_lcd_cmd
   826                           
   827                           ;lcd4a.c: 72: break;
   828  0008A2  0012               	return	
   829  0008A4                     
   830                           ;lcd4a.c: 74: lcd_cmd(3);
   831  0008A4  0E03               	movlw	3
   832  0008A6  EC04  F004         	call	_lcd_cmd
   833                           
   834                           ;lcd4a.c: 75: break;
   835  0008AA  0012               	return	
   836  0008AC                     
   837                           ;lcd4a.c: 77: lcd_cmd(0x10);
   838  0008AC  0E10               	movlw	16
   839  0008AE  EC04  F004         	call	_lcd_cmd
   840                           
   841                           ;lcd4a.c: 78: break;
   842  0008B2  0012               	return	
   843  0008B4                     
   844                           ;lcd4a.c: 80: lcd_dwr(c);
   845  0008B4  5004               	movf	lcd_putc@c,w,c
   846  0008B6  EC29  F004         	call	_lcd_dwr
   847                           
   848                           ;lcd4a.c: 82: }
   849                           
   850                           ;lcd4a.c: 81: break;
   851  0008BA  0012               	return	
   852  0008BC                     l86:
   853  0008BC  5004               	movf	lcd_putc@c,w,c
   854                           
   855                           ; Switch size 1, requested type "space"
   856                           ; Number of cases is 3, Range of values is 8 to 12
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte           10     6 (average)
   860                           ;	Chosen strategy is simple_byte
   861  0008BE  0A08               	xorlw	8	; case 8
   862  0008C0  B4D8               	btfsc	status,2,c
   863  0008C2  D7F4               	goto	l90
   864  0008C4  0A02               	xorlw	2	; case 10
   865  0008C6  B4D8               	btfsc	status,2,c
   866  0008C8  D7ED               	goto	l89
   867  0008CA  0A06               	xorlw	6	; case 12
   868  0008CC  B4D8               	btfsc	status,2,c
   869  0008CE  D7E6               	goto	l87
   870  0008D0  D7F1               	goto	l91
   871  0008D2                     __end_of_lcd_putc:
   872                           	opt stack 0
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           indf2	equ	0xFDF
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _lcd_dwr *****************
   885 ;; Defined at:
   886 ;;		line 86 in file "../MyLibs/lcd4a.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  x               1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  x               1    2[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         0       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0
   902 ;;      Temps:          1       0       0       0       0       0       0
   903 ;;      Totals:         2       0       0       0       0       0       0
   904 ;;Total ram usage:        2 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		_lcd_lat
   909 ;;		_manda
   910 ;; This function is called by:
   911 ;;		_lcd_putc
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text6
   916  000852                     __ptext6:
   917                           	opt stack 0
   918  000852                     _lcd_dwr:
   919                           	opt stack 28
   920                           
   921                           ;incstack = 0
   922                           ;lcd_dwr@x stored from wreg
   923  000852  6E03               	movwf	lcd_dwr@x,c
   924                           
   925                           ;lcd4a.c: 88: (*(&(*(&PORTD + 0x09))) |= (1<<(5)));
   926  000854  8A8C               	bsf	3980,5,c	;volatile
   927                           
   928                           ;lcd4a.c: 89: lcd &= 0x0F;
   929  000856  0E0F               	movlw	15
   930  000858  1615               	andwf	_lcd,f,c
   931                           
   932                           ;lcd4a.c: 90: lcd |= ((x & 0xF0));
   933  00085A  5003               	movf	lcd_dwr@x,w,c
   934  00085C  0BF0               	andlw	240
   935  00085E  1215               	iorwf	_lcd,f,c
   936                           
   937                           ;lcd4a.c: 91: manda(lcd);
   938  000860  5015               	movf	_lcd,w,c
   939  000862  EC83  F004         	call	_manda
   940                           
   941                           ;lcd4a.c: 92: lcd_lat();
   942  000866  ECD1  F004         	call	_lcd_lat	;wreg free
   943                           
   944                           ;lcd4a.c: 93: _delay((unsigned long)((4)*(16000000/4000.0)));
   945  00086A  0E15               	movlw	21
   946  00086C  6E02               	movwf	??_lcd_dwr& (0+255),c
   947  00086E  0EC6               	movlw	198
   948  000870                     u157:
   949  000870  2EE8               	decfsz	wreg,f,c
   950  000872  D7FE               	bra	u157
   951  000874  2E02               	decfsz	??_lcd_dwr& (0+255),f,c
   952  000876  D7FC               	bra	u157
   953  000878  D000               	nop2	
   954                           
   955                           ;lcd4a.c: 95: lcd &= 0x0F;
   956  00087A  0E0F               	movlw	15
   957  00087C  1615               	andwf	_lcd,f,c
   958                           
   959                           ;lcd4a.c: 96: lcd |= ((x & 0x0F)<<4);
   960  00087E  C003  F002         	movff	lcd_dwr@x,??_lcd_dwr
   961  000882  0E0F               	movlw	15
   962  000884  1602               	andwf	??_lcd_dwr,f,c
   963  000886  3802               	swapf	??_lcd_dwr,w,c
   964  000888  0BF0               	andlw	240
   965  00088A  1215               	iorwf	_lcd,f,c
   966                           
   967                           ;lcd4a.c: 97: manda(lcd);
   968  00088C  5015               	movf	_lcd,w,c
   969  00088E  EC83  F004         	call	_manda
   970                           
   971                           ;lcd4a.c: 98: lcd_lat();
   972  000892  ECD1  F004         	call	_lcd_lat	;wreg free
   973  000896  0012               	return		;funcret
   974  000898                     __end_of_lcd_dwr:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           indf2	equ	0xFDF
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _lcd_init *****************
   988 ;; Defined at:
   989 ;;		line 135 in file "../MyLibs/lcd4a.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1003 ;;      Params:         0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0
  1005 ;;      Temps:          1       0       0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		_lcd_cmd
  1012 ;;		_lcd_cmd_hf
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text7
  1019  00063E                     __ptext7:
  1020                           	opt stack 0
  1021  00063E                     _lcd_init:
  1022                           	opt stack 28
  1023                           
  1024                           ;lcd4a.c: 143: (*(&(*(&PORTB + 0x12))) &=~ (1<<(7)));
  1025                           
  1026                           ;incstack = 0
  1027  00063E  9E93               	bcf	3987,7,c	;volatile
  1028                           
  1029                           ;lcd4a.c: 144: (*(&(*(&PORTB + 0x12))) &=~ (1<<(6)));
  1030  000640  9C93               	bcf	3987,6,c	;volatile
  1031                           
  1032                           ;lcd4a.c: 145: (*(&(*(&PORTB + 0x12))) &=~ (1<<(5)));
  1033  000642  9A93               	bcf	3987,5,c	;volatile
  1034                           
  1035                           ;lcd4a.c: 146: (*(&(*(&PORTB + 0x12))) &=~ (1<<(4)));
  1036  000644  9893               	bcf	3987,4,c	;volatile
  1037                           
  1038                           ;lcd4a.c: 147: (*(&(*(&PORTD + 0x12))) &=~ (1<<(5)));
  1039  000646  9A95               	bcf	3989,5,c	;volatile
  1040                           
  1041                           ;lcd4a.c: 149: (*(&(*(&PORTD + 0x12))) &=~ (1<<(6)));
  1042  000648  9C95               	bcf	3989,6,c	;volatile
  1043                           
  1044                           ;lcd4a.c: 152: (*(&(*(&PORTD + 0x12))) &=~ (1<<(7)));
  1045  00064A  9E95               	bcf	3989,7,c	;volatile
  1046                           
  1047                           ;lcd4a.c: 155: (*(&(*(&PORTD + 0x09))) &=~ (1<<(6)));
  1048  00064C  9C8C               	bcf	3980,6,c	;volatile
  1049                           
  1050                           ;lcd4a.c: 158: lcd_cmd_hf(0x30);
  1051  00064E  0E30               	movlw	48
  1052  000650  ECAE  F004         	call	_lcd_cmd_hf
  1053                           
  1054                           ;lcd4a.c: 159: _delay((unsigned long)((15)*(16000000/4000.0)));
  1055  000654  0E4E               	movlw	78
  1056  000656  6E04               	movwf	??_lcd_init& (0+255),c
  1057  000658  0EEB               	movlw	235
  1058  00065A                     u167:
  1059  00065A  2EE8               	decfsz	wreg,f,c
  1060  00065C  D7FE               	bra	u167
  1061  00065E  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1062  000660  D7FC               	bra	u167
  1063  000662  F000               	nop	
  1064                           
  1065                           ;lcd4a.c: 160: lcd_cmd_hf(0x30);
  1066  000664  0E30               	movlw	48
  1067  000666  ECAE  F004         	call	_lcd_cmd_hf
  1068                           
  1069                           ;lcd4a.c: 161: _delay((unsigned long)((3)*(16000000/4000.0)));
  1070  00066A  0E10               	movlw	16
  1071  00066C  6E04               	movwf	??_lcd_init& (0+255),c
  1072  00066E  0E94               	movlw	148
  1073  000670                     u177:
  1074  000670  2EE8               	decfsz	wreg,f,c
  1075  000672  D7FE               	bra	u177
  1076  000674  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1077  000676  D7FC               	bra	u177
  1078  000678  D000               	nop2	
  1079                           
  1080                           ;lcd4a.c: 162: lcd_cmd_hf(0x30);
  1081  00067A  0E30               	movlw	48
  1082  00067C  ECAE  F004         	call	_lcd_cmd_hf
  1083                           
  1084                           ;lcd4a.c: 163: _delay((unsigned long)((15)*(16000000/4000.0)));
  1085  000680  0E4E               	movlw	78
  1086  000682  6E04               	movwf	??_lcd_init& (0+255),c
  1087  000684  0EEB               	movlw	235
  1088  000686                     u187:
  1089  000686  2EE8               	decfsz	wreg,f,c
  1090  000688  D7FE               	bra	u187
  1091  00068A  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1092  00068C  D7FC               	bra	u187
  1093  00068E  F000               	nop	
  1094                           
  1095                           ;lcd4a.c: 164: lcd_cmd_hf(0x20);
  1096  000690  0E20               	movlw	32
  1097  000692  ECAE  F004         	call	_lcd_cmd_hf
  1098                           
  1099                           ;lcd4a.c: 165: _delay((unsigned long)((6)*(16000000/4000.0)));
  1100  000696  0E20               	movlw	32
  1101  000698  6E04               	movwf	??_lcd_init& (0+255),c
  1102  00069A  0E2A               	movlw	42
  1103  00069C                     u197:
  1104  00069C  2EE8               	decfsz	wreg,f,c
  1105  00069E  D7FE               	bra	u197
  1106  0006A0  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1107  0006A2  D7FC               	bra	u197
  1108                           
  1109                           ;lcd4a.c: 166: lcd_cmd(0x28);
  1110  0006A4  0E28               	movlw	40
  1111  0006A6  EC04  F004         	call	_lcd_cmd
  1112                           
  1113                           ;lcd4a.c: 167: _delay((unsigned long)((6)*(16000000/4000.0)));
  1114  0006AA  0E20               	movlw	32
  1115  0006AC  6E04               	movwf	??_lcd_init& (0+255),c
  1116  0006AE  0E2A               	movlw	42
  1117  0006B0                     u207:
  1118  0006B0  2EE8               	decfsz	wreg,f,c
  1119  0006B2  D7FE               	bra	u207
  1120  0006B4  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1121  0006B6  D7FC               	bra	u207
  1122                           
  1123                           ;lcd4a.c: 168: lcd_cmd(0x0E);
  1124  0006B8  0E0E               	movlw	14
  1125  0006BA  EC04  F004         	call	_lcd_cmd
  1126                           
  1127                           ;lcd4a.c: 169: _delay((unsigned long)((6)*(16000000/4000.0)));
  1128  0006BE  0E20               	movlw	32
  1129  0006C0  6E04               	movwf	??_lcd_init& (0+255),c
  1130  0006C2  0E2A               	movlw	42
  1131  0006C4                     u217:
  1132  0006C4  2EE8               	decfsz	wreg,f,c
  1133  0006C6  D7FE               	bra	u217
  1134  0006C8  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1135  0006CA  D7FC               	bra	u217
  1136                           
  1137                           ;lcd4a.c: 170: lcd_cmd(0x01);
  1138  0006CC  0E01               	movlw	1
  1139  0006CE  EC04  F004         	call	_lcd_cmd
  1140                           
  1141                           ;lcd4a.c: 171: _delay((unsigned long)((6)*(16000000/4000.0)));
  1142  0006D2  0E20               	movlw	32
  1143  0006D4  6E04               	movwf	??_lcd_init& (0+255),c
  1144  0006D6  0E2A               	movlw	42
  1145  0006D8                     u227:
  1146  0006D8  2EE8               	decfsz	wreg,f,c
  1147  0006DA  D7FE               	bra	u227
  1148  0006DC  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1149  0006DE  D7FC               	bra	u227
  1150                           
  1151                           ;lcd4a.c: 172: lcd_cmd(0x06);
  1152  0006E0  0E06               	movlw	6
  1153  0006E2  EC04  F004         	call	_lcd_cmd
  1154                           
  1155                           ;lcd4a.c: 173: _delay((unsigned long)((6)*(16000000/4000.0)));
  1156  0006E6  0E20               	movlw	32
  1157  0006E8  6E04               	movwf	??_lcd_init& (0+255),c
  1158  0006EA  0E2A               	movlw	42
  1159  0006EC                     u237:
  1160  0006EC  2EE8               	decfsz	wreg,f,c
  1161  0006EE  D7FE               	bra	u237
  1162  0006F0  2E04               	decfsz	??_lcd_init& (0+255),f,c
  1163  0006F2  D7FC               	bra	u237
  1164                           
  1165                           ;lcd4a.c: 174: lcd_cmd(0x80);
  1166  0006F4  0E80               	movlw	128
  1167  0006F6  EC04  F004         	call	_lcd_cmd
  1168  0006FA  0012               	return		;funcret
  1169  0006FC                     __end_of_lcd_init:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           indf2	equ	0xFDF
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _lcd_cmd_hf *****************
  1183 ;; Defined at:
  1184 ;;		line 56 in file "../MyLibs/lcd4a.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  x               1    wreg     unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  x               1    1[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:         1       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         1       0       0       0       0       0       0
  1202 ;;Total ram usage:        1 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    1
  1205 ;; This function calls:
  1206 ;;		_lcd_lat
  1207 ;;		_manda
  1208 ;; This function is called by:
  1209 ;;		_lcd_init
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text8
  1214  00095C                     __ptext8:
  1215                           	opt stack 0
  1216  00095C                     _lcd_cmd_hf:
  1217                           	opt stack 28
  1218                           
  1219                           ;incstack = 0
  1220                           ;lcd_cmd_hf@x stored from wreg
  1221  00095C  6E02               	movwf	lcd_cmd_hf@x,c
  1222                           
  1223                           ;lcd4a.c: 58: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1224  00095E  9A8C               	bcf	3980,5,c	;volatile
  1225                           
  1226                           ;lcd4a.c: 59: lcd &= 0x0F;
  1227  000960  0E0F               	movlw	15
  1228  000962  1615               	andwf	_lcd,f,c
  1229                           
  1230                           ;lcd4a.c: 60: lcd |= (x & 0xF0);
  1231  000964  5002               	movf	lcd_cmd_hf@x,w,c
  1232  000966  0BF0               	andlw	240
  1233  000968  1215               	iorwf	_lcd,f,c
  1234                           
  1235                           ;lcd4a.c: 61: manda(lcd);
  1236  00096A  5015               	movf	_lcd,w,c
  1237  00096C  EC83  F004         	call	_manda
  1238                           
  1239                           ;lcd4a.c: 62: lcd_lat();
  1240  000970  ECD1  F004         	call	_lcd_lat	;wreg free
  1241  000974  0012               	return		;funcret
  1242  000976                     __end_of_lcd_cmd_hf:
  1243                           	opt stack 0
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           indf2	equ	0xFDF
  1251                           fsr2h	equ	0xFDA
  1252                           fsr2l	equ	0xFD9
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _lcd_gotoxy *****************
  1256 ;; Defined at:
  1257 ;;		line 114 in file "../MyLibs/lcd4a.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  x               1    wreg     unsigned char 
  1260 ;;  y               1    3[COMRAM] unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  x               1    5[COMRAM] unsigned char 
  1263 ;;  ADDRESS         1    6[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         1       0       0       0       0       0       0
  1274 ;;      Locals:         2       0       0       0       0       0       0
  1275 ;;      Temps:          1       0       0       0       0       0       0
  1276 ;;      Totals:         4       0       0       0       0       0       0
  1277 ;;Total ram usage:        4 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    2
  1280 ;; This function calls:
  1281 ;;		_lcd_cmd
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text9
  1288  0008D2                     __ptext9:
  1289                           	opt stack 0
  1290  0008D2                     _lcd_gotoxy:
  1291                           	opt stack 28
  1292                           
  1293                           ;incstack = 0
  1294                           ;lcd_gotoxy@x stored from wreg
  1295  0008D2  6E06               	movwf	lcd_gotoxy@x,c
  1296                           
  1297                           ;lcd4a.c: 116: unsigned char ADDRESS= 0x00U;
  1298  0008D4  0E00               	movlw	0
  1299  0008D6  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1300                           
  1301                           ;lcd4a.c: 118: switch(y)
  1302  0008D8  D005               	goto	l104
  1303  0008DA                     
  1304                           ;lcd4a.c: 124: ADDRESS = 0xC0;
  1305  0008DA  0EC0               	movlw	192
  1306  0008DC  D001               	goto	L2
  1307  0008DE                     
  1308                           ;lcd4a.c: 127: ADDRESS = 0x80;
  1309  0008DE  0E80               	movlw	128
  1310  0008E0                     L2:
  1311  0008E0  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1312                           
  1313                           ;lcd4a.c: 130: }
  1314                           
  1315                           ;lcd4a.c: 128: break;
  1316  0008E2  D008               	goto	l106
  1317  0008E4                     l104:
  1318  0008E4  5004               	movf	lcd_gotoxy@y,w,c
  1319                           
  1320                           ; Switch size 1, requested type "space"
  1321                           ; Number of cases is 2, Range of values is 1 to 2
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            7     4 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326  0008E6  0A01               	xorlw	1	; case 1
  1327  0008E8  B4D8               	btfsc	status,2,c
  1328  0008EA  D7F9               	goto	l108
  1329  0008EC  0A03               	xorlw	3	; case 2
  1330  0008EE  B4D8               	btfsc	status,2,c
  1331  0008F0  D7F4               	goto	l107
  1332  0008F2  D7F5               	goto	l108
  1333  0008F4                     l106:
  1334                           
  1335                           ;lcd4a.c: 131: ADDRESS = (unsigned char)((unsigned char)(ADDRESS + x) - (1U));
  1336  0008F4  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1337  0008F6  2406               	addwf	lcd_gotoxy@x,w,c
  1338  0008F8  6E05               	movwf	??_lcd_gotoxy& (0+255),c
  1339  0008FA  0405               	decf	??_lcd_gotoxy,w,c
  1340  0008FC  6E07               	movwf	lcd_gotoxy@ADDRESS,c
  1341                           
  1342                           ;lcd4a.c: 132: lcd_cmd(ADDRESS);
  1343  0008FE  5007               	movf	lcd_gotoxy@ADDRESS,w,c
  1344  000900  EC04  F004         	call	_lcd_cmd
  1345  000904  0012               	return		;funcret
  1346  000906                     __end_of_lcd_gotoxy:
  1347                           	opt stack 0
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           indf2	equ	0xFDF
  1355                           fsr2h	equ	0xFDA
  1356                           fsr2l	equ	0xFD9
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _lcd_cmd *****************
  1360 ;; Defined at:
  1361 ;;		line 40 in file "../MyLibs/lcd4a.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  x               1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  x               1    2[COMRAM] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1375 ;;      Params:         0       0       0       0       0       0       0
  1376 ;;      Locals:         1       0       0       0       0       0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0
  1378 ;;      Totals:         2       0       0       0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    1
  1382 ;; This function calls:
  1383 ;;		_lcd_lat
  1384 ;;		_manda
  1385 ;; This function is called by:
  1386 ;;		_lcd_putc
  1387 ;;		_lcd_gotoxy
  1388 ;;		_lcd_init
  1389 ;;		_lcd_setcursor_vb
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text10
  1394  000808                     __ptext10:
  1395                           	opt stack 0
  1396  000808                     _lcd_cmd:
  1397                           	opt stack 28
  1398                           
  1399                           ;incstack = 0
  1400                           ;lcd_cmd@x stored from wreg
  1401  000808  6E03               	movwf	lcd_cmd@x,c
  1402                           
  1403                           ;lcd4a.c: 42: lcd = 0;
  1404  00080A  0E00               	movlw	0
  1405  00080C  6E15               	movwf	_lcd,c
  1406                           
  1407                           ;lcd4a.c: 43: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1408  00080E  9A8C               	bcf	3980,5,c	;volatile
  1409                           
  1410                           ;lcd4a.c: 44: lcd &= 0x0F;
  1411  000810  0E0F               	movlw	15
  1412  000812  1615               	andwf	_lcd,f,c
  1413                           
  1414                           ;lcd4a.c: 45: lcd |= (x & 0xF0);
  1415  000814  5003               	movf	lcd_cmd@x,w,c
  1416  000816  0BF0               	andlw	240
  1417  000818  1215               	iorwf	_lcd,f,c
  1418                           
  1419                           ;lcd4a.c: 46: manda(lcd);
  1420  00081A  5015               	movf	_lcd,w,c
  1421  00081C  EC83  F004         	call	_manda
  1422                           
  1423                           ;lcd4a.c: 47: lcd_lat();
  1424  000820  ECD1  F004         	call	_lcd_lat	;wreg free
  1425                           
  1426                           ;lcd4a.c: 48: _delay((unsigned long)((4)*(16000000/4000.0)));
  1427  000824  0E15               	movlw	21
  1428  000826  6E02               	movwf	??_lcd_cmd& (0+255),c
  1429  000828  0EC6               	movlw	198
  1430  00082A                     u247:
  1431  00082A  2EE8               	decfsz	wreg,f,c
  1432  00082C  D7FE               	bra	u247
  1433  00082E  2E02               	decfsz	??_lcd_cmd& (0+255),f,c
  1434  000830  D7FC               	bra	u247
  1435  000832  D000               	nop2	
  1436                           
  1437                           ;lcd4a.c: 50: lcd &= 0x0F;
  1438  000834  0E0F               	movlw	15
  1439  000836  1615               	andwf	_lcd,f,c
  1440                           
  1441                           ;lcd4a.c: 51: lcd |= ((x & 0x0F)<<4);
  1442  000838  C003  F002         	movff	lcd_cmd@x,??_lcd_cmd
  1443  00083C  0E0F               	movlw	15
  1444  00083E  1602               	andwf	??_lcd_cmd,f,c
  1445  000840  3802               	swapf	??_lcd_cmd,w,c
  1446  000842  0BF0               	andlw	240
  1447  000844  1215               	iorwf	_lcd,f,c
  1448                           
  1449                           ;lcd4a.c: 52: manda(lcd);
  1450  000846  5015               	movf	_lcd,w,c
  1451  000848  EC83  F004         	call	_manda
  1452                           
  1453                           ;lcd4a.c: 53: lcd_lat();
  1454  00084C  ECD1  F004         	call	_lcd_lat	;wreg free
  1455  000850  0012               	return		;funcret
  1456  000852                     __end_of_lcd_cmd:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           indf2	equ	0xFDF
  1465                           fsr2h	equ	0xFDA
  1466                           fsr2l	equ	0xFD9
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _manda *****************
  1470 ;; Defined at:
  1471 ;;		line 178 in file "../MyLibs/lcd4a.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  dato            1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  dato            1    0[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       0       0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_lcd_cmd
  1495 ;;		_lcd_cmd_hf
  1496 ;;		_lcd_dwr
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text11
  1501  000906                     __ptext11:
  1502                           	opt stack 0
  1503  000906                     _manda:
  1504                           	opt stack 28
  1505                           
  1506                           ;incstack = 0
  1507                           ;manda@dato stored from wreg
  1508  000906  6E01               	movwf	manda@dato,c
  1509                           
  1510                           ;lcd4a.c: 180: if(dato & (1 << 4)) (*(&(*(&PORTB + 0x09))) |= (1<<(4)));
  1511  000908  A801               	btfss	manda@dato,4,c
  1512  00090A  D002               	goto	l115
  1513  00090C  888A               	bsf	3978,4,c	;volatile
  1514  00090E  D001               	goto	l116
  1515  000910                     l115:
  1516                           
  1517                           ;lcd4a.c: 181: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(4)));
  1518  000910  988A               	bcf	3978,4,c	;volatile
  1519  000912                     l116:
  1520                           
  1521                           ;lcd4a.c: 182: if(dato & (1 << 5)) (*(&(*(&PORTB + 0x09))) |= (1<<(5)));
  1522  000912  AA01               	btfss	manda@dato,5,c
  1523  000914  D002               	goto	l117
  1524  000916  8A8A               	bsf	3978,5,c	;volatile
  1525  000918  D001               	goto	l118
  1526  00091A                     l117:
  1527                           
  1528                           ;lcd4a.c: 183: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(5)));
  1529  00091A  9A8A               	bcf	3978,5,c	;volatile
  1530  00091C                     l118:
  1531                           
  1532                           ;lcd4a.c: 184: if(dato & (1 << 6)) (*(&(*(&PORTB + 0x09))) |= (1<<(6)));
  1533  00091C  AC01               	btfss	manda@dato,6,c
  1534  00091E  D002               	goto	l119
  1535  000920  8C8A               	bsf	3978,6,c	;volatile
  1536  000922  D001               	goto	l120
  1537  000924                     l119:
  1538                           
  1539                           ;lcd4a.c: 185: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(6)));
  1540  000924  9C8A               	bcf	3978,6,c	;volatile
  1541  000926                     l120:
  1542                           
  1543                           ;lcd4a.c: 186: if(dato & (1 << 7)) (*(&(*(&PORTB + 0x09))) |= (1<<(7)));
  1544  000926  AE01               	btfss	manda@dato,7,c
  1545  000928  D002               	goto	l121
  1546  00092A  8E8A               	bsf	3978,7,c	;volatile
  1547  00092C  0012               	return	
  1548  00092E                     l121:
  1549                           
  1550                           ;lcd4a.c: 187: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(7)));
  1551  00092E  9E8A               	bcf	3978,7,c	;volatile
  1552  000930  0012               	return	
  1553  000932                     __end_of_manda:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           indf2	equ	0xFDF
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _lcd_lat *****************
  1567 ;; Defined at:
  1568 ;;		line 29 in file "../MyLibs/lcd4a.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0
  1584 ;;      Temps:          1       0       0       0       0       0       0
  1585 ;;      Totals:         1       0       0       0       0       0       0
  1586 ;;Total ram usage:        1 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_lcd_cmd
  1592 ;;		_lcd_cmd_hf
  1593 ;;		_lcd_dwr
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text12
  1598  0009A2                     __ptext12:
  1599                           	opt stack 0
  1600  0009A2                     _lcd_lat:
  1601                           	opt stack 28
  1602                           
  1603                           ;lcd4a.c: 33: (*(&(*(&PORTD + 0x09))) |= (1<<(7)));
  1604                           
  1605                           ;incstack = 0
  1606  0009A2  8E8C               	bsf	3980,7,c	;volatile
  1607                           
  1608                           ;lcd4a.c: 35: _delay((unsigned long)((3)*(16000000/4000.0)));
  1609  0009A4  0E10               	movlw	16
  1610  0009A6  6E01               	movwf	??_lcd_lat& (0+255),c
  1611  0009A8  0E94               	movlw	148
  1612  0009AA                     u257:
  1613  0009AA  2EE8               	decfsz	wreg,f,c
  1614  0009AC  D7FE               	bra	u257
  1615  0009AE  2E01               	decfsz	??_lcd_lat& (0+255),f,c
  1616  0009B0  D7FC               	bra	u257
  1617  0009B2  D000               	nop2	
  1618                           
  1619                           ;lcd4a.c: 36: (*(&(*(&PORTD + 0x09))) &=~ (1<<(7)));
  1620  0009B4  9E8C               	bcf	3980,7,c	;volatile
  1621  0009B6  0012               	return		;funcret
  1622  0009B8                     __end_of_lcd_lat:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           indf2	equ	0xFDF
  1631                           fsr2h	equ	0xFDA
  1632                           fsr2l	equ	0xFD9
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _getch *****************
  1636 ;; Defined at:
  1637 ;;		line 85 in file "usart_5.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      unsigned char 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1651 ;;      Params:         0       0       0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		_getche
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text13
  1666  0009C4                     __ptext13:
  1667                           	opt stack 0
  1668  0009C4                     _getch:
  1669                           	opt stack 30
  1670                           
  1671                           ;usart_5.c: 88: continue;
  1672                           
  1673                           ;usart_5.c: 87: while(!PIR1bits.RCIF)
  1674                           
  1675                           ;incstack = 0
  1676  0009C4  AA9E               	btfss	3998,5,c	;volatile
  1677  0009C6  D7FE               	goto	_getch
  1678                           
  1679                           ;usart_5.c: 89: return RCREG;
  1680  0009C8  50AE               	movf	4014,w,c	;volatile
  1681  0009CA  0012               	return	
  1682  0009CC                     __end_of_getch:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           indf2	equ	0xFDF
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705                           	psect	rparam
  1706  0000                     tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           indf2	equ	0xFDF
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8


Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      21
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[13]), STR_3(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _lcd_msg->_lcd_putc
    _lcd_putc->_lcd_cmd
    _lcd_putc->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_manda
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd_hf->_manda
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_manda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1619
                                              9 COMRAM     3     3      0
                              _getch
                         _lcd_gotoxy
                           _lcd_init
                            _lcd_msg
                           _lcd_putc
                             _printf
                           _sci_conf
 ---------------------------------------------------------------------------------
 (1) _sci_conf                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     305
                                              1 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     483
                                              4 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0     210
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      75
                                              1 COMRAM     1     1      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     411
                                              3 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (3) _manda                                                1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getch
   _lcd_gotoxy
     _lcd_cmd
       _lcd_lat
       _manda
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_cmd_hf
       _lcd_lat
       _manda
   _lcd_msg
     _lcd_putc
       _lcd_cmd
         _lcd_lat
         _manda
       _lcd_dwr
         _lcd_lat
         _manda
   _lcd_putc
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_dwr
       _lcd_lat
       _manda
   _printf
     _putch
   _sci_conf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      15       1       16.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      15        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 20 04:55:45 2018

            lcd_cmd_hf@x 0002                       l41 0736                       l90 08AC  
                     l91 08B4                       l86 08BC                       l87 089C  
                     l89 08A4                       l98 0948                       l99 0934  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l120 0926                      l104 08E4                      l121 092E  
                    l106 08F4                      l115 0910                      l107 08DA  
                    l116 0912                      l108 08DE                      l117 091A  
                    l141 079A                      l118 091C                      l142 07AA  
                    l119 0924                      l143 07CC                      l146 07B0  
                    l147 07C4                      l148 07EE                      l854 09BA  
           __CFG_CPB$OFF 000000                      u207 06B0                      u217 06C4  
                    u227 06D8                      u147 0780                      u237 06EC  
                    u157 0870                      u247 082A                      u167 065A  
                    u257 09AA                      u177 0670             __CFG_CPD$OFF 000000  
                    u187 0686                      u197 069C                      _lcd 0015  
                    wreg 000FE8              lcd_gotoxy@x 0006              lcd_gotoxy@y 0004  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 0616  
                   STR_2 0637                     STR_3 0601                     STR_4 0624  
                   STR_5 0631             __CFG_PWRT$ON 000000                     _main 06FC  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81                    _PORTD 000F83  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000          __end_of_lcd_cmd 0852          __end_of_lcd_lat 09B8  
        __end_of_lcd_dwr 0898          __end_of_lcd_msg 095C            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _getch 09C4                    _manda 0906                    _value 000D  
                  _putch 09B8                    main@c 000C           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 0976  
           __end_of_main 0790                   ??_main 000A            __activetblptr 000002  
                 ?_getch 0001                   ?_manda 0001                   ?_putch 0001  
         __CFG_XINST$OFF 000000         __end_of_lcd_init 06FC         __end_of_lcd_putc 08D2  
         __CFG_STVREN$ON 000000                   clear_0 097C                   _printf 0790  
       __end_of_sci_conf 09A2                ??_lcd_cmd 0002                ??_lcd_lat 0001  
              ??_lcd_dwr 0002                ??_lcd_msg 0007             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      lcd_gotoxy@ADDRESS 0007               __accesstop 0080  __end_of__initialization 0982  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_getch 09CC            __end_of_manda 0932            __end_of_putch 09C4  
                ??_getch 0001                  ??_manda 0001                  ??_putch 0001  
     __CFG_CCP2MX$PORTBE 000000                  ?_printf 0002               _lcd_cmd_hf 095C  
             _lcd_gotoxy 08D2                ?_lcd_init 0001                ?_lcd_putc 0001  
              ?_sci_conf 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0976                  __ramtop 0600  
                __ptext0 06FC                  __ptext1 098C                  __ptext2 0790  
                __ptext3 09B8                  __ptext4 0932                  __ptext5 0898  
                __ptext6 0852                  __ptext7 063E                  __ptext8 095C  
                __ptext9 08D2                  _lcd_cmd 0808                  _lcd_lat 09A2  
        __size_of_printf 0078                  _lcd_dwr 0852                  _lcd_msg 0932  
             ??_lcd_init 0004               ??_lcd_putc 0004     end_of_initialization 0982  
          __Lmediumconst 0000               ??_sci_conf 0001                _RCSTAbits 000FAB  
                printf@c 0009                  printf@f 0002                  postinc0 000FEE  
            ?_lcd_cmd_hf 0001                _TRISCbits 000F94              ?_lcd_gotoxy 0004  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8           __end_of_printf 0808  
    start_initialization 0976      __size_of_lcd_cmd_hf 001A      __size_of_lcd_gotoxy 0034  
       __CFG_LPT1OSC$OFF 000000                 ??_printf 0006              __pbssCOMRAM 000D  
      __size_of_lcd_init 00BE        __size_of_lcd_putc 003A        __size_of_sci_conf 0016  
               ?_lcd_cmd 0001                 ?_lcd_lat 0001                 ?_lcd_dwr 0001  
               ?_lcd_msg 0005              __smallconst 0600           __size_of_getch 0008  
         __size_of_manda 002C           __size_of_putch 000C                 _LATCbits 000F8B  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               printf@flag 0006  
           ??_lcd_cmd_hf 0002                lcd_putc@c 0004             ??_lcd_gotoxy 0005  
              manda@dato 0001                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_lcd_cmd_hf 0976       __end_of_lcd_gotoxy 0906         __size_of_lcd_cmd 004A  
       __size_of_lcd_lat 0016         __size_of_lcd_dwr 0046         __size_of_lcd_msg 002A  
               __ptext10 0808                 __ptext11 0906                 __ptext12 09A2  
               __ptext13 09C4                 _lcd_init 063E                 _lcd_putc 0898  
          __size_of_main 0094                 _sci_conf 098C                 lcd_cmd@x 0003  
               lcd_dwr@x 0003                 lcd_msg@c 0005                putch@dato 0001  
               printf@ap 0007  
