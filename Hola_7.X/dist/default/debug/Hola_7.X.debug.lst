

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 15 18:35:06 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 1.44
    13                           ; Generated 14/09/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _PORTDbits	set	3971
    47  0000                     _PORTCbits	set	3970
    48  0000                     _TRISDbits	set	3989
    49                           
    50                           ; #config settings
    51  0000                     
    52                           	psect	cinit
    53  007F78                     __pcinit:
    54                           	opt stack 0
    55  007F78                     start_initialization:
    56                           	opt stack 0
    57  007F78                     __initialization:
    58                           	opt stack 0
    59  007F78                     end_of_initialization:
    60                           	opt stack 0
    61  007F78                     __end_of__initialization:
    62                           	opt stack 0
    63  007F78  0E00               	movlw	low (__Lmediumconst shr (0+16))
    64  007F7A  6EF8               	movwf	tblptru,c
    65  007F7C  0100               	movlb	0
    66  007F7E  EFC1  F03F         	goto	_main	;jump to C main() function
    67                           tblptru	equ	0xFF8
    68                           
    69                           	psect	cstackCOMRAM
    70  000001                     __pcstackCOMRAM:
    71                           	opt stack 0
    72  000001                     display@valor:
    73                           	opt stack 0
    74                           
    75                           ; 1 bytes @ 0x0
    76  000001                     	ds	1
    77  000002                     display@out:
    78                           	opt stack 0
    79                           
    80                           ; 1 bytes @ 0x1
    81  000002                     	ds	1
    82  000003                     ??_main:
    83                           
    84                           ; 1 bytes @ 0x2
    85  000003                     	ds	1
    86  000004                     main@cont:
    87                           	opt stack 0
    88                           
    89                           ; 1 bytes @ 0x3
    90  000004                     	ds	1
    91                           tblptru	equ	0xFF8
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 43 in file "Hola_7.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;  cont            1    3[COMRAM] unsigned char 
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   112 ;;      Params:         0       0       0       0       0       0       0       0       0
   113 ;;      Locals:         1       0       0       0       0       0       0       0       0
   114 ;;      Temps:          1       0       0       0       0       0       0       0       0
   115 ;;      Totals:         2       0       0       0       0       0       0       0       0
   116 ;;Total ram usage:        2 bytes
   117 ;; Hardware stack levels required when called:    1
   118 ;; This function calls:
   119 ;;		_display
   120 ;; This function is called by:
   121 ;;		Startup code after reset
   122 ;; This function uses a non-reentrant model
   123 ;;
   124                           
   125                           	psect	text0
   126  007F82                     __ptext0:
   127                           	opt stack 0
   128  007F82                     _main:
   129                           	opt stack 30
   130                           
   131                           ;Hola_7.c: 46: unsigned char cont = 0;
   132                           
   133                           ;incstack = 0
   134  007F82  0E00               	movlw	0
   135  007F84  6E04               	movwf	main@cont,c
   136                           
   137                           ;Hola_7.c: 48: TRISDbits.RD0 = 0;
   138  007F86  9095               	bcf	3989,0,c	;volatile
   139                           
   140                           ;Hola_7.c: 49: TRISDbits.RD1 = 0;
   141  007F88  9295               	bcf	3989,1,c	;volatile
   142                           
   143                           ;Hola_7.c: 50: PORTCbits.RC0 = 1;
   144  007F8A  8082               	bsf	3970,0,c	;volatile
   145  007F8C                     
   146                           ;Hola_7.c: 53: {
   147                           ;Hola_7.c: 54: if(!PORTCbits.RC0)
   148  007F8C  B082               	btfsc	3970,0,c	;volatile
   149  007F8E  D011               	goto	l19
   150                           
   151                           ;Hola_7.c: 55: {
   152                           ;Hola_7.c: 56: _delay((unsigned long)((10)*(20000000/4000.0)));
   153  007F90  0E41               	movlw	65
   154  007F92  6E03               	movwf	??_main& (0+255),c
   155  007F94  0EEE               	movlw	238
   156  007F96                     u67:
   157  007F96  2EE8               	decfsz	wreg,f,c
   158  007F98  D7FE               	bra	u67
   159  007F9A  2E03               	decfsz	??_main& (0+255),f,c
   160  007F9C  D7FC               	bra	u67
   161  007F9E  D000               	nop2	
   162                           
   163                           ;Hola_7.c: 57: if(!PORTCbits.RC0)
   164  007FA0  B082               	btfsc	3970,0,c	;volatile
   165  007FA2  D007               	goto	l19
   166                           
   167                           ;Hola_7.c: 58: {
   168                           ;Hola_7.c: 59: if(cont < 4)
   169  007FA4  0E04               	movlw	4
   170  007FA6  6004               	cpfslt	main@cont,c
   171  007FA8  D003               	goto	l18
   172                           
   173                           ;Hola_7.c: 60: {
   174                           ;Hola_7.c: 61: cont = 0;
   175  007FAA  0E00               	movlw	0
   176  007FAC  6E04               	movwf	main@cont,c
   177                           
   178                           ;Hola_7.c: 62: }
   179  007FAE  D001               	goto	l19
   180  007FB0                     l18:
   181                           
   182                           ;Hola_7.c: 63: else
   183                           ;Hola_7.c: 64: {
   184                           ;Hola_7.c: 65: cont++;
   185  007FB0  2A04               	incf	main@cont,f,c
   186  007FB2                     l19:
   187                           
   188                           ;Hola_7.c: 66: }
   189                           ;Hola_7.c: 68: }
   190                           ;Hola_7.c: 69: }
   191                           ;Hola_7.c: 70: display(cont);
   192  007FB2  5004               	movf	main@cont,w,c
   193  007FB4  ECDD  F03F         	call	_display
   194  007FB8  D7E9               	goto	l15
   195  007FBA                     __end_of_main:
   196                           	opt stack 0
   197                           tblptru	equ	0xFF8
   198                           wreg	equ	0xFE8
   199                           
   200 ;; *************** function _display *****************
   201 ;; Defined at:
   202 ;;		line 75 in file "Hola_7.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;  valor           1    wreg     unsigned char 
   205 ;; Auto vars:     Size  Location     Type
   206 ;;  valor           1    0[COMRAM] unsigned char 
   207 ;;  out             1    1[COMRAM] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         2       0       0       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0
   220 ;;      Totals:         2       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        2 bytes
   222 ;; Hardware stack levels used:    1
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		_main
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text1
   231  007FBA                     __ptext1:
   232                           	opt stack 0
   233  007FBA                     _display:
   234                           	opt stack 30
   235                           
   236                           ;incstack = 0
   237                           ;display@valor stored from wreg
   238  007FBA  6E01               	movwf	display@valor,c
   239                           
   240                           ;Hola_7.c: 77: unsigned char out;
   241                           ;Hola_7.c: 78: switch (valor)
   242  007FBC  D009               	goto	l25
   243  007FBE                     
   244                           ;Hola_7.c: 81: out = 0x0;
   245  007FBE  0E00               	movlw	0
   246  007FC0  D005               	goto	L3
   247  007FC2                     
   248                           ;Hola_7.c: 84: out = 0x01;
   249  007FC2  0E01               	movlw	1
   250  007FC4  D003               	goto	L3
   251  007FC6                     
   252                           ;Hola_7.c: 87: out = 0x2;
   253  007FC6  0E02               	movlw	2
   254  007FC8  D001               	goto	L3
   255  007FCA                     
   256                           ;Hola_7.c: 90: out = 0x3;
   257  007FCA  0E03               	movlw	3
   258  007FCC                     L3:
   259  007FCC  6E02               	movwf	display@out,c
   260                           
   261                           ;Hola_7.c: 92: }
   262                           
   263                           ;Hola_7.c: 91: break;
   264  007FCE  D00D               	goto	l27
   265  007FD0                     l25:
   266  007FD0  5001               	movf	display@valor,w,c
   267                           
   268                           ; Switch size 1, requested type "space"
   269                           ; Number of cases is 4, Range of values is 0 to 3
   270                           ; switch strategies available:
   271                           ; Name         Instructions Cycles
   272                           ; simple_byte           13     7 (average)
   273                           ;	Chosen strategy is simple_byte
   274  007FD2  0A00               	xorlw	0	; case 0
   275  007FD4  B4D8               	btfsc	status,2,c
   276  007FD6  D7F3               	goto	l26
   277  007FD8  0A01               	xorlw	1	; case 1
   278  007FDA  B4D8               	btfsc	status,2,c
   279  007FDC  D7F2               	goto	l28
   280  007FDE  0A03               	xorlw	3	; case 2
   281  007FE0  B4D8               	btfsc	status,2,c
   282  007FE2  D7F1               	goto	l29
   283  007FE4  0A01               	xorlw	1	; case 3
   284  007FE6  B4D8               	btfsc	status,2,c
   285  007FE8  D7F0               	goto	l30
   286  007FEA                     l27:
   287                           
   288                           ;Hola_7.c: 94: if (out & (1 << 0)) PORTDbits.RD0 = 1;
   289  007FEA  A002               	btfss	display@out,0,c
   290  007FEC  D002               	goto	l31
   291  007FEE  8083               	bsf	3971,0,c	;volatile
   292  007FF0  D001               	goto	l32
   293  007FF2                     l31:
   294                           
   295                           ;Hola_7.c: 95: else PORTDbits.RD0 = 0;
   296  007FF2  9083               	bcf	3971,0,c	;volatile
   297  007FF4                     l32:
   298                           
   299                           ;Hola_7.c: 97: if (out & (1 << 1)) PORTDbits.RD1 = 1;
   300  007FF4  A202               	btfss	display@out,1,c
   301  007FF6  D002               	goto	l33
   302  007FF8  8283               	bsf	3971,1,c	;volatile
   303  007FFA  0012               	return	
   304  007FFC                     l33:
   305                           
   306                           ;Hola_7.c: 98: else PORTDbits.RD1 = 0;
   307  007FFC  9283               	bcf	3971,1,c	;volatile
   308  007FFE  0012               	return	
   309  008000                     __end_of_display:
   310                           	opt stack 0
   311  0000                     tblptru	equ	0xFF8
   312                           wreg	equ	0xFE8
   313                           status	equ	0xFD8
   314                           tblptru	equ	0xFF8
   315                           wreg	equ	0xFE8
   316                           status	equ	0xFD8
   317                           
   318                           	psect	rparam
   319  0000                     tblptru	equ	0xFF8
   320                           wreg	equ	0xFE8
   321                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      75
                                              2 COMRAM     2     2      0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 15 18:35:06 2018

                     l30 7FCA                       l31 7FF2                       l15 7F8C  
                     l32 7FF4                       l33 7FFC                       l25 7FD0  
                     l26 7FBE                       l18 7FB0                       l27 7FEA  
                     l19 7FB2                       l28 7FC2                       l29 7FC6  
                     u67 7F96              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000             __CFG_PWRT$ON 000000                     _main 7F82  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$2 000000                    ?_main 0001  
          __CFG_USBDIV$1 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000          __end_of_display 8000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000             display@valor 0001  
         __CFG_EBTRB$OFF 000000                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7F78             __end_of_main 7FBA                   ??_main 0003  
          __activetblptr 000002          __CFG_CCP2MX$OFF 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??_display 0001                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F78          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F78  
                __ramtop 0800                  __ptext0 7F82                  __ptext1 7FBA  
                _display 7FBA     end_of_initialization 7F78            __Lmediumconst 0000  
              _PORTCbits 000F82                _PORTDbits 000F83                _TRISDbits 000F95  
             display@out 0002      start_initialization 7F78         __CFG_LPT1OSC$OFF 000000  
               ?_display 0001         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000         __size_of_display 0046            __size_of_main 0038  
               main@cont 0004    __CFG_CPUDIV$OSC1_PLL2 000000  
