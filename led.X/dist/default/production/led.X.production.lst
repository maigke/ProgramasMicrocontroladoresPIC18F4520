

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Dec  4 04:47:44 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F2550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PORTCbits	set	3970
    56  0000                     _TRISC	set	3988
    57  0000                     _PORTBbits	set	3969
    58  0000                     _PORTB	set	3969
    59  0000                     _TRISB	set	3987
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  007E34                     __pcinit:
    65                           	opt stack 0
    66  007E34                     start_initialization:
    67                           	opt stack 0
    68  007E34                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (2 bytes)
    72  007E34  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    73  007E36  6A0C               	clrf	__pbssCOMRAM& (0+255),c
    74  007E38                     end_of_initialization:
    75                           	opt stack 0
    76  007E38                     __end_of__initialization:
    77                           	opt stack 0
    78  007E38  0100               	movlb	0
    79  007E3A  EFD0  F03F         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  00000C                     __pbssCOMRAM:
    83                           	opt stack 0
    84  00000C                     _val:
    85                           	opt stack 0
    86  00000C                     	ds	2
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000001                     lcd_busy@loop:
    92                           	opt stack 0
    93                           
    94                           ; 2 bytes @ 0x0
    95  000001                     	ds	2
    96  000003                     lcd_busy@dataval:
    97                           	opt stack 0
    98                           
    99                           ; 1 bytes @ 0x2
   100  000003                     	ds	1
   101  000004                     send_cmd@loop:
   102                           	opt stack 0
   103  000004                     send_data@loop:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x3
   107  000004                     	ds	2
   108  000006                     send_cmd@command:
   109                           	opt stack 0
   110  000006                     send_data@dataval:
   111                           	opt stack 0
   112                           
   113                           ; 1 bytes @ 0x5
   114  000006                     	ds	1
   115  000007                     lcd_emode@options:
   116                           	opt stack 0
   117  000007                     lcd_dmode@options:
   118                           	opt stack 0
   119  000007                     lcd_fmode@options:
   120                           	opt stack 0
   121  000007                     lcd_ddram@address:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x6
   125  000007                     	ds	1
   126  000008                     lcd_init@loop:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x7
   130  000008                     	ds	2
   131  00000A                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x9
   134  00000A                     	ds	1
   135  00000B                     main@valu:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0xA
   139  00000B                     	ds	1
   140                           
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 16 in file "led.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;  valu            1   10[COMRAM] unsigned char 
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   160 ;;      Params:         0       0       0       0       0       0       0       0       0
   161 ;;      Locals:         1       0       0       0       0       0       0       0       0
   162 ;;      Temps:          1       0       0       0       0       0       0       0       0
   163 ;;      Totals:         2       0       0       0       0       0       0       0       0
   164 ;;Total ram usage:        2 bytes
   165 ;; Hardware stack levels required when called:    4
   166 ;; This function calls:
   167 ;;		_lcd_ddram
   168 ;;		_lcd_init
   169 ;;		_send_data
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  007FA0                     __ptext0:
   177                           	opt stack 0
   178  007FA0                     _main:
   179                           	opt stack 27
   180                           
   181                           ;led.c: 19: unsigned char valu;
   182                           ;led.c: 20: TRISB = 0x00;
   183                           
   184                           ;incstack = 0
   185  007FA0  0E00               	movlw	0
   186  007FA2  6E93               	movwf	3987,c	;volatile
   187                           
   188                           ;led.c: 21: PORTB = 0x00;
   189  007FA4  0E00               	movlw	0
   190  007FA6  6E81               	movwf	3969,c	;volatile
   191                           
   192                           ;led.c: 22: lcd_init();
   193  007FA8  EC87  F03F         	call	_lcd_init	;wreg free
   194                           
   195                           ;led.c: 23: valu = 0;
   196  007FAC  0E00               	movlw	0
   197  007FAE  6E0B               	movwf	main@valu,c
   198                           
   199                           ;led.c: 25: while(valu < 16)
   200  007FB0  D005               	goto	l21
   201  007FB2                     
   202                           ;led.c: 26: {
   203                           ;led.c: 27: send_data(valu+'A');
   204  007FB2  500B               	movf	main@valu,w,c
   205  007FB4  0F41               	addlw	65
   206  007FB6  EC69  F03F         	call	_send_data
   207                           
   208                           ;led.c: 28: valu++;
   209  007FBA  2A0B               	incf	main@valu,f,c
   210  007FBC                     l21:
   211  007FBC  0E0F               	movlw	15
   212  007FBE  640B               	cpfsgt	main@valu,c
   213  007FC0  D7F8               	goto	l22
   214                           
   215                           ;led.c: 29: }
   216                           ;led.c: 31: lcd_ddram(0x40);
   217  007FC2  0E40               	movlw	64
   218  007FC4  EC1F  F03F         	call	_lcd_ddram
   219                           
   220                           ;led.c: 33: valu = 0;
   221  007FC8  0E00               	movlw	0
   222  007FCA  6E0B               	movwf	main@valu,c
   223                           
   224                           ;led.c: 35: while(valu < 16)
   225  007FCC  D005               	goto	l24
   226  007FCE                     
   227                           ;led.c: 36: {
   228                           ;led.c: 37: send_data(valu+'a');
   229  007FCE  500B               	movf	main@valu,w,c
   230  007FD0  0F61               	addlw	97
   231  007FD2  EC69  F03F         	call	_send_data
   232                           
   233                           ;led.c: 38: valu++;
   234  007FD6  2A0B               	incf	main@valu,f,c
   235  007FD8                     l24:
   236  007FD8  0E0F               	movlw	15
   237  007FDA  640B               	cpfsgt	main@valu,c
   238  007FDC  D7F8               	goto	l25
   239  007FDE                     u90:
   240                           
   241                           ;led.c: 42: {
   242                           ;led.c: 43: PORTBbits.RB1 = 1;
   243                           
   244                           ;led.c: 39: }
   245                           ;led.c: 41: while(1)
   246  007FDE  8281               	bsf	3969,1,c	;volatile
   247                           
   248                           ;led.c: 44: _delay((unsigned long)((20)*(20000000/4000.0)));
   249  007FE0  0E82               	movlw	130
   250  007FE2  6E0A               	movwf	??_main& (0+255),c
   251  007FE4  0EDE               	movlw	222
   252  007FE6                     u107:
   253  007FE6  2EE8               	decfsz	wreg,f,c
   254  007FE8  D7FE               	bra	u107
   255  007FEA  2E0A               	decfsz	??_main& (0+255),f,c
   256  007FEC  D7FC               	bra	u107
   257                           
   258                           ;led.c: 45: PORTBbits.RB1 = 0;
   259  007FEE  9281               	bcf	3969,1,c	;volatile
   260                           
   261                           ;led.c: 46: _delay((unsigned long)((20)*(20000000/4000.0)));
   262  007FF0  0E82               	movlw	130
   263  007FF2  6E0A               	movwf	??_main& (0+255),c
   264  007FF4  0EDE               	movlw	222
   265  007FF6                     u117:
   266  007FF6  2EE8               	decfsz	wreg,f,c
   267  007FF8  D7FE               	bra	u117
   268  007FFA  2E0A               	decfsz	??_main& (0+255),f,c
   269  007FFC  D7FC               	bra	u117
   270  007FFE  D7EF               	goto	u90
   271  008000                     __end_of_main:
   272                           	opt stack 0
   273                           wreg	equ	0xFE8
   274                           
   275 ;; *************** function _send_data *****************
   276 ;; Defined at:
   277 ;;		line 223 in file "hd44780.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;  dataval         1    wreg     unsigned char 
   280 ;; Auto vars:     Size  Location     Type
   281 ;;  dataval         1    5[COMRAM] unsigned char 
   282 ;;  loop            2    3[COMRAM] int 
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   292 ;;      Params:         0       0       0       0       0       0       0       0       0
   293 ;;      Locals:         3       0       0       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0       0       0
   295 ;;      Totals:         3       0       0       0       0       0       0       0       0
   296 ;;Total ram usage:        3 bytes
   297 ;; Hardware stack levels used:    1
   298 ;; Hardware stack levels required when called:    1
   299 ;; This function calls:
   300 ;;		_lcd_busy
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text1
   307  007ED2                     __ptext1:
   308                           	opt stack 0
   309  007ED2                     _send_data:
   310                           	opt stack 29
   311                           
   312                           ;incstack = 0
   313                           ;send_data@dataval stored from wreg
   314  007ED2  6E06               	movwf	send_data@dataval,c
   315  007ED4                     
   316                           ;hd44780.c: 225: int loop;
   317                           ;hd44780.c: 228: while(lcd_busy() == 1);
   318  007ED4  ECA9  F03F         	call	_lcd_busy	;wreg free
   319  007ED8  06E8               	decf	wreg,f,c
   320  007EDA  B4D8               	btfsc	status,2,c
   321  007EDC  D7FB               	goto	l809
   322                           
   323                           ;hd44780.c: 231: TRISB = 0x00;
   324  007EDE  0E00               	movlw	0
   325  007EE0  6E93               	movwf	3987,c	;volatile
   326                           
   327                           ;hd44780.c: 233: PORTCbits.RC1 = 0;
   328  007EE2  9282               	bcf	3970,1,c	;volatile
   329                           
   330                           ;hd44780.c: 235: PORTCbits.RC2 = 1;
   331  007EE4  8482               	bsf	3970,2,c	;volatile
   332                           
   333                           ;hd44780.c: 237: PORTB = dataval;
   334  007EE6  C006  FF81         	movff	send_data@dataval,3969	;volatile
   335                           
   336                           ;hd44780.c: 239: PORTCbits.RC0 = 1;
   337  007EEA  8082               	bsf	3970,0,c	;volatile
   338                           
   339                           ;hd44780.c: 244: loop = 0;
   340  007EEC  0E00               	movlw	0
   341  007EEE  6E05               	movwf	send_data@loop+1,c
   342  007EF0  0E00               	movlw	0
   343  007EF2  6E04               	movwf	send_data@loop,c
   344                           
   345                           ;hd44780.c: 245: while(loop < 20){
   346  007EF4  D002               	goto	l100
   347  007EF6                     
   348                           ;hd44780.c: 246: loop++;
   349  007EF6  4A04               	infsnz	send_data@loop,f,c
   350  007EF8  2A05               	incf	send_data@loop+1,f,c
   351  007EFA                     l100:
   352  007EFA  BE05               	btfsc	send_data@loop+1,7,c
   353  007EFC  D7FC               	goto	l101
   354  007EFE  5005               	movf	send_data@loop+1,w,c
   355  007F00  E104               	bnz	u70
   356  007F02  0E14               	movlw	20
   357  007F04  5C04               	subwf	send_data@loop,w,c
   358  007F06  A0D8               	btfss	status,0,c
   359  007F08  D7F6               	goto	l101
   360  007F0A                     u70:
   361                           
   362                           ;hd44780.c: 247: }
   363                           ;hd44780.c: 249: PORTCbits.RC0 = 0;
   364  007F0A  9082               	bcf	3970,0,c	;volatile
   365  007F0C  0012               	return		;funcret
   366  007F0E                     __end_of_send_data:
   367                           	opt stack 0
   368                           wreg	equ	0xFE8
   369                           status	equ	0xFD8
   370                           
   371 ;; *************** function _lcd_init *****************
   372 ;; Defined at:
   373 ;;		line 33 in file "hd44780.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  loop            2    7[COMRAM] unsigned int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         0       0       0       0       0       0       0       0       0
   388 ;;      Locals:         2       0       0       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0
   390 ;;      Totals:         2       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        2 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; Hardware stack levels required when called:    3
   394 ;; This function calls:
   395 ;;		_lcd_clear
   396 ;;		_lcd_dmode
   397 ;;		_lcd_emode
   398 ;;		_lcd_fmode
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text2
   405  007F0E                     __ptext2:
   406                           	opt stack 0
   407  007F0E                     _lcd_init:
   408                           	opt stack 27
   409                           
   410                           ;hd44780.c: 36: unsigned int loop;
   411                           ;hd44780.c: 39: TRISB = 0x00;
   412                           
   413                           ;incstack = 0
   414  007F0E  0E00               	movlw	0
   415  007F10  6E93               	movwf	3987,c	;volatile
   416                           
   417                           ;hd44780.c: 41: PORTB = 0x00;
   418  007F12  0E00               	movlw	0
   419  007F14  6E81               	movwf	3969,c	;volatile
   420                           
   421                           ;hd44780.c: 44: TRISC = 0xF0;
   422  007F16  0EF0               	movlw	240
   423  007F18  6E94               	movwf	3988,c	;volatile
   424                           
   425                           ;hd44780.c: 47: PORTCbits.RC0 = 0;
   426  007F1A  9082               	bcf	3970,0,c	;volatile
   427                           
   428                           ;hd44780.c: 48: PORTCbits.RC1 = 0;
   429  007F1C  9282               	bcf	3970,1,c	;volatile
   430                           
   431                           ;hd44780.c: 49: PORTCbits.RC2 = 0;
   432  007F1E  9482               	bcf	3970,2,c	;volatile
   433                           
   434                           ;hd44780.c: 52: loop = 0;
   435  007F20  0E00               	movlw	0
   436  007F22  6E09               	movwf	lcd_init@loop+1,c
   437  007F24  0E00               	movlw	0
   438  007F26  6E08               	movwf	lcd_init@loop,c
   439                           
   440                           ;hd44780.c: 53: while(loop < 9000){
   441  007F28  D002               	goto	l61
   442  007F2A                     
   443                           ;hd44780.c: 54: loop++;
   444  007F2A  4A08               	infsnz	lcd_init@loop,f,c
   445  007F2C  2A09               	incf	lcd_init@loop+1,f,c
   446  007F2E                     l61:
   447  007F2E  0E28               	movlw	40
   448  007F30  5C08               	subwf	lcd_init@loop,w,c
   449  007F32  0E23               	movlw	35
   450  007F34  5809               	subwfb	lcd_init@loop+1,w,c
   451  007F36  A0D8               	btfss	status,0,c
   452  007F38  D7F8               	goto	l62
   453                           
   454                           ;hd44780.c: 55: }
   455                           ;hd44780.c: 58: lcd_clear();
   456  007F3A  EC16  F03F         	call	_lcd_clear	;wreg free
   457                           
   458                           ;hd44780.c: 61: lcd_emode(0x02);
   459  007F3E  0E02               	movlw	2
   460  007F40  EC35  F03F         	call	_lcd_emode
   461                           
   462                           ;hd44780.c: 64: lcd_fmode(0x10 | 0x08);
   463  007F44  0E18               	movlw	24
   464  007F46  EC40  F03F         	call	_lcd_fmode
   465                           
   466                           ;hd44780.c: 67: lcd_dmode(0x04);
   467  007F4A  0E04               	movlw	4
   468  007F4C  EC2A  F03F         	call	_lcd_dmode
   469  007F50  0012               	return		;funcret
   470  007F52                     __end_of_lcd_init:
   471                           	opt stack 0
   472                           wreg	equ	0xFE8
   473                           status	equ	0xFD8
   474                           
   475 ;; *************** function _lcd_fmode *****************
   476 ;; Defined at:
   477 ;;		line 159 in file "hd44780.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  options         1    wreg     unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  options         1    6[COMRAM] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         1       0       0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0
   494 ;;      Totals:         1       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        1 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		_send_cmd
   500 ;; This function is called by:
   501 ;;		_lcd_init
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text3
   506  007E80                     __ptext3:
   507                           	opt stack 0
   508  007E80                     _lcd_fmode:
   509                           	opt stack 27
   510                           
   511                           ;incstack = 0
   512                           ;lcd_fmode@options stored from wreg
   513  007E80  6E07               	movwf	lcd_fmode@options,c
   514                           
   515                           ;hd44780.c: 162: options = options & 0x1F;
   516  007E82  5007               	movf	lcd_fmode@options,w,c
   517  007E84  0B1F               	andlw	31
   518  007E86  6E07               	movwf	lcd_fmode@options,c
   519                           
   520                           ;hd44780.c: 164: options = options | 0x20;
   521  007E88  5007               	movf	lcd_fmode@options,w,c
   522  007E8A  0920               	iorlw	32
   523  007E8C  6E07               	movwf	lcd_fmode@options,c
   524                           
   525                           ;hd44780.c: 166: send_cmd(options);
   526  007E8E  5007               	movf	lcd_fmode@options,w,c
   527  007E90  EC4B  F03F         	call	_send_cmd
   528  007E94  0012               	return		;funcret
   529  007E96                     __end_of_lcd_fmode:
   530                           	opt stack 0
   531                           wreg	equ	0xFE8
   532                           status	equ	0xFD8
   533                           
   534 ;; *************** function _lcd_emode *****************
   535 ;; Defined at:
   536 ;;		line 100 in file "hd44780.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  options         1    wreg     unsigned char 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  options         1    6[COMRAM] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   550 ;;      Params:         0       0       0       0       0       0       0       0       0
   551 ;;      Locals:         1       0       0       0       0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0       0       0
   553 ;;      Totals:         1       0       0       0       0       0       0       0       0
   554 ;;Total ram usage:        1 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; Hardware stack levels required when called:    2
   557 ;; This function calls:
   558 ;;		_send_cmd
   559 ;; This function is called by:
   560 ;;		_lcd_init
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text4
   565  007E6A                     __ptext4:
   566                           	opt stack 0
   567  007E6A                     _lcd_emode:
   568                           	opt stack 27
   569                           
   570                           ;incstack = 0
   571                           ;lcd_emode@options stored from wreg
   572  007E6A  6E07               	movwf	lcd_emode@options,c
   573                           
   574                           ;hd44780.c: 103: options = options & 0x03;
   575  007E6C  5007               	movf	lcd_emode@options,w,c
   576  007E6E  0B03               	andlw	3
   577  007E70  6E07               	movwf	lcd_emode@options,c
   578                           
   579                           ;hd44780.c: 105: options = options | 0x04;
   580  007E72  5007               	movf	lcd_emode@options,w,c
   581  007E74  0904               	iorlw	4
   582  007E76  6E07               	movwf	lcd_emode@options,c
   583                           
   584                           ;hd44780.c: 107: send_cmd(options);
   585  007E78  5007               	movf	lcd_emode@options,w,c
   586  007E7A  EC4B  F03F         	call	_send_cmd
   587  007E7E  0012               	return		;funcret
   588  007E80                     __end_of_lcd_emode:
   589                           	opt stack 0
   590                           wreg	equ	0xFE8
   591                           status	equ	0xFD8
   592                           
   593 ;; *************** function _lcd_dmode *****************
   594 ;; Defined at:
   595 ;;		line 120 in file "hd44780.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  options         1    wreg     unsigned char 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  options         1    6[COMRAM] unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   609 ;;      Params:         0       0       0       0       0       0       0       0       0
   610 ;;      Locals:         1       0       0       0       0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0
   612 ;;      Totals:         1       0       0       0       0       0       0       0       0
   613 ;;Total ram usage:        1 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    2
   616 ;; This function calls:
   617 ;;		_send_cmd
   618 ;; This function is called by:
   619 ;;		_lcd_init
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text5
   624  007E54                     __ptext5:
   625                           	opt stack 0
   626  007E54                     _lcd_dmode:
   627                           	opt stack 27
   628                           
   629                           ;incstack = 0
   630                           ;lcd_dmode@options stored from wreg
   631  007E54  6E07               	movwf	lcd_dmode@options,c
   632                           
   633                           ;hd44780.c: 123: options = options & 0x07;
   634  007E56  5007               	movf	lcd_dmode@options,w,c
   635  007E58  0B07               	andlw	7
   636  007E5A  6E07               	movwf	lcd_dmode@options,c
   637                           
   638                           ;hd44780.c: 125: options = options | 0x08;
   639  007E5C  5007               	movf	lcd_dmode@options,w,c
   640  007E5E  0908               	iorlw	8
   641  007E60  6E07               	movwf	lcd_dmode@options,c
   642                           
   643                           ;hd44780.c: 127: send_cmd(options);
   644  007E62  5007               	movf	lcd_dmode@options,w,c
   645  007E64  EC4B  F03F         	call	_send_cmd
   646  007E68  0012               	return		;funcret
   647  007E6A                     __end_of_lcd_dmode:
   648                           	opt stack 0
   649                           wreg	equ	0xFE8
   650                           status	equ	0xFD8
   651                           
   652 ;; *************** function _lcd_clear *****************
   653 ;; Defined at:
   654 ;;		line 74 in file "hd44780.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         0       0       0       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_send_cmd
   677 ;; This function is called by:
   678 ;;		_lcd_init
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text6
   683  007E2C                     __ptext6:
   684                           	opt stack 0
   685  007E2C                     _lcd_clear:
   686                           	opt stack 27
   687                           
   688                           ;hd44780.c: 77: send_cmd(0x01);
   689                           
   690                           ;incstack = 0
   691  007E2C  0E01               	movlw	1
   692  007E2E  EC4B  F03F         	call	_send_cmd
   693  007E32  0012               	return		;funcret
   694  007E34                     __end_of_lcd_clear:
   695                           	opt stack 0
   696                           wreg	equ	0xFE8
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _lcd_ddram *****************
   700 ;; Defined at:
   701 ;;		line 176 in file "hd44780.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  address         1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  address         1    6[COMRAM] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         1       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    2
   722 ;; This function calls:
   723 ;;		_send_cmd
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text7
   730  007E3E                     __ptext7:
   731                           	opt stack 0
   732  007E3E                     _lcd_ddram:
   733                           	opt stack 28
   734                           
   735                           ;incstack = 0
   736                           ;lcd_ddram@address stored from wreg
   737  007E3E  6E07               	movwf	lcd_ddram@address,c
   738                           
   739                           ;hd44780.c: 179: address = address & 0x7F;
   740  007E40  5007               	movf	lcd_ddram@address,w,c
   741  007E42  0B7F               	andlw	127
   742  007E44  6E07               	movwf	lcd_ddram@address,c
   743                           
   744                           ;hd44780.c: 181: address = address | 0x80;
   745  007E46  5007               	movf	lcd_ddram@address,w,c
   746  007E48  0980               	iorlw	128
   747  007E4A  6E07               	movwf	lcd_ddram@address,c
   748                           
   749                           ;hd44780.c: 183: send_cmd(address);
   750  007E4C  5007               	movf	lcd_ddram@address,w,c
   751  007E4E  EC4B  F03F         	call	_send_cmd
   752  007E52  0012               	return		;funcret
   753  007E54                     __end_of_lcd_ddram:
   754                           	opt stack 0
   755                           wreg	equ	0xFE8
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _send_cmd *****************
   759 ;; Defined at:
   760 ;;		line 190 in file "hd44780.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  command         1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  command         1    5[COMRAM] unsigned char 
   765 ;;  loop            2    3[COMRAM] int 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         3       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0
   778 ;;      Totals:         3       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:        3 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    1
   782 ;; This function calls:
   783 ;;		_lcd_busy
   784 ;; This function is called by:
   785 ;;		_lcd_clear
   786 ;;		_lcd_emode
   787 ;;		_lcd_dmode
   788 ;;		_lcd_fmode
   789 ;;		_lcd_ddram
   790 ;;		_lcd_home
   791 ;;		_lcd_cmode
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text8
   796  007E96                     __ptext8:
   797                           	opt stack 0
   798  007E96                     _send_cmd:
   799                           	opt stack 27
   800                           
   801                           ;incstack = 0
   802                           ;send_cmd@command stored from wreg
   803  007E96  6E06               	movwf	send_cmd@command,c
   804  007E98                     
   805                           ;hd44780.c: 192: int loop;
   806                           ;hd44780.c: 195: while(lcd_busy() == 1);
   807  007E98  ECA9  F03F         	call	_lcd_busy	;wreg free
   808  007E9C  06E8               	decf	wreg,f,c
   809  007E9E  B4D8               	btfsc	status,2,c
   810  007EA0  D7FB               	goto	l763
   811                           
   812                           ;hd44780.c: 198: TRISB = 0x00;
   813  007EA2  0E00               	movlw	0
   814  007EA4  6E93               	movwf	3987,c	;volatile
   815                           
   816                           ;hd44780.c: 200: PORTCbits.RC1 = 0;
   817  007EA6  9282               	bcf	3970,1,c	;volatile
   818                           
   819                           ;hd44780.c: 202: PORTCbits.RC2 = 0;
   820  007EA8  9482               	bcf	3970,2,c	;volatile
   821                           
   822                           ;hd44780.c: 204: PORTB = command;
   823  007EAA  C006  FF81         	movff	send_cmd@command,3969	;volatile
   824                           
   825                           ;hd44780.c: 206: PORTCbits.RC0 = 1;
   826  007EAE  8082               	bsf	3970,0,c	;volatile
   827                           
   828                           ;hd44780.c: 211: loop = 0;
   829  007EB0  0E00               	movlw	0
   830  007EB2  6E05               	movwf	send_cmd@loop+1,c
   831  007EB4  0E00               	movlw	0
   832  007EB6  6E04               	movwf	send_cmd@loop,c
   833                           
   834                           ;hd44780.c: 212: while(loop < 20){
   835  007EB8  D002               	goto	l91
   836  007EBA                     
   837                           ;hd44780.c: 213: loop++;
   838  007EBA  4A04               	infsnz	send_cmd@loop,f,c
   839  007EBC  2A05               	incf	send_cmd@loop+1,f,c
   840  007EBE                     l91:
   841  007EBE  BE05               	btfsc	send_cmd@loop+1,7,c
   842  007EC0  D7FC               	goto	l92
   843  007EC2  5005               	movf	send_cmd@loop+1,w,c
   844  007EC4  E104               	bnz	u40
   845  007EC6  0E14               	movlw	20
   846  007EC8  5C04               	subwf	send_cmd@loop,w,c
   847  007ECA  A0D8               	btfss	status,0,c
   848  007ECC  D7F6               	goto	l92
   849  007ECE                     u40:
   850                           
   851                           ;hd44780.c: 214: }
   852                           ;hd44780.c: 216: PORTCbits.RC0 = 0;
   853  007ECE  9082               	bcf	3970,0,c	;volatile
   854  007ED0  0012               	return		;funcret
   855  007ED2                     __end_of_send_cmd:
   856                           	opt stack 0
   857                           wreg	equ	0xFE8
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _lcd_busy *****************
   861 ;; Defined at:
   862 ;;		line 259 in file "hd44780.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  loop            2    0[COMRAM] int 
   867 ;;  dataval         1    2[COMRAM] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   877 ;;      Params:         0       0       0       0       0       0       0       0       0
   878 ;;      Locals:         3       0       0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0
   880 ;;      Totals:         3       0       0       0       0       0       0       0       0
   881 ;;Total ram usage:        3 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_send_cmd
   887 ;;		_send_data
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text9
   892  007F52                     __ptext9:
   893                           	opt stack 0
   894  007F52                     _lcd_busy:
   895                           	opt stack 29
   896                           
   897                           ;hd44780.c: 261: int loop;
   898                           ;hd44780.c: 262: unsigned char dataval;
   899                           ;hd44780.c: 265: TRISB = 0xFF;
   900                           
   901                           ;incstack = 0
   902  007F52  6893               	setf	3987,c	;volatile
   903                           
   904                           ;hd44780.c: 267: PORTB = 0x00;
   905  007F54  0E00               	movlw	0
   906  007F56  6E81               	movwf	3969,c	;volatile
   907                           
   908                           ;hd44780.c: 269: PORTCbits.RC1 = 1;
   909  007F58  8282               	bsf	3970,1,c	;volatile
   910                           
   911                           ;hd44780.c: 271: PORTCbits.RC2 = 0;
   912  007F5A  9482               	bcf	3970,2,c	;volatile
   913                           
   914                           ;hd44780.c: 273: PORTCbits.RC0 = 1;
   915  007F5C  8082               	bsf	3970,0,c	;volatile
   916                           
   917                           ;hd44780.c: 277: loop = 0;
   918  007F5E  0E00               	movlw	0
   919  007F60  6E02               	movwf	lcd_busy@loop+1,c
   920  007F62  0E00               	movlw	0
   921  007F64  6E01               	movwf	lcd_busy@loop,c
   922                           
   923                           ;hd44780.c: 278: while(loop < 20){
   924  007F66  D002               	goto	l106
   925  007F68                     
   926                           ;hd44780.c: 279: loop++;
   927  007F68  4A01               	infsnz	lcd_busy@loop,f,c
   928  007F6A  2A02               	incf	lcd_busy@loop+1,f,c
   929  007F6C                     l106:
   930  007F6C  BE02               	btfsc	lcd_busy@loop+1,7,c
   931  007F6E  D7FC               	goto	l107
   932  007F70  5002               	movf	lcd_busy@loop+1,w,c
   933  007F72  E104               	bnz	u10
   934  007F74  0E14               	movlw	20
   935  007F76  5C01               	subwf	lcd_busy@loop,w,c
   936  007F78  A0D8               	btfss	status,0,c
   937  007F7A  D7F6               	goto	l107
   938  007F7C                     u10:
   939                           
   940                           ;hd44780.c: 280: }
   941                           ;hd44780.c: 282: dataval = PORTB;
   942  007F7C  CF81 F003          	movff	3969,lcd_busy@dataval	;volatile
   943                           
   944                           ;hd44780.c: 284: PORTCbits.RC0 = 0;
   945  007F80  9082               	bcf	3970,0,c	;volatile
   946                           
   947                           ;hd44780.c: 287: dataval = dataval & 0x80;
   948  007F82  5003               	movf	lcd_busy@dataval,w,c
   949  007F84  0B80               	andlw	128
   950  007F86  6E03               	movwf	lcd_busy@dataval,c
   951                           
   952                           ;hd44780.c: 288: if(dataval == 0x80){
   953  007F88  0E80               	movlw	128
   954  007F8A  1803               	xorwf	lcd_busy@dataval,w,c
   955  007F8C  A4D8               	btfss	status,2,c
   956  007F8E  D004               	goto	l109
   957                           
   958                           ;hd44780.c: 290: TRISB = 0x00;
   959  007F90  0E00               	movlw	0
   960  007F92  6E93               	movwf	3987,c	;volatile
   961                           
   962                           ;hd44780.c: 291: return(1);
   963  007F94  0E01               	movlw	1
   964                           
   965                           ;hd44780.c: 292: }
   966  007F96  0012               	return	
   967  007F98                     l109:
   968                           
   969                           ;hd44780.c: 293: else
   970                           ;hd44780.c: 294: {
   971                           ;hd44780.c: 296: TRISB = 0x00;
   972  007F98  0E00               	movlw	0
   973  007F9A  6E93               	movwf	3987,c	;volatile
   974                           
   975                           ;hd44780.c: 297: return(0);
   976  007F9C  0E00               	movlw	0
   977  007F9E  0012               	return	
   978  007FA0                     __end_of_lcd_busy:
   979                           	opt stack 0
   980  0000                     wreg	equ	0xFE8
   981                           status	equ	0xFD8
   982                           wreg	equ	0xFE8
   983                           status	equ	0xFD8
   984                           
   985                           	psect	rparam
   986  0000                     wreg	equ	0xFE8
   987                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _send_data->_lcd_busy
    _lcd_init->_lcd_dmode
    _lcd_init->_lcd_emode
    _lcd_init->_lcd_fmode
    _lcd_fmode->_send_cmd
    _lcd_emode->_send_cmd
    _lcd_dmode->_send_cmd
    _lcd_clear->_send_cmd
    _lcd_ddram->_send_cmd
    _send_cmd->_lcd_busy

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     705
                                              9 COMRAM     2     2      0
                          _lcd_ddram
                           _lcd_init
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            3     3      0      75
                                              3 COMRAM     3     3      0
                           _lcd_busy
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     450
                                              7 COMRAM     2     2      0
                          _lcd_clear
                          _lcd_dmode
                          _lcd_emode
                          _lcd_fmode
 ---------------------------------------------------------------------------------
 (2) _lcd_fmode                                            1     1      0     120
                                              6 COMRAM     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_emode                                            1     1      0     120
                                              6 COMRAM     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_dmode                                            1     1      0     120
                                              6 COMRAM     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0      75
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_ddram                                            1     1      0     120
                                              6 COMRAM     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_cmd                                             3     3      0      75
                                              3 COMRAM     3     3      0
                           _lcd_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_busy                                             3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_ddram
     _send_cmd
       _lcd_busy
   _lcd_init
     _lcd_clear
       _send_cmd
         _lcd_busy
     _lcd_dmode
       _send_cmd
         _lcd_busy
     _lcd_emode
       _send_cmd
         _lcd_busy
     _lcd_fmode
       _send_cmd
         _lcd_busy
   _send_data
     _lcd_busy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       D       1       13.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      20        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Dec  4 04:47:44 2017

                     l21 7FBC                       l22 7FB2                       l24 7FD8  
                     l25 7FCE                       l61 7F2E                       l62 7F2A  
                     l91 7EBE                       l92 7EBA                       u10 7F7C  
                     u40 7ECE                       u70 7F0A                       u90 7FDE  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l100 7EFA                      l101 7EF6  
                    l106 7F6C                      l107 7F68                      l109 7F98  
                    l809 7ED4                      l763 7E98             __CFG_CPB$OFF 000000  
                    u107 7FE6                      u117 7FF6             __CFG_CPD$OFF 000000  
                    _val 000C                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     _main 7FA0             lcd_busy@loop 0001  
           lcd_init@loop 0008                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization 7E34             __end_of_main 8000  
                 ??_main 000A            __activetblptr 000000           __CFG_XINST$OFF 000000  
       __end_of_lcd_busy 7FA0         __end_of_lcd_init 7F52           __CFG_STVREN$ON 000000  
       __end_of_send_cmd 7ED2               __accesstop 0060  __end_of__initialization 7E38  
          ___rparam_used 000001           __pcstackCOMRAM 0001         lcd_ddram@address 0007  
     __size_of_lcd_ddram 0016       __size_of_lcd_clear 0008       __size_of_lcd_dmode 0016  
     __size_of_lcd_emode 0016       __size_of_lcd_fmode 0016       __size_of_send_data 003C  
              ?_lcd_busy 0001                ?_lcd_init 0001          __CFG_VREGEN$OFF 000000  
              ?_send_cmd 0001                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_ddram 7E54        __end_of_lcd_clear 7E34        __end_of_lcd_dmode 7E6A  
      __end_of_lcd_emode 7E80        __end_of_lcd_fmode 7E96                  __pcinit 7E34  
                __ramtop 0800                  __ptext0 7FA0                  __ptext1 7ED2  
                __ptext2 7F0E                  __ptext3 7E80                  __ptext4 7E6A  
                __ptext5 7E54                  __ptext6 7E2C                  __ptext7 7E3E  
                __ptext8 7E96                  __ptext9 7F52          lcd_busy@dataval 0003  
             ??_lcd_busy 0001               ??_lcd_init 0008     end_of_initialization 7E38  
      __end_of_send_data 7F0E               ??_send_cmd 0004            send_data@loop 0004  
              _PORTBbits 000F81                _PORTCbits 000F82      start_initialization 7E34  
       lcd_dmode@options 0007         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000C  
       lcd_emode@options 0007        __size_of_lcd_busy 004E        __size_of_lcd_init 0044  
      __size_of_send_cmd 003C                _lcd_ddram 7E3E                _lcd_clear 7E2C  
              _lcd_dmode 7E54                _lcd_emode 7E6A                _lcd_fmode 7E80  
       lcd_fmode@options 0007                _send_data 7ED2         __CFG_WDTPS$32768 000000  
           send_cmd@loop 0004               ?_lcd_ddram 0001               ?_lcd_clear 0001  
             ?_lcd_dmode 0001               ?_lcd_emode 0001               ?_lcd_fmode 0001  
             ?_send_data 0001                 __Hrparam 0000                 __Lrparam 0000  
       send_data@dataval 0006                 _lcd_busy 7F52                 _lcd_init 7F0E  
          __size_of_main 0060                 _send_cmd 7E96              ??_lcd_ddram 0007  
            ??_lcd_clear 0007              ??_lcd_dmode 0007              ??_lcd_emode 0007  
            ??_lcd_fmode 0007                 main@valu 000B    __CFG_CPUDIV$OSC1_PLL2 000000  
        send_cmd@command 0006              ??_send_data 0004  
