

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Mar  4 15:59:13 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  007D26                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _b
    65  007D26  C0                 	db	low _b1
    66  007D27  00                 	db	high _b1
    67  007D28  D0                 	db	low _b2
    68  007D29  00                 	db	high _b2
    69  007D2A  1F                 	db	low _b3
    70  007D2B  00                 	db	high _b3
    71  007D2C  B0                 	db	low _b4
    72  007D2D  00                 	db	high _b4
    73                           
    74                           ;initializer for _p
    75  007D2E  39                 	db	low _p1
    76  007D2F  00                 	db	high _p1
    77  007D30  2C                 	db	low _p2
    78  007D31  00                 	db	high _p2
    79  007D32  11                 	db	low _p3
    80  007D33  00                 	db	high _p3
    81  007D34  DF                 	db	low _p4
    82  007D35  00                 	db	high _p4
    83                           
    84                           ;initializer for _p3
    85  007D36  4F                 	db	79
    86  007D37  53                 	db	83
    87  007D38  43                 	db	67
    88  007D39  41                 	db	65
    89  007D3A  52                 	db	82
    90  007D3B  20                 	db	32
    91  007D3C  45                 	db	69
    92  007D3D  44                 	db	68
    93  007D3E  55                 	db	85
    94  007D3F  41                 	db	65
    95  007D40  52                 	db	82
    96  007D41  44                 	db	68
    97  007D42  4F                 	db	79
    98  007D43  00                 	db	0
    99                           
   100                           ;initializer for _b3
   101  007D44  4C                 	db	76
   102  007D45  55                 	db	85
   103  007D46  4E                 	db	78
   104  007D47  41                 	db	65
   105  007D48  20                 	db	32
   106  007D49  4D                 	db	77
   107  007D4A  45                 	db	69
   108  007D4B  4E                 	db	78
   109  007D4C  44                 	db	68
   110  007D4D  4F                 	db	79
   111  007D4E  5A                 	db	90
   112  007D4F  41                 	db	65
   113  007D50  00                 	db	0
   114                           
   115                           ;initializer for _p2
   116  007D51  4E                 	db	78
   117  007D52  4F                 	db	79
   118  007D53  52                 	db	82
   119  007D54  4D                 	db	77
   120  007D55  41                 	db	65
   121  007D56  20                 	db	32
   122  007D57  49                 	db	73
   123  007D58  53                 	db	83
   124  007D59  41                 	db	65
   125  007D5A  42                 	db	66
   126  007D5B  45                 	db	69
   127  007D5C  4C                 	db	76
   128  007D5D  00                 	db	0
   129                           
   130                           ;initializer for _p1
   131  007D5E  4A                 	db	74
   132  007D5F  55                 	db	85
   133  007D60  41                 	db	65
   134  007D61  4E                 	db	78
   135  007D62  20                 	db	32
   136  007D63  43                 	db	67
   137  007D64  41                 	db	65
   138  007D65  52                 	db	82
   139  007D66  4C                 	db	76
   140  007D67  4F                 	db	79
   141  007D68  53                 	db	83
   142  007D69  00                 	db	0
   143                           
   144                           	psect	idataBANK0
   145  007E1A                     __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _Digit
   149  007E1A  01                 	db	1
   150  007E1B  01                 	db	1
   151  007E1C  01                 	db	1
   152  007E1D  01                 	db	1
   153  007E1E  01                 	db	1
   154  007E1F  01                 	db	1
   155  007E20  00                 	db	0
   156  007E21  00                 	db	0
   157  007E22  00                 	db	0
   158  007E23  01                 	db	1
   159  007E24  01                 	db	1
   160  007E25  00                 	db	0
   161  007E26  00                 	db	0
   162  007E27  00                 	db	0
   163  007E28  00                 	db	0
   164  007E29  00                 	db	0
   165  007E2A  01                 	db	1
   166  007E2B  01                 	db	1
   167  007E2C  00                 	db	0
   168  007E2D  01                 	db	1
   169  007E2E  01                 	db	1
   170  007E2F  00                 	db	0
   171  007E30  01                 	db	1
   172  007E31  00                 	db	0
   173  007E32  01                 	db	1
   174  007E33  01                 	db	1
   175  007E34  01                 	db	1
   176  007E35  01                 	db	1
   177  007E36  00                 	db	0
   178  007E37  00                 	db	0
   179  007E38  01                 	db	1
   180  007E39  00                 	db	0
   181  007E3A  00                 	db	0
   182  007E3B  01                 	db	1
   183  007E3C  01                 	db	1
   184  007E3D  00                 	db	0
   185  007E3E  00                 	db	0
   186  007E3F  01                 	db	1
   187  007E40  01                 	db	1
   188  007E41  00                 	db	0
   189  007E42  01                 	db	1
   190  007E43  00                 	db	0
   191  007E44  01                 	db	1
   192  007E45  01                 	db	1
   193  007E46  00                 	db	0
   194  007E47  01                 	db	1
   195  007E48  01                 	db	1
   196  007E49  00                 	db	0
   197  007E4A  01                 	db	1
   198  007E4B  00                 	db	0
   199  007E4C  01                 	db	1
   200  007E4D  01                 	db	1
   201  007E4E  01                 	db	1
   202  007E4F  01                 	db	1
   203  007E50  01                 	db	1
   204  007E51  00                 	db	0
   205  007E52  01                 	db	1
   206  007E53  01                 	db	1
   207  007E54  01                 	db	1
   208  007E55  00                 	db	0
   209  007E56  00                 	db	0
   210  007E57  00                 	db	0
   211  007E58  00                 	db	0
   212  007E59  00                 	db	0
   213  007E5A  01                 	db	1
   214  007E5B  01                 	db	1
   215  007E5C  01                 	db	1
   216  007E5D  01                 	db	1
   217  007E5E  01                 	db	1
   218  007E5F  01                 	db	1
   219  007E60  01                 	db	1
   220  007E61  00                 	db	0
   221  007E62  01                 	db	1
   222  007E63  01                 	db	1
   223  007E64  01                 	db	1
   224  007E65  00                 	db	0
   225  007E66  00                 	db	0
   226  007E67  01                 	db	1
   227  007E68  01                 	db	1
   228  007E69  00                 	db	0
   229                           
   230                           ;initializer for _b4
   231  007E6A  4C                 	db	76
   232  007E6B  41                 	db	65
   233  007E6C  20                 	db	32
   234  007E6D  50                 	db	80
   235  007E6E  52                 	db	82
   236  007E6F  4F                 	db	79
   237  007E70  47                 	db	71
   238  007E71  52                 	db	82
   239  007E72  41                 	db	65
   240  007E73  4D                 	db	77
   241  007E74  41                 	db	65
   242  007E75  43                 	db	67
   243  007E76  49                 	db	73
   244  007E77  4F                 	db	79
   245  007E78  4E                 	db	78
   246  007E79  00                 	db	0
   247                           
   248                           ;initializer for _b1
   249  007E7A  52                 	db	82
   250  007E7B  4F                 	db	79
   251  007E7C  44                 	db	68
   252  007E7D  52                 	db	82
   253  007E7E  49                 	db	73
   254  007E7F  47                 	db	71
   255  007E80  55                 	db	85
   256  007E81  45                 	db	69
   257  007E82  5A                 	db	90
   258  007E83  20                 	db	32
   259  007E84  50                 	db	80
   260  007E85  45                 	db	69
   261  007E86  52                 	db	82
   262  007E87  45                 	db	69
   263  007E88  5A                 	db	90
   264  007E89  00                 	db	0
   265                           
   266                           ;initializer for _b2
   267  007E8A  48                 	db	72
   268  007E8B  45                 	db	69
   269  007E8C  52                 	db	82
   270  007E8D  4E                 	db	78
   271  007E8E  41                 	db	65
   272  007E8F  4E                 	db	78
   273  007E90  44                 	db	68
   274  007E91  45                 	db	69
   275  007E92  5A                 	db	90
   276  007E93  20                 	db	32
   277  007E94  44                 	db	68
   278  007E95  49                 	db	73
   279  007E96  41                 	db	65
   280  007E97  5A                 	db	90
   281  007E98  00                 	db	0
   282                           
   283                           ;initializer for _p4
   284  007E99  49                 	db	73
   285  007E9A  4E                 	db	78
   286  007E9B  54                 	db	84
   287  007E9C  52                 	db	82
   288  007E9D  4F                 	db	79
   289  007E9E  44                 	db	68
   290  007E9F  55                 	db	85
   291  007EA0  43                 	db	67
   292  007EA1  43                 	db	67
   293  007EA2  49                 	db	73
   294  007EA3  4F                 	db	79
   295  007EA4  4E                 	db	78
   296  007EA5  20                 	db	32
   297  007EA6  41                 	db	65
   298  007EA7  00                 	db	0
   299  0000                     _PORTD	set	3971
   300  0000                     _PORTDbits	set	3971
   301  0000                     _LATB	set	3978
   302  0000                     _PORTCbits	set	3970
   303  0000                     _TRISCbits	set	3988
   304  0000                     _TRISB	set	3987
   305  0000                     _TRISD	set	3989
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  007D6A                     __pcinit:
   311                           	opt stack 0
   312  007D6A                     start_initialization:
   313                           	opt stack 0
   314  007D6A                     __initialization:
   315                           	opt stack 0
   316                           
   317                           ; Initialize objects allocated to BANK0 (142 bytes)
   318                           ; load TBLPTR registers with __pidataBANK0
   319  007D6A  0E1A               	movlw	low __pidataBANK0
   320  007D6C  6EF6               	movwf	tblptrl,c
   321  007D6E  0E7E               	movlw	high __pidataBANK0
   322  007D70  6EF7               	movwf	tblptrh,c
   323  007D72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   324  007D74  6EF8               	movwf	tblptru,c
   325  007D76  EE00  F060         	lfsr	0,__pdataBANK0
   326  007D7A  EE10 F08E          	lfsr	1,142
   327  007D7E                     copy_data0:
   328  007D7E  0009               	tblrd		*+
   329  007D80  CFF5 FFEE          	movff	tablat,postinc0
   330  007D84  50E5               	movf	postdec1,w,c
   331  007D86  50E1               	movf	fsr1l,w,c
   332  007D88  E1FA               	bnz	copy_data0
   333                           
   334                           ; Initialize objects allocated to COMRAM (68 bytes)
   335                           ; load TBLPTR registers with __pidataCOMRAM
   336  007D8A  0E26               	movlw	low __pidataCOMRAM
   337  007D8C  6EF6               	movwf	tblptrl,c
   338  007D8E  0E7D               	movlw	high __pidataCOMRAM
   339  007D90  6EF7               	movwf	tblptrh,c
   340  007D92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   341  007D94  6EF8               	movwf	tblptru,c
   342  007D96  EE00  F001         	lfsr	0,__pdataCOMRAM
   343  007D9A  EE10 F044          	lfsr	1,68
   344  007D9E                     copy_data1:
   345  007D9E  0009               	tblrd		*+
   346  007DA0  CFF5 FFEE          	movff	tablat,postinc0
   347  007DA4  50E5               	movf	postdec1,w,c
   348  007DA6  50E1               	movf	fsr1l,w,c
   349  007DA8  E1FA               	bnz	copy_data1
   350                           
   351                           ; Clear objects allocated to COMRAM (4 bytes)
   352  007DAA  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   353  007DAC  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   354  007DAE  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   355  007DB0  6A53               	clrf	__pbssCOMRAM& (0+255),c
   356  007DB2                     end_of_initialization:
   357                           	opt stack 0
   358  007DB2                     __end_of__initialization:
   359                           	opt stack 0
   360  007DB2  0100               	movlb	0
   361  007DB4  EFA2  F03F         	goto	_main	;jump to C main() function
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssCOMRAM
   371  000053                     __pbssCOMRAM:
   372                           	opt stack 0
   373  000053                     _contN:
   374                           	opt stack 0
   375  000053                     	ds	2
   376  000055                     _cont:
   377                           	opt stack 0
   378  000055                     	ds	2
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	dataCOMRAM
   388  000001                     __pdataCOMRAM:
   389                           	opt stack 0
   390  000001                     _b:
   391                           	opt stack 0
   392  000001                     	ds	8
   393  000009                     _p:
   394                           	opt stack 0
   395  000009                     	ds	8
   396  000011                     _p3:
   397                           	opt stack 0
   398  000011                     	ds	14
   399  00001F                     _b3:
   400                           	opt stack 0
   401  00001F                     	ds	13
   402  00002C                     _p2:
   403                           	opt stack 0
   404  00002C                     	ds	13
   405  000039                     _p1:
   406                           	opt stack 0
   407  000039                     	ds	12
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	dataBANK0
   417  000060                     __pdataBANK0:
   418                           	opt stack 0
   419  000060                     _Digit:
   420                           	opt stack 0
   421  000060                     	ds	80
   422  0000B0                     _b4:
   423                           	opt stack 0
   424  0000B0                     	ds	16
   425  0000C0                     _b1:
   426                           	opt stack 0
   427  0000C0                     	ds	16
   428  0000D0                     _b2:
   429                           	opt stack 0
   430  0000D0                     	ds	15
   431  0000DF                     _p4:
   432                           	opt stack 0
   433  0000DF                     	ds	15
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	cstackCOMRAM
   443  000045                     __pcstackCOMRAM:
   444                           	opt stack 0
   445  000045                     ??_lcd_cmd:
   446  000045                     ??_lcd_dwr:
   447  000045                     lcd_cmd_hf@x:
   448                           	opt stack 0
   449  000045                     Display@N:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x0
   453  000045                     	ds	1
   454  000046                     lcd_cmd@x:
   455                           	opt stack 0
   456  000046                     lcd_dwr@x:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x1
   460  000046                     	ds	1
   461  000047                     ??_Display:
   462  000047                     lcd_msg@c:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466  000047                     	ds	2
   467  000049                     
   468                           ; 1 bytes @ 0x4
   469  000049                     	ds	3
   470  00004C                     Display@valor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x7
   474  00004C                     	ds	2
   475  00004E                     Display@i:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x9
   479  00004E                     	ds	2
   480  000050                     ??_main:
   481                           
   482                           ; 1 bytes @ 0xB
   483  000050                     	ds	2
   484  000052                     main@boton:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488  000052                     	ds	1
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   499 ;;
   500 ;; *************** function _main *****************
   501 ;; Defined at:
   502 ;;		line 135 in file "nombres.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  boton           1   13[COMRAM] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       0       0       0       0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0       0       0       0       0
   518 ;;      Temps:          2       0       0       0       0       0       0       0       0
   519 ;;      Totals:         3       0       0       0       0       0       0       0       0
   520 ;;Total ram usage:        3 bytes
   521 ;; Hardware stack levels required when called:    4
   522 ;; This function calls:
   523 ;;		_Display
   524 ;;		_IncrementaNumero
   525 ;;		_IncrementaPersona
   526 ;;		_lcd_cmd
   527 ;;		_lcd_init
   528 ;;		_lcd_msg
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text0
   535  007F44                     __ptext0:
   536                           	opt stack 0
   537  007F44                     _main:
   538                           	opt stack 27
   539                           
   540                           ;nombres.c: 137: char boton= 'x';
   541                           
   542                           ;incstack = 0
   543  007F44  0E78               	movlw	120
   544  007F46  6E52               	movwf	main@boton,c
   545                           
   546                           ;nombres.c: 138: contN=0;
   547  007F48  0E00               	movlw	0
   548  007F4A  6E54               	movwf	_contN+1,c	;volatile
   549  007F4C  0E00               	movlw	0
   550  007F4E  6E53               	movwf	_contN,c	;volatile
   551                           
   552                           ;nombres.c: 139: TRISD = 0x00;
   553  007F50  0E00               	movlw	0
   554  007F52  6E95               	movwf	3989,c	;volatile
   555                           
   556                           ;nombres.c: 140: TRISB = 0x00;
   557  007F54  0E00               	movlw	0
   558  007F56  6E93               	movwf	3987,c	;volatile
   559                           
   560                           ;nombres.c: 141: TRISCbits.TRISC6=1;
   561  007F58  8C94               	bsf	3988,6,c	;volatile
   562                           
   563                           ;nombres.c: 142: TRISCbits.TRISC7=1;
   564  007F5A  8E94               	bsf	3988,7,c	;volatile
   565                           
   566                           ;nombres.c: 143: TRISCbits.TRISC0 = 0;
   567  007F5C  9094               	bcf	3988,0,c	;volatile
   568                           
   569                           ;nombres.c: 144: TRISCbits.TRISC1 = 0;
   570  007F5E  9294               	bcf	3988,1,c	;volatile
   571                           
   572                           ;nombres.c: 145: lcd_init();
   573  007F60  EC7D  F03E         	call	_lcd_init	;wreg free
   574                           
   575                           ;nombres.c: 146: _delay((unsigned long)((200)*(4000000/4000.0)));
   576  007F64  0E02               	movlw	2
   577  007F66  6E51               	movwf	(??_main+1)& (0+255),c
   578  007F68  0E04               	movlw	4
   579  007F6A  6E50               	movwf	??_main& (0+255),c
   580  007F6C  0EBA               	movlw	186
   581  007F6E                     u267:
   582  007F6E  2EE8               	decfsz	wreg,f,c
   583  007F70  D7FE               	bra	u267
   584  007F72  2E50               	decfsz	??_main& (0+255),f,c
   585  007F74  D7FC               	bra	u267
   586  007F76  2E51               	decfsz	(??_main+1)& (0+255),f,c
   587  007F78  D7FA               	bra	u267
   588  007F7A  D000               	nop2	
   589                           
   590                           ;nombres.c: 147: lcd_cmd(0x01);
   591  007F7C  0E01               	movlw	1
   592  007F7E  EC53  F03E         	call	_lcd_cmd
   593                           
   594                           ;nombres.c: 148: lcd_msg(p[3]);
   595  007F82  C00F  F047         	movff	_p+6,lcd_msg@c
   596  007F86  C010  F048         	movff	_p+7,lcd_msg@c+1
   597  007F8A  EC2E  F03E         	call	_lcd_msg	;wreg free
   598                           
   599                           ;nombres.c: 149: lcd_cmd(0xC0);
   600  007F8E  0EC0               	movlw	192
   601  007F90  EC53  F03E         	call	_lcd_cmd
   602                           
   603                           ;nombres.c: 150: lcd_msg(b[3]);
   604  007F94  C007  F047         	movff	_b+6,lcd_msg@c
   605  007F98  C008  F048         	movff	_b+7,lcd_msg@c+1
   606  007F9C  EC2E  F03E         	call	_lcd_msg	;wreg free
   607                           
   608                           ;nombres.c: 151: Display(0);
   609  007FA0  0E00               	movlw	0
   610  007FA2  6E46               	movwf	Display@N+1,c
   611  007FA4  0E00               	movlw	0
   612  007FA6  6E45               	movwf	Display@N,c
   613  007FA8  EC54  F03F         	call	_Display	;wreg free
   614                           
   615                           ;nombres.c: 152: while(boton == 'x')
   616  007FAC  D023               	goto	l59
   617  007FAE                     
   618                           ;nombres.c: 153: {
   619                           ;nombres.c: 154: _delay((unsigned long)((20)*(4000000/4000.0)));
   620  007FAE  0E1A               	movlw	26
   621  007FB0  6E50               	movwf	??_main& (0+255),c
   622  007FB2  0EF8               	movlw	248
   623  007FB4                     u277:
   624  007FB4  2EE8               	decfsz	wreg,f,c
   625  007FB6  D7FE               	bra	u277
   626  007FB8  2E50               	decfsz	??_main& (0+255),f,c
   627  007FBA  D7FC               	bra	u277
   628  007FBC  D000               	nop2	
   629                           
   630                           ;nombres.c: 155: if(PORTCbits.RC6 == 1)
   631  007FBE  AC82               	btfss	3970,6,c	;volatile
   632  007FC0  D005               	goto	l61
   633                           
   634                           ;nombres.c: 156: {
   635                           ;nombres.c: 157: PORTCbits.RC0 = 1;
   636  007FC2  8082               	bsf	3970,0,c	;volatile
   637                           
   638                           ;nombres.c: 158: PORTCbits.RC1 = 0;
   639  007FC4  9282               	bcf	3970,1,c	;volatile
   640                           
   641                           ;nombres.c: 159: boton= IncrementaPersona();
   642  007FC6  ECDC  F03E         	call	_IncrementaPersona	;wreg free
   643  007FCA  D006               	goto	L1
   644  007FCC                     l61:
   645                           
   646                           ;nombres.c: 161: else if(PORTCbits.RC7 == 1)
   647  007FCC  AE82               	btfss	3970,7,c	;volatile
   648  007FCE  D005               	goto	l63
   649                           
   650                           ;nombres.c: 162: {
   651                           ;nombres.c: 163: PORTCbits.RC0 = 0;
   652  007FD0  9082               	bcf	3970,0,c	;volatile
   653                           
   654                           ;nombres.c: 164: PORTCbits.RC1 = 1;
   655  007FD2  8282               	bsf	3970,1,c	;volatile
   656                           
   657                           ;nombres.c: 165: boton = IncrementaNumero();
   658  007FD4  EC40  F03E         	call	_IncrementaNumero	;wreg free
   659  007FD8                     L1:
   660  007FD8  6E52               	movwf	main@boton,c
   661  007FDA                     l63:
   662                           
   663                           ;nombres.c: 166: }
   664                           ;nombres.c: 168: PORTCbits.RC0 ^= 1;
   665  007FDA  7082               	btg	3970,0,c	;volatile
   666                           
   667                           ;nombres.c: 169: PORTCbits.RC1 ^= 1;
   668  007FDC  7282               	btg	3970,1,c	;volatile
   669                           
   670                           ;nombres.c: 170: _delay((unsigned long)((500)*(4000000/4000.0)));
   671  007FDE  0E03               	movlw	3
   672  007FE0  6E51               	movwf	(??_main+1)& (0+255),c
   673  007FE2  0E8A               	movlw	138
   674  007FE4  6E50               	movwf	??_main& (0+255),c
   675  007FE6  0E56               	movlw	86
   676  007FE8                     u287:
   677  007FE8  2EE8               	decfsz	wreg,f,c
   678  007FEA  D7FE               	bra	u287
   679  007FEC  2E50               	decfsz	??_main& (0+255),f,c
   680  007FEE  D7FC               	bra	u287
   681  007FF0  2E51               	decfsz	(??_main+1)& (0+255),f,c
   682  007FF2  D7FA               	bra	u287
   683  007FF4                     l59:
   684  007FF4  0E78               	movlw	120
   685  007FF6  1852               	xorwf	main@boton,w,c
   686  007FF8  A4D8               	btfss	status,2,c
   687  007FFA  EF00  F000         	goto	start
   688  007FFE  D7D7               	goto	l60
   689  008000                     __end_of_main:
   690                           	opt stack 0
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           status	equ	0xFD8
   700                           
   701 ;; *************** function _lcd_init *****************
   702 ;; Defined at:
   703 ;;		line 271 in file "nombres.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   717 ;;      Params:         0       0       0       0       0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    2
   724 ;; This function calls:
   725 ;;		_lcd_cmd
   726 ;;		_lcd_cmd_hf
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text1
   733  007CFA                     __ptext1:
   734                           	opt stack 0
   735  007CFA                     _lcd_init:
   736                           	opt stack 28
   737                           
   738                           ;nombres.c: 273: lcd_cmd_hf(0x30);
   739                           
   740                           ;incstack = 0
   741  007CFA  0E30               	movlw	48
   742  007CFC  EC24  F03E         	call	_lcd_cmd_hf
   743                           
   744                           ;nombres.c: 274: lcd_cmd_hf(0x20);
   745  007D00  0E20               	movlw	32
   746  007D02  EC24  F03E         	call	_lcd_cmd_hf
   747                           
   748                           ;nombres.c: 275: lcd_cmd(0x28);
   749  007D06  0E28               	movlw	40
   750  007D08  EC53  F03E         	call	_lcd_cmd
   751                           
   752                           ;nombres.c: 276: lcd_cmd(0x0E);
   753  007D0C  0E0E               	movlw	14
   754  007D0E  EC53  F03E         	call	_lcd_cmd
   755                           
   756                           ;nombres.c: 277: lcd_cmd(0x01);
   757  007D12  0E01               	movlw	1
   758  007D14  EC53  F03E         	call	_lcd_cmd
   759                           
   760                           ;nombres.c: 278: lcd_cmd(0x06);
   761  007D18  0E06               	movlw	6
   762  007D1A  EC53  F03E         	call	_lcd_cmd
   763                           
   764                           ;nombres.c: 279: lcd_cmd(0x80);
   765  007D1E  0E80               	movlw	128
   766  007D20  EC53  F03E         	call	_lcd_cmd
   767  007D24  0012               	return		;funcret
   768  007D26                     __end_of_lcd_init:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           postdec1	equ	0xFE5
   777                           fsr1l	equ	0xFE1
   778                           status	equ	0xFD8
   779                           
   780 ;; *************** function _lcd_cmd_hf *****************
   781 ;; Defined at:
   782 ;;		line 236 in file "nombres.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  x               1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  x               1    0[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         1       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        1 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		_lcd_lat
   805 ;; This function is called by:
   806 ;;		_lcd_init
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  007C48                     __ptext2:
   812                           	opt stack 0
   813  007C48                     _lcd_cmd_hf:
   814                           	opt stack 28
   815                           
   816                           ;incstack = 0
   817                           ;lcd_cmd_hf@x stored from wreg
   818  007C48  6E45               	movwf	lcd_cmd_hf@x,c
   819                           
   820                           ;nombres.c: 238: PORTDbits.RD0 = 0;
   821  007C4A  9083               	bcf	3971,0,c	;volatile
   822                           
   823                           ;nombres.c: 239: PORTD &= 0x0F;
   824  007C4C  0E0F               	movlw	15
   825  007C4E  1683               	andwf	3971,f,c	;volatile
   826                           
   827                           ;nombres.c: 240: PORTD |= (x & 0xF0);
   828  007C50  5045               	movf	lcd_cmd_hf@x,w,c
   829  007C52  0BF0               	andlw	240
   830  007C54  1283               	iorwf	3971,f,c	;volatile
   831                           
   832                           ;nombres.c: 241: lcd_lat();
   833  007C56  EC1D  F03E         	call	_lcd_lat	;wreg free
   834  007C5A  0012               	return		;funcret
   835  007C5C                     __end_of_lcd_cmd_hf:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postdec1	equ	0xFE5
   844                           fsr1l	equ	0xFE1
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _IncrementaPersona *****************
   848 ;; Defined at:
   849 ;;		line 179 in file "nombres.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      unsigned char 
   856 ;; Registers used:
   857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   863 ;;      Params:         0       0       0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    3
   870 ;; This function calls:
   871 ;;		_lcd_cmd
   872 ;;		_lcd_msg
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text3
   879  007DB8                     __ptext3:
   880                           	opt stack 0
   881  007DB8                     _IncrementaPersona:
   882                           	opt stack 27
   883                           
   884                           ;nombres.c: 182: {
   885                           ;nombres.c: 183: lcd_cmd(0x01);
   886                           
   887                           ;incstack = 0
   888  007DB8  0E01               	movlw	1
   889  007DBA  EC53  F03E         	call	_lcd_cmd
   890                           
   891                           ;nombres.c: 184: lcd_msg(p[cont]);
   892  007DBE  90D8               	bcf	status,0,c
   893  007DC0  3455               	rlcf	_cont,w,c	;volatile
   894  007DC2  6ED9               	movwf	fsr2l,c
   895  007DC4  3456               	rlcf	_cont+1,w,c	;volatile
   896  007DC6  6EDA               	movwf	fsr2h,c
   897  007DC8  0E09               	movlw	low _p
   898  007DCA  26D9               	addwf	fsr2l,f,c
   899  007DCC  0E00               	movlw	high _p
   900  007DCE  22DA               	addwfc	fsr2h,f,c
   901  007DD0  CFDE F047          	movff	postinc2,lcd_msg@c
   902  007DD4  CFDD F048          	movff	postdec2,lcd_msg@c+1
   903  007DD8  EC2E  F03E         	call	_lcd_msg	;wreg free
   904                           
   905                           ;nombres.c: 185: lcd_cmd(0xC0);
   906  007DDC  0EC0               	movlw	192
   907  007DDE  EC53  F03E         	call	_lcd_cmd
   908                           
   909                           ;nombres.c: 186: lcd_msg(b[cont]);
   910  007DE2  90D8               	bcf	status,0,c
   911  007DE4  3455               	rlcf	_cont,w,c	;volatile
   912  007DE6  6ED9               	movwf	fsr2l,c
   913  007DE8  3456               	rlcf	_cont+1,w,c	;volatile
   914  007DEA  6EDA               	movwf	fsr2h,c
   915  007DEC  0E01               	movlw	low _b
   916  007DEE  26D9               	addwf	fsr2l,f,c
   917  007DF0  0E00               	movlw	high _b
   918  007DF2  22DA               	addwfc	fsr2h,f,c
   919  007DF4  CFDE F047          	movff	postinc2,lcd_msg@c
   920  007DF8  CFDD F048          	movff	postdec2,lcd_msg@c+1
   921  007DFC  EC2E  F03E         	call	_lcd_msg	;wreg free
   922                           
   923                           ;nombres.c: 187: }
   924                           ;nombres.c: 188: cont++;
   925  007E00  4A55               	infsnz	_cont,f,c	;volatile
   926  007E02  2A56               	incf	_cont+1,f,c	;volatile
   927                           
   928                           ;nombres.c: 189: if (cont == 4) cont = 0;
   929  007E04  0E04               	movlw	4
   930  007E06  1855               	xorwf	_cont,w,c	;volatile
   931  007E08  1056               	iorwf	_cont+1,w,c	;volatile
   932  007E0A  A4D8               	btfss	status,2,c
   933  007E0C  D004               	goto	l68
   934  007E0E  0E00               	movlw	0
   935  007E10  6E56               	movwf	_cont+1,c	;volatile
   936  007E12  0E00               	movlw	0
   937  007E14  6E55               	movwf	_cont,c	;volatile
   938  007E16                     l68:
   939                           
   940                           ;nombres.c: 190: return 'x';
   941  007E16  0E78               	movlw	120
   942  007E18  0012               	return	
   943  007E1A                     __end_of_IncrementaPersona:
   944                           	opt stack 0
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           postdec1	equ	0xFE5
   952                           fsr1l	equ	0xFE1
   953                           postinc2	equ	0xFDE
   954                           postdec2	equ	0xFDD
   955                           fsr2h	equ	0xFDA
   956                           fsr2l	equ	0xFD9
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _lcd_msg *****************
   960 ;; Defined at:
   961 ;;		line 256 in file "nombres.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  c               2    2[COMRAM] PTR unsigned char 
   964 ;;		 -> b4(16), b3(13), b2(15), b1(16), 
   965 ;;		 -> p4(15), p3(14), p2(13), p1(12), 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         2       0       0       0       0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         2       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        2 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		_lcd_dwr
   986 ;; This function is called by:
   987 ;;		_main
   988 ;;		_IncrementaPersona
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text4
   993  007C5C                     __ptext4:
   994                           	opt stack 0
   995  007C5C                     _lcd_msg:
   996                           	opt stack 28
   997                           
   998                           ;nombres.c: 258: while(*c != 0)
   999                           
  1000                           ;incstack = 0
  1001  007C5C  D009               	goto	l95
  1002  007C5E                     
  1003                           ;nombres.c: 259: {
  1004                           ;nombres.c: 260: lcd_dwr(*c++);
  1005  007C5E  C047  FFD9         	movff	lcd_msg@c,fsr2l
  1006  007C62  C048  FFDA         	movff	lcd_msg@c+1,fsr2h
  1007  007C66  50DF               	movf	indf2,w,c
  1008  007C68  EC68  F03E         	call	_lcd_dwr
  1009  007C6C  4A47               	infsnz	lcd_msg@c,f,c
  1010  007C6E  2A48               	incf	lcd_msg@c+1,f,c
  1011  007C70                     l95:
  1012  007C70  C047  FFD9         	movff	lcd_msg@c,fsr2l
  1013  007C74  C048  FFDA         	movff	lcd_msg@c+1,fsr2h
  1014  007C78  50DF               	movf	indf2,w,c
  1015  007C7A  B4D8               	btfsc	status,2,c
  1016  007C7C  0012               	return	
  1017  007C7E  D7EF               	goto	l96
  1018  007C80                     __end_of_lcd_msg:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           postdec1	equ	0xFE5
  1027                           fsr1l	equ	0xFE1
  1028                           indf2	equ	0xFDF
  1029                           postinc2	equ	0xFDE
  1030                           postdec2	equ	0xFDD
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8
  1034                           
  1035 ;; *************** function _lcd_dwr *****************
  1036 ;; Defined at:
  1037 ;;		line 244 in file "nombres.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  x               1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  x               1    1[COMRAM] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1051 ;;      Params:         0       0       0       0       0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1053 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1054 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		_lcd_lat
  1060 ;; This function is called by:
  1061 ;;		_lcd_msg
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text5
  1066  007CD0                     __ptext5:
  1067                           	opt stack 0
  1068  007CD0                     _lcd_dwr:
  1069                           	opt stack 28
  1070                           
  1071                           ;incstack = 0
  1072                           ;lcd_dwr@x stored from wreg
  1073  007CD0  6E46               	movwf	lcd_dwr@x,c
  1074                           
  1075                           ;nombres.c: 246: PORTDbits.RD0 = 1;
  1076  007CD2  8083               	bsf	3971,0,c	;volatile
  1077                           
  1078                           ;nombres.c: 247: PORTD &= 0x0F;
  1079  007CD4  0E0F               	movlw	15
  1080  007CD6  1683               	andwf	3971,f,c	;volatile
  1081                           
  1082                           ;nombres.c: 248: PORTD |= ((x & 0xF0));
  1083  007CD8  5046               	movf	lcd_dwr@x,w,c
  1084  007CDA  0BF0               	andlw	240
  1085  007CDC  1283               	iorwf	3971,f,c	;volatile
  1086                           
  1087                           ;nombres.c: 249: lcd_lat();
  1088  007CDE  EC1D  F03E         	call	_lcd_lat	;wreg free
  1089                           
  1090                           ;nombres.c: 251: PORTD &= 0x0F;
  1091  007CE2  0E0F               	movlw	15
  1092  007CE4  1683               	andwf	3971,f,c	;volatile
  1093                           
  1094                           ;nombres.c: 252: PORTD |= ((x & 0x0F)<<4);
  1095  007CE6  C046  F045         	movff	lcd_dwr@x,??_lcd_dwr
  1096  007CEA  0E0F               	movlw	15
  1097  007CEC  1645               	andwf	??_lcd_dwr,f,c
  1098  007CEE  3845               	swapf	??_lcd_dwr,w,c
  1099  007CF0  0BF0               	andlw	240
  1100  007CF2  1283               	iorwf	3971,f,c	;volatile
  1101                           
  1102                           ;nombres.c: 253: lcd_lat();
  1103  007CF4  EC1D  F03E         	call	_lcd_lat	;wreg free
  1104  007CF8  0012               	return		;funcret
  1105  007CFA                     __end_of_lcd_dwr:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           postdec1	equ	0xFE5
  1114                           fsr1l	equ	0xFE1
  1115                           indf2	equ	0xFDF
  1116                           postinc2	equ	0xFDE
  1117                           postdec2	equ	0xFDD
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function _lcd_cmd *****************
  1123 ;; Defined at:
  1124 ;;		line 224 in file "nombres.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  x               1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  x               1    1[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		_lcd_lat
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;;		_IncrementaPersona
  1150 ;;		_lcd_init
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text6
  1155  007CA6                     __ptext6:
  1156                           	opt stack 0
  1157  007CA6                     _lcd_cmd:
  1158                           	opt stack 28
  1159                           
  1160                           ;incstack = 0
  1161                           ;lcd_cmd@x stored from wreg
  1162  007CA6  6E46               	movwf	lcd_cmd@x,c
  1163                           
  1164                           ;nombres.c: 226: PORTDbits.RD0 = 0;
  1165  007CA8  9083               	bcf	3971,0,c	;volatile
  1166                           
  1167                           ;nombres.c: 227: PORTD &= 0x0F;
  1168  007CAA  0E0F               	movlw	15
  1169  007CAC  1683               	andwf	3971,f,c	;volatile
  1170                           
  1171                           ;nombres.c: 228: PORTD |= (x & 0xF0);
  1172  007CAE  5046               	movf	lcd_cmd@x,w,c
  1173  007CB0  0BF0               	andlw	240
  1174  007CB2  1283               	iorwf	3971,f,c	;volatile
  1175                           
  1176                           ;nombres.c: 229: lcd_lat();
  1177  007CB4  EC1D  F03E         	call	_lcd_lat	;wreg free
  1178                           
  1179                           ;nombres.c: 231: PORTD &= 0x0F;
  1180  007CB8  0E0F               	movlw	15
  1181  007CBA  1683               	andwf	3971,f,c	;volatile
  1182                           
  1183                           ;nombres.c: 232: PORTD |= ((x & 0x0F)<<4);
  1184  007CBC  C046  F045         	movff	lcd_cmd@x,??_lcd_cmd
  1185  007CC0  0E0F               	movlw	15
  1186  007CC2  1645               	andwf	??_lcd_cmd,f,c
  1187  007CC4  3845               	swapf	??_lcd_cmd,w,c
  1188  007CC6  0BF0               	andlw	240
  1189  007CC8  1283               	iorwf	3971,f,c	;volatile
  1190                           
  1191                           ;nombres.c: 233: lcd_lat();
  1192  007CCA  EC1D  F03E         	call	_lcd_lat	;wreg free
  1193  007CCE  0012               	return		;funcret
  1194  007CD0                     __end_of_lcd_cmd:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           fsr1l	equ	0xFE1
  1204                           indf2	equ	0xFDF
  1205                           postinc2	equ	0xFDE
  1206                           postdec2	equ	0xFDD
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _lcd_lat *****************
  1212 ;; Defined at:
  1213 ;;		line 216 in file "nombres.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_lcd_cmd
  1237 ;;		_lcd_cmd_hf
  1238 ;;		_lcd_dwr
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text7
  1243  007C3A                     __ptext7:
  1244                           	opt stack 0
  1245  007C3A                     _lcd_lat:
  1246                           	opt stack 28
  1247                           
  1248                           ;nombres.c: 219: PORTDbits.RD2 = 1;
  1249                           
  1250                           ;incstack = 0
  1251  007C3A  8483               	bsf	3971,2,c	;volatile
  1252                           
  1253                           ;nombres.c: 220: _delay((unsigned long)((1)*(4000000/4000.0)));
  1254  007C3C  0EC8               	movlw	200
  1255  007C3E                     u297:
  1256  007C3E  D000               	nop2	
  1257  007C40  2EE8               	decfsz	wreg,f,c
  1258  007C42  D7FD               	bra	u297
  1259                           
  1260                           ;nombres.c: 221: PORTDbits.RD2 = 0;
  1261  007C44  9483               	bcf	3971,2,c	;volatile
  1262  007C46  0012               	return		;funcret
  1263  007C48                     __end_of_lcd_lat:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           fsr1l	equ	0xFE1
  1273                           indf2	equ	0xFDF
  1274                           postinc2	equ	0xFDE
  1275                           postdec2	equ	0xFDD
  1276                           fsr2h	equ	0xFDA
  1277                           fsr2l	equ	0xFD9
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _IncrementaNumero *****************
  1281 ;; Defined at:
  1282 ;;		line 194 in file "nombres.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    1
  1303 ;; This function calls:
  1304 ;;		_Display
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text8
  1311  007C80                     __ptext8:
  1312                           	opt stack 0
  1313  007C80                     _IncrementaNumero:
  1314                           	opt stack 29
  1315                           
  1316                           ;nombres.c: 196: Display(contN);
  1317                           
  1318                           ;incstack = 0
  1319  007C80  C053  F045         	movff	_contN,Display@N	;volatile
  1320  007C84  C054  F046         	movff	_contN+1,Display@N+1	;volatile
  1321  007C88  EC54  F03F         	call	_Display	;wreg free
  1322                           
  1323                           ;nombres.c: 197: contN++;
  1324  007C8C  4A53               	infsnz	_contN,f,c	;volatile
  1325  007C8E  2A54               	incf	_contN+1,f,c	;volatile
  1326                           
  1327                           ;nombres.c: 198: if(contN == 10) contN = 0;
  1328  007C90  0E0A               	movlw	10
  1329  007C92  1853               	xorwf	_contN,w,c	;volatile
  1330  007C94  1054               	iorwf	_contN+1,w,c	;volatile
  1331  007C96  A4D8               	btfss	status,2,c
  1332  007C98  D004               	goto	l72
  1333  007C9A  0E00               	movlw	0
  1334  007C9C  6E54               	movwf	_contN+1,c	;volatile
  1335  007C9E  0E00               	movlw	0
  1336  007CA0  6E53               	movwf	_contN,c	;volatile
  1337  007CA2                     l72:
  1338                           
  1339                           ;nombres.c: 199: return 'x';
  1340  007CA2  0E78               	movlw	120
  1341  007CA4  0012               	return	
  1342  007CA6                     __end_of_IncrementaNumero:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           postdec1	equ	0xFE5
  1351                           fsr1l	equ	0xFE1
  1352                           indf2	equ	0xFDF
  1353                           postinc2	equ	0xFDE
  1354                           postdec2	equ	0xFDD
  1355                           fsr2h	equ	0xFDA
  1356                           fsr2l	equ	0xFD9
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _Display *****************
  1360 ;; Defined at:
  1361 ;;		line 202 in file "nombres.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  N               2    0[COMRAM] int 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  i               2    9[COMRAM] int 
  1366 ;;  valor           2    7[COMRAM] int 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1376 ;;      Params:         2       0       0       0       0       0       0       0       0
  1377 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1378 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1379 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1380 ;;Total ram usage:       11 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;;		_IncrementaNumero
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text9
  1391  007EA8                     __ptext9:
  1392                           	opt stack 0
  1393  007EA8                     _Display:
  1394                           	opt stack 29
  1395                           
  1396                           ;nombres.c: 204: int valor,i;
  1397                           ;nombres.c: 205: for (i= 0; i<8; i++)
  1398                           
  1399                           ;incstack = 0
  1400  007EA8  0E00               	movlw	0
  1401  007EAA  6E4F               	movwf	Display@i+1,c
  1402  007EAC  0E00               	movlw	0
  1403  007EAE  6E4E               	movwf	Display@i,c
  1404  007EB0                     l923:
  1405  007EB0  BE4F               	btfsc	Display@i+1,7,c
  1406  007EB2  D006               	goto	l76
  1407  007EB4  504F               	movf	Display@i+1,w,c
  1408  007EB6  E145               	bnz	l80
  1409  007EB8  0E08               	movlw	8
  1410  007EBA  5C4E               	subwf	Display@i,w,c
  1411  007EBC  B0D8               	btfsc	status,0,c
  1412  007EBE  0012               	return	
  1413  007EC0                     l76:
  1414                           
  1415                           ;nombres.c: 206: {
  1416                           ;nombres.c: 207: valor = Digit[N][i];
  1417  007EC0  C045  F047         	movff	Display@N,??_Display
  1418  007EC4  C046  F048         	movff	Display@N+1,??_Display+1
  1419  007EC8  90D8               	bcf	status,0,c
  1420  007ECA  3647               	rlcf	??_Display,f,c
  1421  007ECC  3648               	rlcf	??_Display+1,f,c
  1422  007ECE  90D8               	bcf	status,0,c
  1423  007ED0  3647               	rlcf	??_Display,f,c
  1424  007ED2  3648               	rlcf	??_Display+1,f,c
  1425  007ED4  90D8               	bcf	status,0,c
  1426  007ED6  3647               	rlcf	??_Display,f,c
  1427  007ED8  3648               	rlcf	??_Display+1,f,c
  1428  007EDA  0E60               	movlw	low _Digit
  1429  007EDC  6E49               	movwf	(??_Display+2)& (0+255),c
  1430  007EDE  0E00               	movlw	high _Digit
  1431  007EE0  6E4A               	movwf	(??_Display+3)& (0+255),c
  1432  007EE2  5047               	movf	??_Display,w,c
  1433  007EE4  2649               	addwf	??_Display+2,f,c
  1434  007EE6  5048               	movf	??_Display+1,w,c
  1435  007EE8  224A               	addwfc	??_Display+3,f,c
  1436  007EEA  504E               	movf	Display@i,w,c
  1437  007EEC  2449               	addwf	??_Display+2,w,c
  1438  007EEE  6ED9               	movwf	fsr2l,c
  1439  007EF0  504F               	movf	Display@i+1,w,c
  1440  007EF2  204A               	addwfc	??_Display+3,w,c
  1441  007EF4  6EDA               	movwf	fsr2h,c
  1442  007EF6  50DF               	movf	indf2,w,c
  1443  007EF8  6E4B               	movwf	(??_Display+4)& (0+255),c
  1444  007EFA  504B               	movf	??_Display+4,w,c
  1445  007EFC  6E4C               	movwf	Display@valor,c
  1446  007EFE  6A4D               	clrf	Display@valor+1,c
  1447                           
  1448                           ;nombres.c: 208: if(valor == 1)
  1449  007F00  044C               	decf	Display@valor,w,c
  1450  007F02  104D               	iorwf	Display@valor+1,w,c
  1451  007F04  A4D8               	btfss	status,2,c
  1452  007F06  D00D               	goto	l78
  1453                           
  1454                           ;nombres.c: 209: { LATB |= (1<<i);}
  1455  007F08  C04E  F047         	movff	Display@i,??_Display
  1456  007F0C  0E01               	movlw	1
  1457  007F0E  6E48               	movwf	(??_Display+1)& (0+255),c
  1458  007F10  2A47               	incf	??_Display,f,c
  1459  007F12  D002               	goto	u184
  1460  007F14                     u185:
  1461  007F14  90D8               	bcf	status,0,c
  1462  007F16  3648               	rlcf	??_Display+1,f,c
  1463  007F18                     u184:
  1464  007F18  2E47               	decfsz	??_Display,f,c
  1465  007F1A  D7FC               	goto	u185
  1466  007F1C  5048               	movf	??_Display+1,w,c
  1467  007F1E  128A               	iorwf	3978,f,c	;volatile
  1468  007F20  D00D               	goto	l79
  1469  007F22                     l78:
  1470                           
  1471                           ;nombres.c: 210: else
  1472                           ;nombres.c: 211: {LATB &= ~(1<<i);}
  1473  007F22  C04E  F047         	movff	Display@i,??_Display
  1474  007F26  0E01               	movlw	1
  1475  007F28  6E48               	movwf	(??_Display+1)& (0+255),c
  1476  007F2A  2A47               	incf	??_Display,f,c
  1477  007F2C  D002               	goto	u194
  1478  007F2E                     u195:
  1479  007F2E  90D8               	bcf	status,0,c
  1480  007F30  3648               	rlcf	??_Display+1,f,c
  1481  007F32                     u194:
  1482  007F32  2E47               	decfsz	??_Display,f,c
  1483  007F34  D7FC               	goto	u195
  1484  007F36  5048               	movf	??_Display+1,w,c
  1485  007F38  0AFF               	xorlw	255
  1486  007F3A  168A               	andwf	3978,f,c	;volatile
  1487  007F3C                     l79:
  1488  007F3C  4A4E               	infsnz	Display@i,f,c
  1489  007F3E  2A4F               	incf	Display@i+1,f,c
  1490  007F40  D7B7               	goto	l923
  1491  007F42                     l80:
  1492  007F42  0012               	return		;funcret
  1493  007F44                     __end_of_Display:
  1494                           	opt stack 0
  1495  0000                     tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           fsr1l	equ	0xFE1
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           postdec2	equ	0xFDD
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           postinc0	equ	0xFEE
  1514                           wreg	equ	0xFE8
  1515                           postdec1	equ	0xFE5
  1516                           fsr1l	equ	0xFE1
  1517                           indf2	equ	0xFDF
  1518                           postinc2	equ	0xFDE
  1519                           postdec2	equ	0xFDD
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524                           	psect	rparam
  1525  0000                     tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postdec1	equ	0xFE5
  1532                           fsr1l	equ	0xFE1
  1533                           indf2	equ	0xFDF
  1534                           postinc2	equ	0xFDE
  1535                           postdec2	equ	0xFDD
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        210
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      86
    BANK0           160      0     142
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 16
		 -> b4(BANK0[16]), b3(COMRAM[13]), b2(BANK0[15]), b1(BANK0[16]), 
		 -> p4(BANK0[15]), p3(COMRAM[14]), p2(COMRAM[13]), p1(COMRAM[12]), 

    b	PTR unsigned char [4] size(2) Largest target is 16
		 -> b4(BANK0[16]), b3(COMRAM[13]), b2(BANK0[15]), b1(BANK0[16]), 

    p	PTR unsigned char [4] size(2) Largest target is 15
		 -> p4(BANK0[15]), p3(COMRAM[14]), p2(COMRAM[13]), p1(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_Display
    _lcd_init->_lcd_cmd
    _IncrementaPersona->_lcd_msg
    _lcd_msg->_lcd_dwr
    _IncrementaNumero->_Display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1583
                                             11 COMRAM     3     3      0
                            _Display
                   _IncrementaNumero
                  _IncrementaPersona
                            _lcd_cmd
                           _lcd_init
                            _lcd_msg
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      66
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      22
                                              0 COMRAM     1     1      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (1) _IncrementaPersona                                    0     0      0     437
                            _lcd_cmd
                            _lcd_msg
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     393
                                              2 COMRAM     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      44
                                              0 COMRAM     2     2      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      44
                                              0 COMRAM     2     2      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IncrementaNumero                                     0     0      0     309
                            _Display
 ---------------------------------------------------------------------------------
 (2) _Display                                             11     9      2     309
                                              0 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display
   _IncrementaNumero
     _Display
   _IncrementaPersona
     _lcd_cmd
       _lcd_lat
     _lcd_msg
       _lcd_dwr
         _lcd_lat
   _lcd_cmd
     _lcd_lat
   _lcd_init
     _lcd_cmd
       _lcd_lat
     _lcd_cmd_hf
       _lcd_lat
   _lcd_msg
     _lcd_dwr
       _lcd_lat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      56       1       90.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E4      20        0.0%
DATA                 0      0      E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Mar  4 15:59:13 2018

                         _b 0001                           _p 0009                 lcd_cmd_hf@x 0045  
                        l60 7FAE                          l61 7FCC                          l63 7FDA  
                        l80 7F42                          l72 7CA2                          l59 7FF4  
                        l76 7EC0                          l68 7E16                          l78 7F22  
                        l79 7F3C                          l95 7C70                          l96 7C5E  
                        _b1 00C0                          _b2 00D0                          _b3 001F  
                        _b4 00B0                          _p1 0039                          _p2 002C  
                        _p3 0011                          _p4 00DF                 __CFG_BORV$3 000000  
__size_of_IncrementaPersona 0062                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                         l923 7EB0  
              __CFG_CPB$OFF 000000                         u184 7F18                         u185 7F14  
                       u194 7F32                __CFG_CPD$OFF 000000                         u195 7F2E  
                       u267 7F6E                         u277 7FB4                         u287 7FE8  
                       u297 7C3E                __CFG_BOR$OFF 000000                         wreg 000FE8  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        _LATB 000F8A  
              __CFG_PWRT$ON 000000                        _cont 0055                        _main 7F44  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        start 0000               __CFG_IESO$OFF 000000  
             __CFG_MCLRE$ON 000000             __end_of_Display 7F44                ___param_bank 000000  
             __CFG_PLLDIV$2 000000                       ?_main 0045                       _PORTD 000F83  
             __CFG_USBDIV$1 000000                       _TRISB 000F93                       _TRISD 000F95  
                     _Digit 0060               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000             __end_of_lcd_cmd 7CD0             __end_of_lcd_lat 7C48  
           __end_of_lcd_dwr 7CFA             __end_of_lcd_msg 7C80               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _contN 0053                       tablat 000FF5                       status 000FD8  
            __CFG_ICPRT$OFF 000000             __initialization 7D6A                __end_of_main 8000  
                    ??_main 0050               __activetblptr 000000             __CFG_CCP2MX$OFF 000000  
                 ??_Display 0047              __CFG_XINST$OFF 000000            __end_of_lcd_init 7D26  
            __CFG_STVREN$ON 000000   __size_of_IncrementaNumero 0026                   ??_lcd_cmd 0045  
                 ??_lcd_lat 0045                   ??_lcd_dwr 0045                   ??_lcd_msg 0049  
              __pdataCOMRAM 0001                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 7DB2  
           __CFG_PBADEN$OFF 000000             __CFG_FOSC$XT_XT 000000               ___rparam_used 000001  
            __pcstackCOMRAM 0045                __pidataBANK0 7E1A                  _lcd_cmd_hf 7C48  
                 ?_lcd_init 0045             __CFG_VREGEN$OFF 000000                     _Display 7EA8  
                   __Hparam 0000                     __Lparam 0000            _IncrementaNumero 7C80  
                   __pcinit 7D6A                     __ramtop 0800                     __ptext0 7F44  
                   __ptext1 7CFA                     __ptext2 7C48                     __ptext3 7DB8  
                   __ptext4 7C5C                     __ptext5 7CD0                     __ptext6 7CA6  
                   __ptext7 7C3A                     __ptext8 7C80                     __ptext9 7EA8  
                   _lcd_cmd 7CA6                     _lcd_lat 7C3A                     _lcd_dwr 7CD0  
                   _lcd_msg 7C5C                  ??_lcd_init 0047        end_of_initialization 7DB2  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc2 000FDE                   _PORTCbits 000F82                   _PORTDbits 000F83  
               ?_lcd_cmd_hf 0045                   _TRISCbits 000F94               __pidataCOMRAM 7D26  
       start_initialization 7D6A         __size_of_lcd_cmd_hf 0014                 __pdataBANK0 0060  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0053    __end_of_IncrementaNumero 7CA6  
         __size_of_lcd_init 002C                    ?_Display 0045                    ?_lcd_cmd 0045  
                  ?_lcd_lat 0045                    ?_lcd_dwr 0045                    ?_lcd_msg 0047  
          __CFG_WDTPS$32768 000000                    Display@N 0045                    Display@i 004E  
              ??_lcd_cmd_hf 0045                   main@boton 0052                   copy_data0 7D7E  
                 copy_data1 7D9E            __size_of_Display 009C                    __Hrparam 0000  
                  __Lrparam 0000          __end_of_lcd_cmd_hf 7C5C           _IncrementaPersona 7DB8  
          __size_of_lcd_cmd 002A            __size_of_lcd_lat 000E            __size_of_lcd_dwr 002A  
          __size_of_lcd_msg 0024          ?_IncrementaPersona 0045                    _lcd_init 7CFA  
       ??_IncrementaPersona 0049               __size_of_main 00BC                    lcd_cmd@x 0046  
                  lcd_dwr@x 0046                    lcd_msg@c 0047   __end_of_IncrementaPersona 7E1A  
     __CFG_CPUDIV$OSC1_PLL2 000000           ?_IncrementaNumero 0045          ??_IncrementaNumero 0050  
              Display@valor 004C  
