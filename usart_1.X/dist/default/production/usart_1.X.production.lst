

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 19 20:35:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4520 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _PORTB	set	3969
    57  0000                     _PORTD	set	3971
    58  0000                     _RCREG	set	4014
    59  0000                     _PIR1bits	set	3998
    60  0000                     _LATCbits	set	3979
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _SPBRG	set	4015
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _BAUDCONbits	set	4024
    65  0000                     _TRISCbits	set	3988
    66                           
    67                           	psect	smallconst
    68  000600                     __psmallconst:
    69                           	opt stack 0
    70  000600  00                 	db	0
    71  000601                     STR_1:
    72  000601  50                 	db	80	;'P'
    73  000602  75                 	db	117	;'u'
    74  000603  65                 	db	101	;'e'
    75  000604  72                 	db	114	;'r'
    76  000605  74                 	db	116	;'t'
    77  000606  6F                 	db	111	;'o'
    78  000607  20                 	db	32
    79  000608  53                 	db	83	;'S'
    80  000609  65                 	db	101	;'e'
    81  00060A  72                 	db	114	;'r'
    82  00060B  69                 	db	105	;'i'
    83  00060C  61                 	db	97	;'a'
    84  00060D  6C                 	db	108	;'l'
    85  00060E  00                 	db	0
    86  00060F                     STR_2:
    87  00060F  68                 	db	104	;'h'
    88  000610  6F                 	db	111	;'o'
    89  000611  6C                 	db	108	;'l'
    90  000612  61                 	db	97	;'a'
    91  000613  00                 	db	0
    92                           
    93                           ; #config settings
    94  000614  00                 	db	0	; dummy byte at the end
    95  0000                     
    96                           	psect	cinit
    97  0008B6                     __pcinit:
    98                           	opt stack 0
    99  0008B6                     start_initialization:
   100                           	opt stack 0
   101  0008B6                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Clear objects allocated to COMRAM (9 bytes)
   105  0008B6  EE00  F00B         	lfsr	0,__pbssCOMRAM
   106  0008BA  0E09               	movlw	9
   107  0008BC                     clear_0:
   108  0008BC  6AEE               	clrf	postinc0,c
   109  0008BE  06E8               	decf	wreg,f,c
   110  0008C0  E1FD               	bnz	clear_0
   111  0008C2                     end_of_initialization:
   112                           	opt stack 0
   113  0008C2                     __end_of__initialization:
   114                           	opt stack 0
   115  0008C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   116  0008C4  6EF8               	movwf	tblptru,c
   117  0008C6  0100               	movlb	0
   118  0008C8  EF6A  F003         	goto	_main	;jump to C main() function
   119                           tblptru	equ	0xFF8
   120                           postinc0	equ	0xFEE
   121                           wreg	equ	0xFE8
   122                           
   123                           	psect	bssCOMRAM
   124  00000B                     __pbssCOMRAM:
   125                           	opt stack 0
   126  00000B                     _value:
   127                           	opt stack 0
   128  00000B                     	ds	8
   129  000013                     _lcd:
   130                           	opt stack 0
   131  000013                     	ds	1
   132                           tblptru	equ	0xFF8
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000001                     ??_lcd_lat:
   140  000001                     manda@dato:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0x0
   144  000001                     	ds	1
   145  000002                     ??_lcd_dwr:
   146  000002                     ??_lcd_cmd:
   147  000002                     lcd_cmd_hf@x:
   148                           	opt stack 0
   149                           
   150                           ; 1 bytes @ 0x1
   151  000002                     	ds	1
   152  000003                     lcd_cmd@x:
   153                           	opt stack 0
   154  000003                     lcd_dwr@x:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x2
   158  000003                     	ds	1
   159  000004                     ??_lcd_init:
   160  000004                     lcd_putc@c:
   161                           	opt stack 0
   162  000004                     lcd_gotoxy@y:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x3
   166  000004                     	ds	1
   167  000005                     ??_lcd_gotoxy:
   168  000005                     lcd_msg@c:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172  000005                     	ds	1
   173  000006                     lcd_gotoxy@x:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x5
   177  000006                     	ds	1
   178  000007                     lcd_gotoxy@ADDRESS:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x6
   182  000007                     	ds	1
   183  000008                     ??_main:
   184                           
   185                           ; 1 bytes @ 0x7
   186  000008                     	ds	2
   187  00000A                     main@c:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x9
   191  00000A                     	ds	1
   192                           tblptru	equ	0xFF8
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196 ;;
   197 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   198 ;;
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 33 in file "usart_1.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  c               1    9[COMRAM] volatile unsigned char 
   206 ;; Return value:  Size  Location     Type
   207 ;;                  2   32[None  ] int 
   208 ;; Registers used:
   209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   215 ;;      Params:         0       0       0       0       0       0       0
   216 ;;      Locals:         1       0       0       0       0       0       0
   217 ;;      Temps:          2       0       0       0       0       0       0
   218 ;;      Totals:         3       0       0       0       0       0       0
   219 ;;Total ram usage:        3 bytes
   220 ;; Hardware stack levels required when called:    4
   221 ;; This function calls:
   222 ;;		_lcd_gotoxy
   223 ;;		_lcd_init
   224 ;;		_lcd_msg
   225 ;;		_lcd_putc
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  0006D4                     __ptext0:
   233                           	opt stack 0
   234  0006D4                     _main:
   235                           	opt stack 27
   236                           
   237                           ;usart_1.c: 35: volatile unsigned char c;
   238                           ;usart_1.c: 37: TRISCbits.TRISC4 = 0;
   239                           
   240                           ;incstack = 0
   241  0006D4  9894               	bcf	3988,4,c	;volatile
   242                           
   243                           ;usart_1.c: 46: BAUDCONbits.BRG16 = 0;
   244  0006D6  96B8               	bcf	4024,3,c	;volatile
   245                           
   246                           ;usart_1.c: 47: TXSTAbits.SYNC = 0;
   247  0006D8  98AC               	bcf	4012,4,c	;volatile
   248                           
   249                           ;usart_1.c: 48: TXSTAbits.BRGH = 1;
   250  0006DA  84AC               	bsf	4012,2,c	;volatile
   251                           
   252                           ;usart_1.c: 49: SPBRG = 103;
   253  0006DC  0E67               	movlw	103
   254  0006DE  6EAF               	movwf	4015,c	;volatile
   255                           
   256                           ;usart_1.c: 50: TXSTAbits.TXEN = 1;
   257  0006E0  8AAC               	bsf	4012,5,c	;volatile
   258                           
   259                           ;usart_1.c: 52: RCSTAbits.SPEN = 1;
   260  0006E2  8EAB               	bsf	4011,7,c	;volatile
   261                           
   262                           ;usart_1.c: 53: RCSTAbits.CREN = 1;
   263  0006E4  88AB               	bsf	4011,4,c	;volatile
   264                           
   265                           ;usart_1.c: 54: TRISCbits.TRISC7 = 1;
   266  0006E6  8E94               	bsf	3988,7,c	;volatile
   267                           
   268                           ;usart_1.c: 55: TRISCbits.TRISC6 = 1;
   269  0006E8  8C94               	bsf	3988,6,c	;volatile
   270                           
   271                           ;usart_1.c: 57: lcd_init();
   272  0006EA  EC0B  F003         	call	_lcd_init	;wreg free
   273                           
   274                           ;usart_1.c: 58: lcd_msg("Puerto Serial");
   275  0006EE  0E01               	movlw	low STR_1
   276  0006F0  6E05               	movwf	lcd_msg@c,c
   277  0006F2  0E06               	movlw	high STR_1
   278  0006F4  6E06               	movwf	lcd_msg@c+1,c
   279  0006F6  EC39  F004         	call	_lcd_msg	;wreg free
   280                           
   281                           ;usart_1.c: 59: LATCbits.LATC4=0;
   282  0006FA  988B               	bcf	3979,4,c	;volatile
   283  0006FC                     
   284                           ;usart_1.c: 61: {
   285                           ;usart_1.c: 62: LATCbits.LATC4^=1;
   286  0006FC  788B               	btg	3979,4,c	;volatile
   287                           
   288                           ;usart_1.c: 63: lcd_gotoxy(1,2); lcd_msg("hola");
   289  0006FE  0E02               	movlw	2
   290  000700  6E04               	movwf	lcd_gotoxy@y,c
   291  000702  0E01               	movlw	1
   292  000704  EC09  F004         	call	_lcd_gotoxy
   293  000708  0E0F               	movlw	low STR_2
   294  00070A  6E05               	movwf	lcd_msg@c,c
   295  00070C  0E06               	movlw	high STR_2
   296  00070E  6E06               	movwf	lcd_msg@c+1,c
   297  000710  EC39  F004         	call	_lcd_msg	;wreg free
   298  000714  AA9E               	btfss	3998,5,c	;volatile
   299  000716  D7FE               	goto	l35
   300                           
   301                           ;usart_1.c: 65: c = RCREG;
   302  000718  CFAE F00A          	movff	4014,main@c	;volatile
   303                           
   304                           ;usart_1.c: 66: LATCbits.LATC4^= 1;
   305  00071C  788B               	btg	3979,4,c	;volatile
   306                           
   307                           ;usart_1.c: 67: lcd_gotoxy(1,2); lcd_putc(c);
   308  00071E  0E02               	movlw	2
   309  000720  6E04               	movwf	lcd_gotoxy@y,c
   310  000722  0E01               	movlw	1
   311  000724  EC09  F004         	call	_lcd_gotoxy
   312  000728  500A               	movf	main@c,w,c	;volatile
   313  00072A  ECEC  F003         	call	_lcd_putc
   314                           
   315                           ;usart_1.c: 68: _delay((unsigned long)((1500)*(16000000/4000.0)));
   316  00072E  0E1F               	movlw	31
   317  000730  6E09               	movwf	(??_main+1)& (0+255),c
   318  000732  0E71               	movlw	113
   319  000734  6E08               	movwf	??_main& (0+255),c
   320  000736  0E1E               	movlw	30
   321  000738                     u107:
   322  000738  2EE8               	decfsz	wreg,f,c
   323  00073A  D7FE               	bra	u107
   324  00073C  2E08               	decfsz	??_main& (0+255),f,c
   325  00073E  D7FC               	bra	u107
   326  000740  2E09               	decfsz	(??_main+1)& (0+255),f,c
   327  000742  D7FA               	bra	u107
   328  000744  D000               	nop2	
   329  000746  D7DA               	goto	l33
   330  000748                     __end_of_main:
   331                           	opt stack 0
   332                           tblptru	equ	0xFF8
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336 ;; *************** function _lcd_msg *****************
   337 ;; Defined at:
   338 ;;		line 101 in file "../MyLibs/lcd4a.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;  c               2    4[COMRAM] PTR unsigned char 
   341 ;;		 -> STR_2(5), STR_1(14), 
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   353 ;;      Params:         2       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0
   356 ;;      Totals:         2       0       0       0       0       0       0
   357 ;;Total ram usage:        2 bytes
   358 ;; Hardware stack levels used:    1
   359 ;; Hardware stack levels required when called:    3
   360 ;; This function calls:
   361 ;;		_lcd_putc
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text1
   368  000872                     __ptext1:
   369                           	opt stack 0
   370  000872                     _lcd_msg:
   371                           	opt stack 27
   372                           
   373                           ;lcd4a.c: 103: while(*c != 0)
   374                           
   375                           ;incstack = 0
   376  000872  D00A               	goto	l75
   377  000874                     
   378                           ;lcd4a.c: 104: {
   379                           ;lcd4a.c: 105: lcd_putc(*c++);
   380  000874  C005  FFF6         	movff	lcd_msg@c,tblptrl
   381  000878  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   382  00087C                     	if	0	;tblptru may be non-zero
   383  00087C                     	endif
   384  00087C                     	if	0	;tblptru may be non-zero
   385  00087C                     	endif
   386  00087C  0008               	tblrd		*
   387  00087E  50F5               	movf	tablat,w,c
   388  000880  ECEC  F003         	call	_lcd_putc
   389  000884  4A05               	infsnz	lcd_msg@c,f,c
   390  000886  2A06               	incf	lcd_msg@c+1,f,c
   391  000888                     l75:
   392  000888  C005  FFF6         	movff	lcd_msg@c,tblptrl
   393  00088C  C006  FFF7         	movff	lcd_msg@c+1,tblptrh
   394  000890                     	if	0	;tblptru may be non-zero
   395  000890                     	endif
   396  000890                     	if	0	;tblptru may be non-zero
   397  000890                     	endif
   398  000890  0008               	tblrd		*
   399  000892  50F5               	movf	tablat,w,c
   400  000894  0900               	iorlw	0
   401  000896  B4D8               	btfsc	status,2,c
   402  000898  0012               	return	
   403  00089A  D7EC               	goto	l76
   404  00089C                     __end_of_lcd_msg:
   405                           	opt stack 0
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           status	equ	0xFD8
   413                           
   414 ;; *************** function _lcd_putc *****************
   415 ;; Defined at:
   416 ;;		line 66 in file "../MyLibs/lcd4a.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  c               1    wreg     unsigned char 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  c               1    3[COMRAM] unsigned char 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         0       0       0       0       0       0       0
   431 ;;      Locals:         1       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0
   433 ;;      Totals:         1       0       0       0       0       0       0
   434 ;;Total ram usage:        1 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    2
   437 ;; This function calls:
   438 ;;		_lcd_cmd
   439 ;;		_lcd_dwr
   440 ;; This function is called by:
   441 ;;		_main
   442 ;;		_lcd_msg
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447  0007D8                     __ptext2:
   448                           	opt stack 0
   449  0007D8                     _lcd_putc:
   450                           	opt stack 28
   451                           
   452                           ;incstack = 0
   453                           ;lcd_putc@c stored from wreg
   454  0007D8  6E04               	movwf	lcd_putc@c,c
   455                           
   456                           ;lcd4a.c: 68: switch(c)
   457  0007DA  D010               	goto	l63
   458  0007DC                     
   459                           ;lcd4a.c: 71: lcd_cmd(0x01);
   460  0007DC  0E01               	movlw	1
   461  0007DE  ECA4  F003         	call	_lcd_cmd
   462                           
   463                           ;lcd4a.c: 72: break;
   464  0007E2  0012               	return	
   465  0007E4                     
   466                           ;lcd4a.c: 74: lcd_cmd(3);
   467  0007E4  0E03               	movlw	3
   468  0007E6  ECA4  F003         	call	_lcd_cmd
   469                           
   470                           ;lcd4a.c: 75: break;
   471  0007EA  0012               	return	
   472  0007EC                     
   473                           ;lcd4a.c: 77: lcd_cmd(0x10);
   474  0007EC  0E10               	movlw	16
   475  0007EE  ECA4  F003         	call	_lcd_cmd
   476                           
   477                           ;lcd4a.c: 78: break;
   478  0007F2  0012               	return	
   479  0007F4                     
   480                           ;lcd4a.c: 80: lcd_dwr(c);
   481  0007F4  5004               	movf	lcd_putc@c,w,c
   482  0007F6  ECC9  F003         	call	_lcd_dwr
   483                           
   484                           ;lcd4a.c: 82: }
   485                           
   486                           ;lcd4a.c: 81: break;
   487  0007FA  0012               	return	
   488  0007FC                     l63:
   489  0007FC  5004               	movf	lcd_putc@c,w,c
   490                           
   491                           ; Switch size 1, requested type "space"
   492                           ; Number of cases is 3, Range of values is 8 to 12
   493                           ; switch strategies available:
   494                           ; Name         Instructions Cycles
   495                           ; simple_byte           10     6 (average)
   496                           ;	Chosen strategy is simple_byte
   497  0007FE  0A08               	xorlw	8	; case 8
   498  000800  B4D8               	btfsc	status,2,c
   499  000802  D7F4               	goto	l67
   500  000804  0A02               	xorlw	2	; case 10
   501  000806  B4D8               	btfsc	status,2,c
   502  000808  D7ED               	goto	l66
   503  00080A  0A06               	xorlw	6	; case 12
   504  00080C  B4D8               	btfsc	status,2,c
   505  00080E  D7E6               	goto	l64
   506  000810  D7F1               	goto	l68
   507  000812                     __end_of_lcd_putc:
   508                           	opt stack 0
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _lcd_dwr *****************
   518 ;; Defined at:
   519 ;;		line 86 in file "../MyLibs/lcd4a.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  x               1    wreg     unsigned char 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  x               1    2[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   533 ;;      Params:         0       0       0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0       0       0
   535 ;;      Temps:          1       0       0       0       0       0       0
   536 ;;      Totals:         2       0       0       0       0       0       0
   537 ;;Total ram usage:        2 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		_lcd_lat
   542 ;;		_manda
   543 ;; This function is called by:
   544 ;;		_lcd_putc
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549  000792                     __ptext3:
   550                           	opt stack 0
   551  000792                     _lcd_dwr:
   552                           	opt stack 28
   553                           
   554                           ;incstack = 0
   555                           ;lcd_dwr@x stored from wreg
   556  000792  6E03               	movwf	lcd_dwr@x,c
   557                           
   558                           ;lcd4a.c: 88: (*(&(*(&PORTD + 0x09))) |= (1<<(5)));
   559  000794  8A8C               	bsf	3980,5,c	;volatile
   560                           
   561                           ;lcd4a.c: 89: lcd &= 0x0F;
   562  000796  0E0F               	movlw	15
   563  000798  1613               	andwf	_lcd,f,c
   564                           
   565                           ;lcd4a.c: 90: lcd |= ((x & 0xF0));
   566  00079A  5003               	movf	lcd_dwr@x,w,c
   567  00079C  0BF0               	andlw	240
   568  00079E  1213               	iorwf	_lcd,f,c
   569                           
   570                           ;lcd4a.c: 91: manda(lcd);
   571  0007A0  5013               	movf	_lcd,w,c
   572  0007A2  EC23  F004         	call	_manda
   573                           
   574                           ;lcd4a.c: 92: lcd_lat();
   575  0007A6  EC66  F004         	call	_lcd_lat	;wreg free
   576                           
   577                           ;lcd4a.c: 93: _delay((unsigned long)((4)*(16000000/4000.0)));
   578  0007AA  0E15               	movlw	21
   579  0007AC  6E02               	movwf	??_lcd_dwr& (0+255),c
   580  0007AE  0EC6               	movlw	198
   581  0007B0                     u117:
   582  0007B0  2EE8               	decfsz	wreg,f,c
   583  0007B2  D7FE               	bra	u117
   584  0007B4  2E02               	decfsz	??_lcd_dwr& (0+255),f,c
   585  0007B6  D7FC               	bra	u117
   586  0007B8  D000               	nop2	
   587                           
   588                           ;lcd4a.c: 95: lcd &= 0x0F;
   589  0007BA  0E0F               	movlw	15
   590  0007BC  1613               	andwf	_lcd,f,c
   591                           
   592                           ;lcd4a.c: 96: lcd |= ((x & 0x0F)<<4);
   593  0007BE  C003  F002         	movff	lcd_dwr@x,??_lcd_dwr
   594  0007C2  0E0F               	movlw	15
   595  0007C4  1602               	andwf	??_lcd_dwr,f,c
   596  0007C6  3802               	swapf	??_lcd_dwr,w,c
   597  0007C8  0BF0               	andlw	240
   598  0007CA  1213               	iorwf	_lcd,f,c
   599                           
   600                           ;lcd4a.c: 97: manda(lcd);
   601  0007CC  5013               	movf	_lcd,w,c
   602  0007CE  EC23  F004         	call	_manda
   603                           
   604                           ;lcd4a.c: 98: lcd_lat();
   605  0007D2  EC66  F004         	call	_lcd_lat	;wreg free
   606  0007D6  0012               	return		;funcret
   607  0007D8                     __end_of_lcd_dwr:
   608                           	opt stack 0
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           status	equ	0xFD8
   616                           
   617 ;; *************** function _lcd_init *****************
   618 ;; Defined at:
   619 ;;		line 135 in file "../MyLibs/lcd4a.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   633 ;;      Params:         0       0       0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0
   635 ;;      Temps:          1       0       0       0       0       0       0
   636 ;;      Totals:         1       0       0       0       0       0       0
   637 ;;Total ram usage:        1 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		_lcd_cmd
   642 ;;		_lcd_cmd_hf
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text4
   649  000616                     __ptext4:
   650                           	opt stack 0
   651  000616                     _lcd_init:
   652                           	opt stack 28
   653                           
   654                           ;lcd4a.c: 143: (*(&(*(&PORTB + 0x12))) &=~ (1<<(7)));
   655                           
   656                           ;incstack = 0
   657  000616  9E93               	bcf	3987,7,c	;volatile
   658                           
   659                           ;lcd4a.c: 144: (*(&(*(&PORTB + 0x12))) &=~ (1<<(6)));
   660  000618  9C93               	bcf	3987,6,c	;volatile
   661                           
   662                           ;lcd4a.c: 145: (*(&(*(&PORTB + 0x12))) &=~ (1<<(5)));
   663  00061A  9A93               	bcf	3987,5,c	;volatile
   664                           
   665                           ;lcd4a.c: 146: (*(&(*(&PORTB + 0x12))) &=~ (1<<(4)));
   666  00061C  9893               	bcf	3987,4,c	;volatile
   667                           
   668                           ;lcd4a.c: 147: (*(&(*(&PORTD + 0x12))) &=~ (1<<(5)));
   669  00061E  9A95               	bcf	3989,5,c	;volatile
   670                           
   671                           ;lcd4a.c: 149: (*(&(*(&PORTD + 0x12))) &=~ (1<<(6)));
   672  000620  9C95               	bcf	3989,6,c	;volatile
   673                           
   674                           ;lcd4a.c: 152: (*(&(*(&PORTD + 0x12))) &=~ (1<<(7)));
   675  000622  9E95               	bcf	3989,7,c	;volatile
   676                           
   677                           ;lcd4a.c: 155: (*(&(*(&PORTD + 0x09))) &=~ (1<<(6)));
   678  000624  9C8C               	bcf	3980,6,c	;volatile
   679                           
   680                           ;lcd4a.c: 158: lcd_cmd_hf(0x30);
   681  000626  0E30               	movlw	48
   682  000628  EC4E  F004         	call	_lcd_cmd_hf
   683                           
   684                           ;lcd4a.c: 159: _delay((unsigned long)((15)*(16000000/4000.0)));
   685  00062C  0E4E               	movlw	78
   686  00062E  6E04               	movwf	??_lcd_init& (0+255),c
   687  000630  0EEB               	movlw	235
   688  000632                     u127:
   689  000632  2EE8               	decfsz	wreg,f,c
   690  000634  D7FE               	bra	u127
   691  000636  2E04               	decfsz	??_lcd_init& (0+255),f,c
   692  000638  D7FC               	bra	u127
   693  00063A  F000               	nop	
   694                           
   695                           ;lcd4a.c: 160: lcd_cmd_hf(0x30);
   696  00063C  0E30               	movlw	48
   697  00063E  EC4E  F004         	call	_lcd_cmd_hf
   698                           
   699                           ;lcd4a.c: 161: _delay((unsigned long)((3)*(16000000/4000.0)));
   700  000642  0E10               	movlw	16
   701  000644  6E04               	movwf	??_lcd_init& (0+255),c
   702  000646  0E94               	movlw	148
   703  000648                     u137:
   704  000648  2EE8               	decfsz	wreg,f,c
   705  00064A  D7FE               	bra	u137
   706  00064C  2E04               	decfsz	??_lcd_init& (0+255),f,c
   707  00064E  D7FC               	bra	u137
   708  000650  D000               	nop2	
   709                           
   710                           ;lcd4a.c: 162: lcd_cmd_hf(0x30);
   711  000652  0E30               	movlw	48
   712  000654  EC4E  F004         	call	_lcd_cmd_hf
   713                           
   714                           ;lcd4a.c: 163: _delay((unsigned long)((15)*(16000000/4000.0)));
   715  000658  0E4E               	movlw	78
   716  00065A  6E04               	movwf	??_lcd_init& (0+255),c
   717  00065C  0EEB               	movlw	235
   718  00065E                     u147:
   719  00065E  2EE8               	decfsz	wreg,f,c
   720  000660  D7FE               	bra	u147
   721  000662  2E04               	decfsz	??_lcd_init& (0+255),f,c
   722  000664  D7FC               	bra	u147
   723  000666  F000               	nop	
   724                           
   725                           ;lcd4a.c: 164: lcd_cmd_hf(0x20);
   726  000668  0E20               	movlw	32
   727  00066A  EC4E  F004         	call	_lcd_cmd_hf
   728                           
   729                           ;lcd4a.c: 165: _delay((unsigned long)((6)*(16000000/4000.0)));
   730  00066E  0E20               	movlw	32
   731  000670  6E04               	movwf	??_lcd_init& (0+255),c
   732  000672  0E2A               	movlw	42
   733  000674                     u157:
   734  000674  2EE8               	decfsz	wreg,f,c
   735  000676  D7FE               	bra	u157
   736  000678  2E04               	decfsz	??_lcd_init& (0+255),f,c
   737  00067A  D7FC               	bra	u157
   738                           
   739                           ;lcd4a.c: 166: lcd_cmd(0x28);
   740  00067C  0E28               	movlw	40
   741  00067E  ECA4  F003         	call	_lcd_cmd
   742                           
   743                           ;lcd4a.c: 167: _delay((unsigned long)((6)*(16000000/4000.0)));
   744  000682  0E20               	movlw	32
   745  000684  6E04               	movwf	??_lcd_init& (0+255),c
   746  000686  0E2A               	movlw	42
   747  000688                     u167:
   748  000688  2EE8               	decfsz	wreg,f,c
   749  00068A  D7FE               	bra	u167
   750  00068C  2E04               	decfsz	??_lcd_init& (0+255),f,c
   751  00068E  D7FC               	bra	u167
   752                           
   753                           ;lcd4a.c: 168: lcd_cmd(0x0E);
   754  000690  0E0E               	movlw	14
   755  000692  ECA4  F003         	call	_lcd_cmd
   756                           
   757                           ;lcd4a.c: 169: _delay((unsigned long)((6)*(16000000/4000.0)));
   758  000696  0E20               	movlw	32
   759  000698  6E04               	movwf	??_lcd_init& (0+255),c
   760  00069A  0E2A               	movlw	42
   761  00069C                     u177:
   762  00069C  2EE8               	decfsz	wreg,f,c
   763  00069E  D7FE               	bra	u177
   764  0006A0  2E04               	decfsz	??_lcd_init& (0+255),f,c
   765  0006A2  D7FC               	bra	u177
   766                           
   767                           ;lcd4a.c: 170: lcd_cmd(0x01);
   768  0006A4  0E01               	movlw	1
   769  0006A6  ECA4  F003         	call	_lcd_cmd
   770                           
   771                           ;lcd4a.c: 171: _delay((unsigned long)((6)*(16000000/4000.0)));
   772  0006AA  0E20               	movlw	32
   773  0006AC  6E04               	movwf	??_lcd_init& (0+255),c
   774  0006AE  0E2A               	movlw	42
   775  0006B0                     u187:
   776  0006B0  2EE8               	decfsz	wreg,f,c
   777  0006B2  D7FE               	bra	u187
   778  0006B4  2E04               	decfsz	??_lcd_init& (0+255),f,c
   779  0006B6  D7FC               	bra	u187
   780                           
   781                           ;lcd4a.c: 172: lcd_cmd(0x06);
   782  0006B8  0E06               	movlw	6
   783  0006BA  ECA4  F003         	call	_lcd_cmd
   784                           
   785                           ;lcd4a.c: 173: _delay((unsigned long)((6)*(16000000/4000.0)));
   786  0006BE  0E20               	movlw	32
   787  0006C0  6E04               	movwf	??_lcd_init& (0+255),c
   788  0006C2  0E2A               	movlw	42
   789  0006C4                     u197:
   790  0006C4  2EE8               	decfsz	wreg,f,c
   791  0006C6  D7FE               	bra	u197
   792  0006C8  2E04               	decfsz	??_lcd_init& (0+255),f,c
   793  0006CA  D7FC               	bra	u197
   794                           
   795                           ;lcd4a.c: 174: lcd_cmd(0x80);
   796  0006CC  0E80               	movlw	128
   797  0006CE  ECA4  F003         	call	_lcd_cmd
   798  0006D2  0012               	return		;funcret
   799  0006D4                     __end_of_lcd_init:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _lcd_cmd_hf *****************
   810 ;; Defined at:
   811 ;;		line 56 in file "../MyLibs/lcd4a.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  x               1    wreg     unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  x               1    1[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   825 ;;      Params:         0       0       0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0
   828 ;;      Totals:         1       0       0       0       0       0       0
   829 ;;Total ram usage:        1 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    1
   832 ;; This function calls:
   833 ;;		_lcd_lat
   834 ;;		_manda
   835 ;; This function is called by:
   836 ;;		_lcd_init
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text5
   841  00089C                     __ptext5:
   842                           	opt stack 0
   843  00089C                     _lcd_cmd_hf:
   844                           	opt stack 28
   845                           
   846                           ;incstack = 0
   847                           ;lcd_cmd_hf@x stored from wreg
   848  00089C  6E02               	movwf	lcd_cmd_hf@x,c
   849                           
   850                           ;lcd4a.c: 58: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
   851  00089E  9A8C               	bcf	3980,5,c	;volatile
   852                           
   853                           ;lcd4a.c: 59: lcd &= 0x0F;
   854  0008A0  0E0F               	movlw	15
   855  0008A2  1613               	andwf	_lcd,f,c
   856                           
   857                           ;lcd4a.c: 60: lcd |= (x & 0xF0);
   858  0008A4  5002               	movf	lcd_cmd_hf@x,w,c
   859  0008A6  0BF0               	andlw	240
   860  0008A8  1213               	iorwf	_lcd,f,c
   861                           
   862                           ;lcd4a.c: 61: manda(lcd);
   863  0008AA  5013               	movf	_lcd,w,c
   864  0008AC  EC23  F004         	call	_manda
   865                           
   866                           ;lcd4a.c: 62: lcd_lat();
   867  0008B0  EC66  F004         	call	_lcd_lat	;wreg free
   868  0008B4  0012               	return		;funcret
   869  0008B6                     __end_of_lcd_cmd_hf:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _lcd_gotoxy *****************
   880 ;; Defined at:
   881 ;;		line 114 in file "../MyLibs/lcd4a.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  x               1    wreg     unsigned char 
   884 ;;  y               1    3[COMRAM] unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  x               1    5[COMRAM] unsigned char 
   887 ;;  ADDRESS         1    6[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   897 ;;      Params:         1       0       0       0       0       0       0
   898 ;;      Locals:         2       0       0       0       0       0       0
   899 ;;      Temps:          1       0       0       0       0       0       0
   900 ;;      Totals:         4       0       0       0       0       0       0
   901 ;;Total ram usage:        4 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    2
   904 ;; This function calls:
   905 ;;		_lcd_cmd
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text6
   912  000812                     __ptext6:
   913                           	opt stack 0
   914  000812                     _lcd_gotoxy:
   915                           	opt stack 28
   916                           
   917                           ;incstack = 0
   918                           ;lcd_gotoxy@x stored from wreg
   919  000812  6E06               	movwf	lcd_gotoxy@x,c
   920                           
   921                           ;lcd4a.c: 116: unsigned char ADDRESS= 0x00U;
   922  000814  0E00               	movlw	0
   923  000816  6E07               	movwf	lcd_gotoxy@ADDRESS,c
   924                           
   925                           ;lcd4a.c: 118: switch(y)
   926  000818  D005               	goto	l81
   927  00081A                     
   928                           ;lcd4a.c: 124: ADDRESS = 0xC0;
   929  00081A  0EC0               	movlw	192
   930  00081C  D001               	goto	L2
   931  00081E                     
   932                           ;lcd4a.c: 127: ADDRESS = 0x80;
   933  00081E  0E80               	movlw	128
   934  000820                     L2:
   935  000820  6E07               	movwf	lcd_gotoxy@ADDRESS,c
   936                           
   937                           ;lcd4a.c: 130: }
   938                           
   939                           ;lcd4a.c: 128: break;
   940  000822  D008               	goto	l83
   941  000824                     l81:
   942  000824  5004               	movf	lcd_gotoxy@y,w,c
   943                           
   944                           ; Switch size 1, requested type "space"
   945                           ; Number of cases is 2, Range of values is 1 to 2
   946                           ; switch strategies available:
   947                           ; Name         Instructions Cycles
   948                           ; simple_byte            7     4 (average)
   949                           ;	Chosen strategy is simple_byte
   950  000826  0A01               	xorlw	1	; case 1
   951  000828  B4D8               	btfsc	status,2,c
   952  00082A  D7F9               	goto	l85
   953  00082C  0A03               	xorlw	3	; case 2
   954  00082E  B4D8               	btfsc	status,2,c
   955  000830  D7F4               	goto	l84
   956  000832  D7F5               	goto	l85
   957  000834                     l83:
   958                           
   959                           ;lcd4a.c: 131: ADDRESS = (unsigned char)((unsigned char)(ADDRESS + x) - (1U));
   960  000834  5007               	movf	lcd_gotoxy@ADDRESS,w,c
   961  000836  2406               	addwf	lcd_gotoxy@x,w,c
   962  000838  6E05               	movwf	??_lcd_gotoxy& (0+255),c
   963  00083A  0405               	decf	??_lcd_gotoxy,w,c
   964  00083C  6E07               	movwf	lcd_gotoxy@ADDRESS,c
   965                           
   966                           ;lcd4a.c: 132: lcd_cmd(ADDRESS);
   967  00083E  5007               	movf	lcd_gotoxy@ADDRESS,w,c
   968  000840  ECA4  F003         	call	_lcd_cmd
   969  000844  0012               	return		;funcret
   970  000846                     __end_of_lcd_gotoxy:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           status	equ	0xFD8
   979                           
   980 ;; *************** function _lcd_cmd *****************
   981 ;; Defined at:
   982 ;;		line 40 in file "../MyLibs/lcd4a.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  x               1    wreg     unsigned char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  x               1    2[COMRAM] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         1       0       0       0       0       0       0
   998 ;;      Temps:          1       0       0       0       0       0       0
   999 ;;      Totals:         2       0       0       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    1
  1003 ;; This function calls:
  1004 ;;		_lcd_lat
  1005 ;;		_manda
  1006 ;; This function is called by:
  1007 ;;		_lcd_putc
  1008 ;;		_lcd_gotoxy
  1009 ;;		_lcd_init
  1010 ;;		_lcd_setcursor_vb
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text7
  1015  000748                     __ptext7:
  1016                           	opt stack 0
  1017  000748                     _lcd_cmd:
  1018                           	opt stack 28
  1019                           
  1020                           ;incstack = 0
  1021                           ;lcd_cmd@x stored from wreg
  1022  000748  6E03               	movwf	lcd_cmd@x,c
  1023                           
  1024                           ;lcd4a.c: 42: lcd = 0;
  1025  00074A  0E00               	movlw	0
  1026  00074C  6E13               	movwf	_lcd,c
  1027                           
  1028                           ;lcd4a.c: 43: (*(&(*(&PORTD + 0x09))) &=~ (1<<(5)));
  1029  00074E  9A8C               	bcf	3980,5,c	;volatile
  1030                           
  1031                           ;lcd4a.c: 44: lcd &= 0x0F;
  1032  000750  0E0F               	movlw	15
  1033  000752  1613               	andwf	_lcd,f,c
  1034                           
  1035                           ;lcd4a.c: 45: lcd |= (x & 0xF0);
  1036  000754  5003               	movf	lcd_cmd@x,w,c
  1037  000756  0BF0               	andlw	240
  1038  000758  1213               	iorwf	_lcd,f,c
  1039                           
  1040                           ;lcd4a.c: 46: manda(lcd);
  1041  00075A  5013               	movf	_lcd,w,c
  1042  00075C  EC23  F004         	call	_manda
  1043                           
  1044                           ;lcd4a.c: 47: lcd_lat();
  1045  000760  EC66  F004         	call	_lcd_lat	;wreg free
  1046                           
  1047                           ;lcd4a.c: 48: _delay((unsigned long)((4)*(16000000/4000.0)));
  1048  000764  0E15               	movlw	21
  1049  000766  6E02               	movwf	??_lcd_cmd& (0+255),c
  1050  000768  0EC6               	movlw	198
  1051  00076A                     u207:
  1052  00076A  2EE8               	decfsz	wreg,f,c
  1053  00076C  D7FE               	bra	u207
  1054  00076E  2E02               	decfsz	??_lcd_cmd& (0+255),f,c
  1055  000770  D7FC               	bra	u207
  1056  000772  D000               	nop2	
  1057                           
  1058                           ;lcd4a.c: 50: lcd &= 0x0F;
  1059  000774  0E0F               	movlw	15
  1060  000776  1613               	andwf	_lcd,f,c
  1061                           
  1062                           ;lcd4a.c: 51: lcd |= ((x & 0x0F)<<4);
  1063  000778  C003  F002         	movff	lcd_cmd@x,??_lcd_cmd
  1064  00077C  0E0F               	movlw	15
  1065  00077E  1602               	andwf	??_lcd_cmd,f,c
  1066  000780  3802               	swapf	??_lcd_cmd,w,c
  1067  000782  0BF0               	andlw	240
  1068  000784  1213               	iorwf	_lcd,f,c
  1069                           
  1070                           ;lcd4a.c: 52: manda(lcd);
  1071  000786  5013               	movf	_lcd,w,c
  1072  000788  EC23  F004         	call	_manda
  1073                           
  1074                           ;lcd4a.c: 53: lcd_lat();
  1075  00078C  EC66  F004         	call	_lcd_lat	;wreg free
  1076  000790  0012               	return		;funcret
  1077  000792                     __end_of_lcd_cmd:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           postinc0	equ	0xFEE
  1084                           wreg	equ	0xFE8
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _manda *****************
  1088 ;; Defined at:
  1089 ;;		line 178 in file "../MyLibs/lcd4a.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  dato            1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  dato            1    0[COMRAM] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         0       0       0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0
  1106 ;;      Totals:         1       0       0       0       0       0       0
  1107 ;;Total ram usage:        1 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_lcd_cmd
  1113 ;;		_lcd_cmd_hf
  1114 ;;		_lcd_dwr
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text8
  1119  000846                     __ptext8:
  1120                           	opt stack 0
  1121  000846                     _manda:
  1122                           	opt stack 28
  1123                           
  1124                           ;incstack = 0
  1125                           ;manda@dato stored from wreg
  1126  000846  6E01               	movwf	manda@dato,c
  1127                           
  1128                           ;lcd4a.c: 180: if(dato & (1 << 4)) (*(&(*(&PORTB + 0x09))) |= (1<<(4)));
  1129  000848  A801               	btfss	manda@dato,4,c
  1130  00084A  D002               	goto	l92
  1131  00084C  888A               	bsf	3978,4,c	;volatile
  1132  00084E  D001               	goto	l93
  1133  000850                     l92:
  1134                           
  1135                           ;lcd4a.c: 181: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(4)));
  1136  000850  988A               	bcf	3978,4,c	;volatile
  1137  000852                     l93:
  1138                           
  1139                           ;lcd4a.c: 182: if(dato & (1 << 5)) (*(&(*(&PORTB + 0x09))) |= (1<<(5)));
  1140  000852  AA01               	btfss	manda@dato,5,c
  1141  000854  D002               	goto	l94
  1142  000856  8A8A               	bsf	3978,5,c	;volatile
  1143  000858  D001               	goto	l95
  1144  00085A                     l94:
  1145                           
  1146                           ;lcd4a.c: 183: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(5)));
  1147  00085A  9A8A               	bcf	3978,5,c	;volatile
  1148  00085C                     l95:
  1149                           
  1150                           ;lcd4a.c: 184: if(dato & (1 << 6)) (*(&(*(&PORTB + 0x09))) |= (1<<(6)));
  1151  00085C  AC01               	btfss	manda@dato,6,c
  1152  00085E  D002               	goto	l96
  1153  000860  8C8A               	bsf	3978,6,c	;volatile
  1154  000862  D001               	goto	l97
  1155  000864                     l96:
  1156                           
  1157                           ;lcd4a.c: 185: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(6)));
  1158  000864  9C8A               	bcf	3978,6,c	;volatile
  1159  000866                     l97:
  1160                           
  1161                           ;lcd4a.c: 186: if(dato & (1 << 7)) (*(&(*(&PORTB + 0x09))) |= (1<<(7)));
  1162  000866  AE01               	btfss	manda@dato,7,c
  1163  000868  D002               	goto	l98
  1164  00086A  8E8A               	bsf	3978,7,c	;volatile
  1165  00086C  0012               	return	
  1166  00086E                     l98:
  1167                           
  1168                           ;lcd4a.c: 187: else (*(&(*(&PORTB + 0x09))) &=~ (1<<(7)));
  1169  00086E  9E8A               	bcf	3978,7,c	;volatile
  1170  000870  0012               	return	
  1171  000872                     __end_of_manda:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _lcd_lat *****************
  1182 ;; Defined at:
  1183 ;;		line 29 in file "../MyLibs/lcd4a.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1197 ;;      Params:         0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0       0       0
  1200 ;;      Totals:         1       0       0       0       0       0       0
  1201 ;;Total ram usage:        1 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_lcd_cmd
  1207 ;;		_lcd_cmd_hf
  1208 ;;		_lcd_dwr
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text9
  1213  0008CC                     __ptext9:
  1214                           	opt stack 0
  1215  0008CC                     _lcd_lat:
  1216                           	opt stack 28
  1217                           
  1218                           ;lcd4a.c: 33: (*(&(*(&PORTD + 0x09))) |= (1<<(7)));
  1219                           
  1220                           ;incstack = 0
  1221  0008CC  8E8C               	bsf	3980,7,c	;volatile
  1222                           
  1223                           ;lcd4a.c: 35: _delay((unsigned long)((3)*(16000000/4000.0)));
  1224  0008CE  0E10               	movlw	16
  1225  0008D0  6E01               	movwf	??_lcd_lat& (0+255),c
  1226  0008D2  0E94               	movlw	148
  1227  0008D4                     u217:
  1228  0008D4  2EE8               	decfsz	wreg,f,c
  1229  0008D6  D7FE               	bra	u217
  1230  0008D8  2E01               	decfsz	??_lcd_lat& (0+255),f,c
  1231  0008DA  D7FC               	bra	u217
  1232  0008DC  D000               	nop2	
  1233                           
  1234                           ;lcd4a.c: 36: (*(&(*(&PORTD + 0x09))) &=~ (1<<(7)));
  1235  0008DE  9E8C               	bcf	3980,7,c	;volatile
  1236  0008E0  0012               	return		;funcret
  1237  0008E2                     __end_of_lcd_lat:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           postinc0	equ	0xFEE
  1244                           wreg	equ	0xFE8
  1245                           status	equ	0xFD8
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           status	equ	0xFD8
  1253                           
  1254                           	psect	rparam
  1255  0000                     tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10      19
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_lcd_gotoxy
    _lcd_msg->_lcd_putc
    _lcd_putc->_lcd_cmd
    _lcd_putc->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_manda
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd_hf->_manda
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_manda

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1140
                                              7 COMRAM     3     3      0
                         _lcd_gotoxy
                           _lcd_init
                            _lcd_msg
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2     407
                                              4 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0     210
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      75
                                              1 COMRAM     1     1      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     335
                                              3 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      90
                                              1 COMRAM     2     2      0
                            _lcd_lat
                              _manda
 ---------------------------------------------------------------------------------
 (3) _manda                                                1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_cmd
       _lcd_lat
       _manda
   _lcd_init
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_cmd_hf
       _lcd_lat
       _manda
   _lcd_msg
     _lcd_putc
       _lcd_cmd
         _lcd_lat
         _manda
       _lcd_dwr
         _lcd_lat
         _manda
   _lcd_putc
     _lcd_cmd
       _lcd_lat
       _manda
     _lcd_dwr
       _lcd_lat
       _manda

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A      13       1       15.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      15        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 19 20:35:36 2018

            lcd_cmd_hf@x 0002                       l33 06FC                       l35 0714  
                     l63 07FC                       l64 07DC                       l81 0824  
                     l66 07E4                       l83 0834                       l67 07EC  
                     l75 0888                       l92 0850                       l84 081A  
                     l68 07F4                       l76 0874                       l93 0852  
                     l85 081E                       l94 085A                       l95 085C  
                     l96 0864                       l97 0866                       l98 086E  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
           __CFG_CPB$OFF 000000                      u107 0738                      u117 07B0  
                    u207 076A                      u127 0632                      u217 08D4  
                    u137 0648                      u147 065E                      u157 0674  
                    u167 0688                      u177 069C             __CFG_CPD$OFF 000000  
                    u187 06B0                      u197 06C4                      _lcd 0013  
                    wreg 000FE8              lcd_gotoxy@x 0006              lcd_gotoxy@y 0004  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 0601  
                   STR_2 060F             __CFG_PWRT$ON 000000                     _main 06D4  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_cmd 0792          __end_of_lcd_lat 08E2          __end_of_lcd_dwr 07D8  
        __end_of_lcd_msg 089C            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _manda 0846  
                  _value 000B                    main@c 000A           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 08B6  
           __end_of_main 0748                   ??_main 0008            __activetblptr 000002  
                 ?_manda 0001           __CFG_XINST$OFF 000000         __end_of_lcd_init 06D4  
       __end_of_lcd_putc 0812           __CFG_STVREN$ON 000000                   clear_0 08BC  
              ??_lcd_cmd 0002                ??_lcd_lat 0001                ??_lcd_dwr 0002  
              ??_lcd_msg 0007             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8        lcd_gotoxy@ADDRESS 0007  
             __accesstop 0080  __end_of__initialization 08C2          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_manda 0872  
                ??_manda 0001       __CFG_CCP2MX$PORTBE 000000               _lcd_cmd_hf 089C  
             _lcd_gotoxy 0812                ?_lcd_init 0001                ?_lcd_putc 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 08B6                  __ramtop 0600                  __ptext0 06D4  
                __ptext1 0872                  __ptext2 07D8                  __ptext3 0792  
                __ptext4 0616                  __ptext5 089C                  __ptext6 0812  
                __ptext7 0748                  __ptext8 0846                  __ptext9 08CC  
                _lcd_cmd 0748                  _lcd_lat 08CC                  _lcd_dwr 0792  
                _lcd_msg 0872               ??_lcd_init 0004               ??_lcd_putc 0004  
   end_of_initialization 08C2            __Lmediumconst 0000                _RCSTAbits 000FAB  
                postinc0 000FEE              ?_lcd_cmd_hf 0001                _TRISCbits 000F94  
            ?_lcd_gotoxy 0004                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
    start_initialization 08B6      __size_of_lcd_cmd_hf 001A      __size_of_lcd_gotoxy 0034  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000B        __size_of_lcd_init 00BE  
      __size_of_lcd_putc 003A                 ?_lcd_cmd 0001                 ?_lcd_lat 0001  
               ?_lcd_dwr 0001                 ?_lcd_msg 0005              __smallconst 0600  
         __size_of_manda 002C                 _LATCbits 000F8B                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000             ??_lcd_cmd_hf 0002                lcd_putc@c 0004  
           ??_lcd_gotoxy 0005                manda@dato 0001                 __Hrparam 0000  
               __Lrparam 0000       __end_of_lcd_cmd_hf 08B6       __end_of_lcd_gotoxy 0846  
       __size_of_lcd_cmd 004A         __size_of_lcd_lat 0016         __size_of_lcd_dwr 0046  
       __size_of_lcd_msg 002A                 _lcd_init 0616                 _lcd_putc 07D8  
          __size_of_main 0074                 lcd_cmd@x 0003                 lcd_dwr@x 0003  
               lcd_msg@c 0005  
